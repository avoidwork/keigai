{"version":3,"file":"keigai.min.js","sources":["keigai.js"],"names":["_this","this","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","__proto__","_prototypeProperties","child","staticProps","instanceProps","defineProperties","global","document","location","navigator","server","process","MAX","VERSIONS","CACHE","EVENTS","Buffer","Promise","undefined","localStorage","XMLHttpRequest","WeakMap","btoa","webWorker","Blob","Worker","external","format","http","https","lib","mongodb","url","RENDER","TIME","WORKER","require","MongoClient","regex","after_space","allow","allow_cors","and","args","auth","bool","caps","cdata","checked_disabled","complete_loaded","csv_quote","del","domain","down","endslash","eol_nl","element_update","get_headers","get_remove_set","hash","header_replace","header_value_replace","html","http_body","http_ports","host","ie","ip","is_xml","json_maybe","json_wrap","klass","no","not_dotnotation","not_endpoint","null_undefined","number","number_format_1","number_format_2","number_present","number_string","number_string_object","object_type","patch","primitive","priv","protocol","put_post","radio_checkbox","root","select","selector_is","selector_complex","set_del","space_hyphen","string_object","svg","top_bottom","word","xdomainrequest","xml","LRU","max","arguments","cache","first","last","length","evict","remove","get","key","item","set","previous","next","LRUItem","lru","factory","Observable","_this2","arg","limit","listeners","hooks","dispatch","ev","_len","Array","_key","utility","iterate","i","handler","apply","scope","hook","target","addEventListener","Error","label","invalidArguments","self","obj","off","id","on","_this3","uuid","array","keys","once","_this4","_len2","_key2","unhook","removeEventListener","observable","Base","observer","listener","addListener","_len3","_key3","dispatchEvent","_len4","_key4","emit","_len5","_key5","_len6","_key6","removeListener","add","contains","push","binIndex","min","idx","val","Math","floor","cast","o","isNaN","from","chunk","size","result","nth","round","start","clear","clone","shallow","indexOf","collect","fn","map","compact","diff","filter","test","count","obj1","obj2","each","async","offset","call","repeat","eachReverse","empty","equal","json","encode","fill","l","flat","reduce","a","b","concat","forEach","fromObject","mingle","index","indexed","v","intersect","itr","iterator","done","keepIf","keySort","query","sub","replace","queries","string","explode","split","sorts","braceS","braceE","s","e","sort","Function","join","n","sorted","mean","sum","median","dupe","mid","odd","merge","mode","values","k","parse","range","rassoc","reject","end","remaining","slice","removeIf","removeWhile","rest","rindex","rotate","series","ceil","types","c","d","toString","divisor","total","low","lower","lowered","stddev","sqrt","variance","prev","cur","take","toObject","ar","unique","math","sqr","zip","x","expire","uri","expired","expires","Date","getTime","href","property","permission","KXMLHttpRequest","xhr","defer","deferred","client","ab","ArrayBuffer","blob","doc","Document","userAgent","version","trim","allows","verb","toLowerCase","bit","Boolean","permissions","cors","headers","type","getAllResponseHeaders","items","header","setSeconds","getSeconds","exec","timestamp","isEmpty","responseText","decode","csv","overrideMimeType","responseXML","valid","cached","partial","read","write","delete","unknown","jsonp","callback","cbid","keigai","genId","clearTimers","resolve","element","destroy","src","dom","requestTimeout","kxhr","Deferred","_len7","_key7","request","XDomainRequest","payload","contentType","notAvailable","state","readyState","status","_resheaders","response","delay","open","toUpperCase","hasOwnProperty","etag","setRequestHeader","withCredentials","xdr","shared","r","t","redirect","serverError","isUrl","Location","then","serverUnauthorized","serverForbidden","serverInvalidMethod","send","methodNotAllowed","scroll","dest","ms","scrollPos","pos","bezier","window","scrollTo","scrollX","scrollY","delimiter","RegExp","rows","shift","row","coerce","prepare","input","output","DataListFilter","list","debounce","filters","fields","teardown","update","escape","pageIndex","refresh","ref","attr","DataGrid","store","sortable","options","filtered","sortOrder","order","class","record","error","dump","records","find","data","where","field","stop","hasClass","splice","grid","template","width","css","trimmed","el","innerHTML","capitalize","unCamelCase","unhyphenate","style","data-field","addClass","parentNode","listFiltered","listFilter","currentTarget","_len8","_key8","_len9","_key9","_len10","_key10","DataList","current","emptyMsg","noData","mutation","pageSize","pageRange","pagination","placeholder","page","pages","more","data-page","removeClass","reg","registry","ceiling","match","walk","compile","li","render","callbacks","childNodes","reverse","$","lists","nodeName","MutationObserver","observe","childList","subtree","loaded","promise","onDone","onAlways","onFail","always","fail","success","failure","appendTo","appendChild","namespaceURI","getAttributeNS","setAttributeNS","selected","removeAttribute","setAttribute","getAttribute","reset","frag","fragment","body","createElementNS","createElement","prependChild","after","insertBefore","nextSibling","before","toCamelCase","removeChild","disable","disabled","bubbles","cancelable","CustomEvent","createEvent","initCustomEvent","enable","querySelectorAll","createDocumentFragment","has","classList","hidden","display","is","position","left","top","right","bottom","height","offsetWidth","offsetHeight","offsetParent","offsetTop","offsetLeft","removeAttr","removeAttributeNS","serialize","children","elements","name","encodeURIComponent","paddingLeft","paddingRight","borderLeft","borderRight","paddingTop","paddingBottom","borderTop","borderBottom","text","textContent","toggleClass","toggle","expectedProperty","checked","silent","JSON","stringify","expectedNumber","expectedObject","invalidStateNoHeaders","invalidStateNoSync","invalidStateNotOpen","invalidStateNotSending","invalidStateNotUsable","datastoreNoPrevVersion","upgrade","_len11","_key11","pop","P","S0","Q0","Q1","Q2","C0","C1","C2","C3","pow","dist","num1","num2","abs","even","every","p","charAt","substring","half","base","parseFloat","parseInt","random","direction","toFixed","pCatch","pResolve","pReject","pThen","_len12","_key12","_len13","_key13","catch","DataStore","autosave","credentials","events","Accept","ignore","indexes","source","versions","versioning","views","batch","sync","deferreds","when","reindex","save","buildUri","parsed","pathname","resave","delComplete","purge","custom","f","Number","results","databaseMoreThanOne","only","storage","tmp","setIndexes","restore","_this5","functions","clauses","cond","worker","postMessage","cmd","b1","overwrite","method","odata","rdefer","ogdata","ndata","op","path","setComplete","change","setExpires","delimter","kdx","setUri","_this6","authorization","Authorization","decodeURIComponent","view","mongo","session","sessionStorage","connect","db","close","collection","_id","toArray","recs","rec","safe","w","upsert","defer2","getItem","removeItem","setItem","recordUri","undo","all","hyphenate","camel","isBoolean","isNumber","singular","toFunction","uncapitalize","timer","repeating","BlobBuilder","MSBlobBuilder","WebKitBlobBuilder","MozBlobBuilder","append","getBlob","clearTimeout","extend","pattern","modifiers","curry","_len14","_key14","cfn","_len15","_key15","setTimeout","setImmediate","nextTick","getElementById","getElementsByClassName","getElementsByTagName","domId","warning","message","stack","toUTCString","log","String","console","ts","msg","toLocaleTimeString","y","hostname","port","search","queryString","_len16","_key16","_len17","args2","_key17","prevent","preventDefault","qstring","prop","race","_len18","_key18","now","recursive","stopPropagation","srcElement","strip","substr","_len19","_key19","onerror","err","terminate","onmessage","UNSENT","OPENED","HEADERS_RECEIVED","LOADING","DONE","ERR_REFUSED","ready","user-agent","node","platform","v8","content-type","accept","_error","res","statusCode","setEncoding","_send","statusText","onabort","onload","onloadend","onloadstart","onreadystatechange","responseType","_headers","_params","_request","abort","getResponseHeader","user","password","mime","byteLength","rejectUnauthorized","agent","setSocketKeepAlive","WeakMapShim","DOMParser","parseFromString","wrap","_ret","XMLSerializer","serializeToString","boolean_number_string","bootstrap","defineProperty","HTMLElement","Element","ClassList","classes","className","updateClassName","__defineGetter__","URL","createObjectURL","requestAnimationFrame","util","exports","module","define"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _this = this;\nvar _inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) subClass.__proto__ = superClass;\n};\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) {\n  if (staticProps) Object.defineProperties(child, staticProps);\n  if (instanceProps) Object.defineProperties(child.prototype, instanceProps);\n};\n\n/**\n * Lightweight data store library, with a utility belt\n *\n * @author Jason Mulligan <jason.mulligan@avoidwork.com>\n * @copyright 2015 Jason Mulligan\n * @license BSD-3 <https://raw.github.com/avoidwork/keigai/master/LICENSE>\n * @link http://keigai.io\n * @module keigai\n * @version 1.1.4\n */\n(function (global) {\n  var document = global.document;\n  var location = global.location;\n  var navigator = global.navigator;\n  var server = typeof process != \"undefined\";\n  var MAX = 10;\n  var VERSIONS = 100;\n  var CACHE = 500;\n  var EVENTS = [\"readystatechange\", \"abort\", \"load\", \"loadstart\", \"loadend\", \"error\", \"progress\", \"timeout\"];\n\n  var Buffer = function () {};\n  var Promise = global.Promise || undefined;\n  var localStorage = global.localStorage || undefined;\n  var XMLHttpRequest = global.XMLHttpRequest || null;\n  var WeakMap = global.WeakMap || null;\n  var btoa = global.btoa || undefined;\n  var webWorker = typeof Blob != \"undefined\" && typeof Worker != \"undefined\";\n  var external = undefined,\n      format = undefined,\n      http = undefined,\n      https = undefined,\n      lib = undefined,\n      mongodb = undefined,\n      url = undefined,\n      RENDER = undefined,\n      TIME = undefined,\n      WORKER = undefined;\n\n  if (server) {\n    url = require(\"url\");\n    http = require(\"http\");\n    https = require(\"https\");\n    mongodb = require(\"mongodb\").MongoClient;\n    format = require(\"util\").format;\n    Buffer = require(\"buffer\").Buffer;\n\n    if (typeof Promise == \"undefined\") {\n      Promise = require(\"es6-promise\").Promise;\n    }\n\n    if (typeof localStorage == \"undefined\") {\n      localStorage = require(\"localStorage\");\n    }\n\n    if (typeof btoa == \"undefined\") {\n      btoa = require(\"btoa\");\n    }\n  }\n\n  var lib = (function () {\n    /**\n     * Regex patterns used through keigai\n     *\n     * `url` was authored by Diego Perini\n     *\n     * @namespace regex\n     * @private\n     * @type {Object}\n     */\n    var regex = {\n      after_space: /\\s+.*/,\n      allow: /^allow$/i,\n      allow_cors: /^access-control-allow-methods$/i,\n      and: /^&/,\n      args: /\\((.*)\\)/,\n      auth: /\\/\\/(.*)\\@/,\n      bool: /^(true|false)?$/,\n      caps: /[A-Z]/,\n      cdata: /\\&|<|>|\\\"|\\'|\\t|\\r|\\n|\\@|\\$/,\n      checked_disabled: /checked|disabled/i,\n      complete_loaded: /^(complete|loaded)$/i,\n      csv_quote: /^\\s|\\\"|\\n|,|\\s$/,\n      del: /^del/,\n      domain: /^[\\w.-_]+\\.[A-Za-z]{2,}$/,\n      down: /down/,\n      endslash: /\\/$/,\n      eol_nl: /\\n$/,\n      element_update: /id|innerHTML|innerText|textContent|type|src/,\n      get_headers: /^(head|get|options)$/,\n      get_remove_set: /get|remove|set/,\n      hash: /^\\#/,\n      header_replace: /:.*/,\n      header_value_replace: /.*:\\s+/,\n      html: /^<.*>$/,\n      http_body: /200|201|202|203|206/,\n      http_ports: /80|443/,\n      host: /\\/\\/(.*)\\//,\n      ie: /msie|ie|\\.net|windows\\snt/i,\n      ip: /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n      is_xml: /^<\\?xml.*\\?>/,\n      json_maybe: /json|plain|javascript/,\n      json_wrap: /^[\\[\\{]/,\n      klass: /^\\./,\n      no: /no-store|no-cache/i,\n      not_dotnotation: /-|\\s/,\n      not_endpoint: /.*\\//,\n      null_undefined: /null|undefined/,\n      number: /(^-?\\d\\d*\\.\\d*$)|(^-?\\d\\d*$)|(^-?\\.\\d\\d*$)|number/,\n      number_format_1: /.*\\./,\n      number_format_2: /\\..*/,\n      number_present: /\\d{1,}/,\n      number_string: /number|string/i,\n      number_string_object: /number|object|string/i,\n      object_type: /\\[object Object\\]/,\n      patch: /^patch$/,\n      primitive: /^(boolean|function|number|string)$/,\n      priv: /private/,\n      protocol: /^(.*)\\/\\//,\n      put_post: /^(post|put)$/i,\n      radio_checkbox: /^(radio|checkbox)$/i,\n      root: /^\\/[^\\/]/,\n      select: /select/i,\n      selector_is: /^:/,\n      selector_complex: /\\s+|\\>|\\+|\\~|\\:|\\[/,\n      set_del: /^(set|del|delete)$/,\n      space_hyphen: /\\s|-/,\n      string_object: /string|object/i,\n      svg: /svg/,\n      top_bottom: /top|bottom/i,\n      url: /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/i,\n      word: /^\\w+$/,\n      xdomainrequest: /^(get|post)$/i,\n      xml: /xml/i\n    };\n\n    var LRU = (function () {\n      /**\n       * Creates a new Least Recently Used cache\n       *\n       * @constructor\n       * @memberOf keigai\n       * @param  {Number} max [Optional] Max size of cache, default is 1000\n       * @example\n       * let lru = keigai.util.lru( 50 );\n       */\n      function LRU() {\n        var max = arguments[0] === undefined ? 1000 : arguments[0];\n        this.cache = {};\n        this.max = max;\n        this.first = null;\n        this.last = null;\n        this.length = 0;\n      }\n\n      _prototypeProperties(LRU, null, {\n        evict: {\n\n          /**\n           * Evicts the least recently used item from cache\n           *\n           * @method evict\n           * @memberOf keigai.LRU\n           * @return {Object} {@link keigai.LRU}\n           * @example\n           * lru.evict();\n           */\n          value: function evict() {\n            if (this.last !== null) {\n              this.remove(this.last);\n            }\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        get: {\n\n          /**\n           * Gets cached item and moves it to the front\n           *\n           * @method get\n           * @memberOf keigai.LRU\n           * @param  {String} key Item key\n           * @return {Object} {@link keigai.LRUItem}\n           * @example\n           * let item = lru.get( \"key\" );\n           */\n          value: function get(key) {\n            var item = this.cache[key];\n\n            if (item === undefined) {\n              return;\n            }\n\n            this.set(key, item.value);\n\n            return item.value;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        remove: {\n\n          /**\n           * Removes item from cache\n           *\n           * @method remove\n           * @memberOf keigai.LRU\n           * @param  {String} key Item key\n           * @return {Object} {@link keigai.LRUItem}\n           * @example\n           * lru.remove( \"key\" );\n           */\n          value: function remove(key) {\n            var item = this.cache[key];\n\n            if (item) {\n              delete this.cache[key];\n\n              this.length--;\n\n              if (item.previous !== null) {\n                this.cache[item.previous].next = item.next;\n              }\n\n              if (item.next !== null) {\n                this.cache[item.next].previous = item.previous;\n              }\n\n              if (this.first === key) {\n                this.first = item.previous;\n              }\n\n              if (this.last === key) {\n                this.last = item.next;\n              }\n            }\n\n            return item;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        set: {\n\n          /**\n           * Sets item in cache as `first`\n           *\n           * @method set\n           * @memberOf keigai.LRU\n           * @param  {String} key   Item key\n           * @param  {Mixed}  value Item value\n           * @return {Object} {@link keigai.LRU}\n           * @example\n           * lru.set( \"key\", {x: true} );\n           */\n          value: function set(key, value) {\n            var item = this.remove(key);\n\n            if (item === undefined) {\n              item = new LRUItem(value);\n            } else {\n              item.value = value;\n            }\n\n            item.next = null;\n            item.previous = this.first;\n            this.cache[key] = item;\n\n            if (this.first !== null) {\n              this.cache[this.first].next = key;\n            }\n\n            this.first = key;\n\n            if (this.last === null) {\n              this.last = key;\n            }\n\n            if (++this.length > this.max) {\n              this.evict();\n            }\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        }\n      });\n\n      return LRU;\n    })();\n\n    /**\n     * Creates a new LRUItem\n     *\n     * @constructor\n     * @memberOf keigai\n     * @param {Mixed} value Item value\n     * @private\n     */\n    var LRUItem = function LRUItem(value) {\n      this.next = null;\n      this.previous = null;\n      this.value = value;\n    };\n\n    /**\n     * @namespace lru\n     */\n    var lru = {\n      /**\n       * LRU factory\n       *\n       * @method factory\n       * @memberOf lru\n       * @return {Object} {@link keigai.LRU}\n       * @example\n       * let lru = keigai.util.lru( 50 );\n       */\n      factory: function (max) {\n        return new LRU(max);\n      }\n    };\n\n    var Observable = (function () {\n      /**\n       * Creates a new Observable\n       *\n       * @constructor\n       * @memberOf keigai\n       * @param  {Number} arg Maximum listeners, default is 10\n       * @example\n       * let observer = keigai.util.observer( 50 );\n       */\n      function Observable() {\n        var _this2 = this;\n        var arg = arguments[0] === undefined ? MAX : arguments[0];\n        return (function () {\n          _this2.limit = arg;\n          _this2.listeners = {};\n          _this2.hooks = new WeakMap();\n        })();\n      }\n\n      _prototypeProperties(Observable, null, {\n        dispatch: {\n\n          /**\n           * Dispatches an event, with optional arguments\n           *\n           * @method dispatch\n           * @memberOf keigai.Observable\n           * @return {Object} {@link keigai.Observable}\n           * @example\n           * observer.dispatch( \"event\", ... );\n           */\n          value: function dispatch(ev) {\n            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              args[_key - 1] = arguments[_key];\n            }\n\n            if (ev && this.listeners[ev]) {\n              utility.iterate(this.listeners[ev], function (i) {\n                i.handler.apply(i.scope, args);\n              });\n            }\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        hook: {\n\n          /**\n           * Hooks into `target` for a DOM event\n           *\n           * @method hook\n           * @memberOf keigai.Observable\n           * @param  {Object} target Element\n           * @param  {String} ev     Event\n           * @return {Object}        Element\n           * @example\n           * observer.hook( document.querySelector( \"a\" ), \"click\" );\n           */\n          value: function hook(target, ev) {\n            if (typeof target.addEventListener != \"function\") {\n              throw new Error(label.invalidArguments);\n            }\n\n            var self = this;\n            var obj = this.hooks.get(target) || {};\n\n            obj[ev] = function (arg) {\n              self.dispatch(ev, arg);\n            };\n\n            this.hooks.set(target, obj);\n            target.addEventListener(ev, this.hooks.get(target)[ev], false);\n\n            return target;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        off: {\n\n          /**\n           * Removes all, or a specific listener for an event\n           *\n           * @method off\n           * @memberOf keigai.Observable\n           * @param {String} ev Event name\n           * @param {String} id [Optional] Listener ID\n           * @return {Object} {@link keigai.Observable}\n           * @example\n           * observer.off( \"click\", \"myHook\" );\n           */\n          value: function off(ev, id) {\n            if (this.listeners[ev]) {\n              if (id) {\n                delete this.listeners[ev][id];\n              } else {\n                delete this.listeners[ev];\n              }\n            }\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        on: {\n\n          /**\n           * Adds a listener for an event\n           *\n           * @method on\n           * @memberOf keigai.Observable\n           * @param  {String}   ev      Event name\n           * @param  {Function} handler Handler\n           * @param  {String}   id      [Optional] Handler ID\n           * @param  {String}   scope   [Optional] Handler scope, default is `this`\n           * @return {Object} {@link keigai.Observable}\n           * @example\n           * observer.on( \"click\", function ( ev ) {\n           *   ...\n           * }, \"myHook\" );\n           */\n          value: function on(ev, handler, id, scope) {\n            var _this3 = this;\n            var id = arguments[2] === undefined ? utility.uuid() : arguments[2];\n            return (function () {\n              if (!_this3.listeners[ev]) {\n                _this3.listeners[ev] = {};\n              }\n\n              if (array.keys(_this3.listeners[ev]).length >= _this3.limit) {\n                throw new Error(\"Possible memory leak, more than \" + _this3.limit + \" listeners for event: \" + ev);\n              }\n\n              _this3.listeners[ev][id] = { scope: scope || _this3, handler: handler };\n\n              return _this3;\n            })();\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        once: {\n\n          /**\n           * Adds a short lived listener for an event\n           *\n           * @method once\n           * @memberOf keigai.Observable\n           * @param  {String}   ev      Event name\n           * @param  {Function} handler Handler\n           * @param  {String}   id      [Optional] Handler ID\n           * @param  {String}   scope   [Optional] Handler scope, default is `this`\n           * @return {Object} {@link keigai.Observable}\n           * @example\n           * observer.once( \"click\", function ( ev ) {\n           *   ...\n           * } );\n           */\n          value: function once(ev, handler, id, scope) {\n            var _this4 = this;\n            var id = arguments[2] === undefined ? utility.uuid() : arguments[2];\n            return (function () {\n              scope = scope || _this4;\n\n              var self = _this4;\n\n              return _this4.on(ev, function () {\n                for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                handler.apply(scope, args);\n                self.off(ev, id);\n              }, id, scope);\n            })();\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        unhook: {\n\n          /**\n           * Unhooks from `target` for a DOM event\n           *\n           * @method unhook\n           * @memberOf keigai.Observable\n           * @param  {Object} target Element\n           * @param  {String} ev     Event\n           * @return {Object}        Element\n           * @example\n           * observer.unhook( document.querySelector( \"a\" ), \"click\" );\n           */\n          value: function unhook(target, ev) {\n            var obj = this.hooks.get(target);\n\n            if (obj) {\n              target.removeEventListener(ev, obj[ev], false);\n              delete obj[ev];\n\n              if (array.keys(obj).length === 0) {\n                this.hooks[\"delete\"](target);\n              } else {\n                this.hooks.set(target, obj);\n              }\n            }\n\n            return target;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        }\n      });\n\n      return Observable;\n    })();\n\n    /**\n     * @namespace observable\n     */\n    var observable = {\n      /**\n       * Observable factory\n       *\n       * @method factory\n       * @memberOf observable\n       * @return {Object} {@link keigai.Observable}\n       * @example\n       * let observer = keigai.util.observer( 50 );\n       */\n      factory: function (arg) {\n        return new Observable(arg);\n      }\n    };\n\n    var Base = (function () {\n      /**\n       * Base Object\n       *\n       * @constructor\n       * @memberOf keigai\n       */\n      function Base() {\n        /**\n         * {@link keigai.Observable}\n         *\n         * @abstract\n         * @type {Object}\n         */\n        this.observer = null;\n      }\n\n      _prototypeProperties(Base, null, {\n        addEventListener: {\n\n          /**\n           * Adds an event listener\n           *\n           * @method addEventListener\n           * @memberOf keigai.Base\n           * @param  {String}   ev       Event name\n           * @param  {Function} listener Function to execute\n           * @param  {String}   id       [Optional] Listener ID\n           * @param  {String}   scope    [Optional] Listener scope, default is `this`\n           * @return {Object} {@link keigai.Base}\n           * @example\n           * obj.addEventListener( \"event\", function ( ev ) {\n           *   ...\n           * }, \"myHook\" );\n           */\n          value: function addEventListener(ev, listener, id, scope) {\n            this.observer.on(ev, listener, id, scope || this);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        addListener: {\n\n          /**\n           * Adds an event listener\n           *\n           * @method addListener\n           * @memberOf keigai.Base\n           * @param  {String}   ev       Event name\n           * @param  {Function} listener Function to execute\n           * @param  {String}   id       [Optional] Listener ID\n           * @param  {String}   scope    [Optional] Listener scope, default is `this`\n           * @return {Object} {@link keigai.Base}\n           * @example\n           * obj.addEventListener( \"event\", function ( ev ) {\n           *   ...\n           * }, \"myHook\" );\n           */\n          value: function addListener(ev, listener, id, scope) {\n            this.observer.on(ev, listener, id, scope || this);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        dispatch: {\n\n          /**\n           * Dispatches an event, with optional arguments\n           *\n           * @method dispatch\n           * @memberOf keigai.Base\n           * @return {Object} {@link keigai.Base}\n           * @example\n           * obj.dispatch( \"event\", ... );\n           */\n          value: function dispatch() {\n            for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n              args[_key3] = arguments[_key3];\n            }\n\n            this.observer.dispatch.apply(this.observer, args);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        dispatchEvent: {\n\n          /**\n           * Dispatches an event, with optional arguments\n           *\n           * @method dispatchEvent\n           * @memberOf keigai.Base\n           * @return {Object} {@link keigai.Base}\n           * @example\n           * obj.dispatchEvent( \"event\", ... );\n           */\n          value: function dispatchEvent() {\n            for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n              args[_key4] = arguments[_key4];\n            }\n\n            this.observer.dispatch.apply(this.observer, args);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        emit: {\n\n          /**\n           * Dispatches an event, with optional arguments\n           *\n           * @method emit\n           * @memberOf keigai.Base\n           * @return {Object} {@link keigai.Base}\n           * @example\n           * obj.emit( \"event\", ... );\n           */\n          value: function emit() {\n            for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n              args[_key5] = arguments[_key5];\n            }\n\n            this.observer.dispatch.apply(this.observer, args);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        hook: {\n\n          /**\n           * Hooks into `target` for an event\n           *\n           * @method hook\n           * @memberOf keigai.Base\n           * @return {Object} {@link keigai.Base}\n           * @example\n           * obj.hook( document.querySelector( \"a\" ), \"click\" );\n           */\n          value: function hook() {\n            for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n              args[_key6] = arguments[_key6];\n            }\n\n            this.observer.hook.apply(this.observer, args);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        listeners: {\n\n          /**\n           * Gets listeners\n           *\n           * @method listeners\n           * @memberOf keigai.Base\n           * @param  {String} ev [Optional] Event name\n           * @return {Object} Listeners\n           * @example\n           * keigai.util.iterate( obj.listeners(), function ( fn, id ) {\n           *   ...\n           * } );\n           */\n          value: function listeners(ev) {\n            return ev ? this.observer.listeners[ev] : this.observer.listeners;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        off: {\n\n          /**\n           * Removes an event listener\n           *\n           * @method off\n           * @memberOf keigai.Base\n           * @param  {String} ev Event name\n           * @param  {String} id [Optional] Listener ID\n           * @return {Object} {@link keigai.Base}\n           * @example\n           * obj.off( \"event\", \"myHook\" );\n           */\n          value: function off(ev, id) {\n            this.observer.off(ev, id);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        on: {\n\n          /**\n           * Adds an event listener\n           *\n           * @method on\n           * @memberOf keigai.Base\n           * @param  {String}   ev       Event name\n           * @param  {Function} listener Function to execute\n           * @param  {String}   id       [Optional] Listener ID\n           * @param  {String}   scope    [Optional] Listener scope, default is `this`\n           * @return {Object} {@link keigai.Base}\n           * @example\n           * obj.on( \"event\", function ( ev ) {\n           *   ...\n           * }, \"myHook\" );\n           */\n          value: function on(ev, listener, id, scope) {\n            this.observer.on(ev, listener, id, scope || this);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        once: {\n\n          /**\n           * Adds a short lived event listener\n           *\n           * @method once\n           * @memberOf keigai.Base\n           * @param  {String}   ev       Event name\n           * @param  {Function} listener Function to execute\n           * @param  {String}   id       [Optional] Listener ID\n           * @param  {String}   scope    [Optional] Listener scope, default is `this`\n           * @return {Object} {@link keigai.Base}\n           * @example\n           * obj.once( \"event\", function ( ev ) {\n           *   ...\n           * } );\n           */\n          value: function once(ev, listener, id, scope) {\n            this.observer.once(ev, listener, id, scope || this);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        removeEventListener: {\n\n          /**\n           * Removes an event listener\n           *\n           * @method removeEventListener\n           * @memberOf keigai.Base\n           * @param  {String} ev Event name\n           * @param  {String} id [Optional] Listener ID\n           * @return {Object} {@link keigai.Base}\n           * @example\n           * obj.removeListener( \"event\", \"myHook\" );\n           */\n          value: function removeEventListener(ev, id) {\n            this.observer.off(ev, id);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        removeListener: {\n\n          /**\n           * Removes an event listener\n           *\n           * @method removeListener\n           * @memberOf keigai.Base\n           * @param  {String} ev Event name\n           * @param  {String} id [Optional] Listener ID\n           * @return {Object} {@link keigai.Base}\n           * @example\n           * obj.removeListener( \"event\", \"myHook\" );\n           */\n          value: function removeListener(ev, id) {\n            this.observer.off(ev, id);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        }\n      });\n\n      return Base;\n    })();\n\n    /**\n     * @namespace base\n     * @private\n     */\n    var base = {\n      /**\n       * Base factory\n       *\n       * @memberOf base\n       * @method factory\n       * @return {Object} {@link keigai.Base}\n       */\n      factory: function () {\n        return new Base();\n      }\n    };\n\n    /**\n     * @namespace array\n     */\n    var array = {\n      /**\n       * Adds 'arg' to 'obj' if it is not found\n       *\n       * @method add\n       * @memberOf array\n       * @param  {Array} obj Array to receive 'arg'\n       * @param  {Mixed} arg Argument to set in 'obj'\n       * @return {Array}     Array that was queried\n       * @example\n       * let myArray = [1, 2];\n       *\n       * keigai.util.array.add( myArray, 3 ); // [1, 2, 3]\n       * keigai.util.array.add( myArray, 1 ); // [1, 2, 3]\n       */\n      add: function (obj, arg) {\n        if (!array.contains(obj, arg)) {\n          obj.push(arg);\n        }\n\n        return obj;\n      },\n\n      /**\n       * Preforms a binary search on a sorted Array\n       *\n       * @method binIndex\n       * @memberOf array\n       * @param  {Array} obj Array to search\n       * @param  {Mixed} arg Value to find index of\n       * @return {Number}    Index of `arg` within `obj`\n       * @example\n       * let myArray = [1, 5, 10, 15, 20, 25, ...];\n       *\n       * keigai.util.array.binIndex( myArray, 5 ); // 1\n       */\n      binIndex: function (obj, arg) {\n        var max = obj.length - 1;\n        var min = 0;\n        var idx = 0;\n        var val = 0;\n\n        while (min <= max) {\n          idx = Math.floor((min + max) / 2);\n          val = obj[idx];\n\n          if (val < arg) {\n            min = idx + 1;\n          } else if (val > arg) {\n            max = idx - 1;\n          } else {\n            return idx;\n          }\n        }\n\n        return -1;\n      },\n\n      /**\n       * Returns an Object ( NodeList, etc. ) as an Array\n       *\n       * @method cast\n       * @memberOf array\n       * @param  {Object}  obj Object to cast\n       * @param  {Boolean} key [Optional] Returns key or value, only applies to Objects without a length property\n       * @return {Array}       Object as an Array\n       * @example\n       * keigai.util.array.cast( document.querySelectorAll( \"...\" ) );\n       */\n      cast: function (obj, key) {\n        var o = [];\n\n        if (!isNaN(obj.length)) {\n          o = Array.from(obj);\n        } else if (key === true) {\n          o = array.keys(obj);\n        } else {\n          utility.iterate(obj, function (i) {\n            o.push(i);\n          });\n        }\n\n        return o;\n      },\n\n      /**\n       * Transforms an Array to a 2D Array of chunks\n       *\n       * @method chunk\n       * @memberOf array\n       * @param  {Array}  obj  Array to process\n       * @param  {Number} size Chunk size ( integer )\n       * @return {Array}       Chunked Array\n       * @example\n       * keigai.util.array.chunk( [0, 1, 2, 3], 2 ); // [[0, 1], [2, 3]]\n       */\n      chunk: function (obj, size) {\n        var result = [];\n        var nth = number.round(obj.length / size, \"up\");\n        var start = 0;\n        var i = -1;\n\n        while (++i < nth) {\n          start = i * size;\n          result.push(array.limit(obj, start, size));\n        }\n\n        return result;\n      },\n\n      /**\n       * Clears an Array without destroying it\n       *\n       * @method clear\n       * @memberOf array\n       * @param  {Array} obj Array to clear\n       * @return {Array}     Cleared Array\n       * @example\n       * let myArray = [1, 2, 3, 4, 5];\n       *\n       * keigai.util.array.clear( myArray );\n       * myArray.length; // 0\n       */\n      clear: function (obj) {\n        return obj.length > 0 ? array.remove(obj, 0, obj.length) : obj;\n      },\n\n      /**\n       * Clones an Array\n       *\n       * @method clone\n       * @memberOf array\n       * @param  {Array}   obj     Array to clone\n       * @param  {Boolean} shallow [Optional] Default is `true`\n       * @return {Array}           Clone of Array\n       * @example\n       * let myArray      = [1, 2, 3, 4, 5],\n       *     myArrayClone = keigai.util.array.clone( myArray );\n       *\n       * myArrayClone.push( 6 );\n       *\n       * myArray.length;      // 5\n       * myArrayClone.length; // 6\n       */\n      clone: function (obj) {\n        var shallow = arguments[1] === undefined ? true : arguments[1];\n        return utility.clone(obj, shallow);\n      },\n\n      /**\n       * Determines if obj contains arg\n       *\n       * @method contains\n       * @memberOf array\n       * @param  {Array} obj Array to search\n       * @param  {Mixed} arg Value to look for\n       * @return {Boolean}   True if found, false if not\n       * @example\n       * if ( keigai.util.array.contains( [1], 1 ) ) { ... }\n       */\n      contains: function (obj, arg) {\n        return obj.indexOf(arg) > -1;\n      },\n\n      /**\n       * Facade of `Array.map()`\n       *\n       * @method collect\n       * @memberOf array\n       * @param  {Array}    obj Array to iterate\n       * @param  {Function} fn  Function to execute against indices\n       * @return {Array}        New Array\n       * @example\n       * let results = keigai.util.array.collect( [...], function ( ... ) { ... } );\n       */\n      collect: function (obj, fn) {\n        return obj.map(fn);\n      },\n\n      /**\n       * Compacts a Array by removing `null` or `undefined` indices\n       *\n       * @method compact\n       * @memberOf array\n       * @param  {Array}   obj  Array to compact\n       * @param  {Boolean} diff Indicates to return resulting Array only if there's a difference\n       * @return {Array}        Compacted copy of `obj`, or null ( if `diff` is passed & no diff is found )\n       * @example\n       * keigai.util.array.compact( [null, \"a\", \"b\", \"c\", null, \"d\"] ); // [\"a\", \"b\", \"c\", \"d\"]\n       * keigai.util.array.compact( [\"a\", \"b\", \"c\", \"d\"], true );       // null\n       */\n      compact: function (obj, diff) {\n        var result = obj.filter(function (i) {\n          return !regex.null_undefined.test(i);\n        });\n\n        return diff !== true ? result : result.length < obj.length ? result : null;\n      },\n\n      /**\n       * Counts `value` in `obj`\n       *\n       * @method count\n       * @memberOf array\n       * @param  {Array} obj   Array to search\n       * @param  {Mixed} value Value to compare\n       * @return {Array}       Array of counts\n       * @example\n       * keigai.util.array.count( [\"apple\", \"banana\", \"orange\", \"apple\"], \"apple\" ); // 2\n       */\n      count: function (obj, value) {\n        return obj.filter(function (i) {\n          return i === value;\n        }).length;\n      },\n\n      /**\n       * Finds the difference between two Arrays\n       *\n       * @method diff\n       * @memberOf array\n       * @param  {Array} obj1 Source Array\n       * @param  {Array} obj2 Comparison Array\n       * @return {Array}      Array of the differences\n       * @example\n       * keigai.util.array.diff( [\"a\"], [\"a\", \"b\"] ); // [\"b\"]\n       */\n      diff: function (obj1, obj2) {\n        var result = [];\n\n        array.each(obj1, function (i) {\n          if (!array.contains(obj2, i)) {\n            array.add(result, i);\n          }\n        });\n\n        array.each(obj2, function (i) {\n          if (!array.contains(obj1, i)) {\n            array.add(result, i);\n          }\n        });\n\n        return result;\n      },\n\n      /**\n       * Iterates `obj` and executes `fn` with arguments [`value`, `index`].\n       * Returning `false` halts iteration.\n       *\n       * @method each\n       * @memberOf array\n       * @param  {Array}    obj   Array to iterate\n       * @param  {Function} fn    Function to execute on index values\n       * @param  {Boolean}  async [Optional] Asynchronous iteration\n       * @param  {Number}   size  [Optional] Batch size for async iteration, default is 10\n       * @return {Array}          Array\n       * @example\n       * keigai.util.array.each( [ ... ], function ( ... ) { ... } );\n       * keigai.util.array.each( [ ... ], function ( ... ) { ... }, true, 100 ); // processing batches of a 100\n       */\n      each: function (obj, fn, async) {\n        var size = arguments[3] === undefined ? 10 : arguments[3];\n        var nth = obj.length;\n        var i = undefined,\n            offset = undefined;\n\n        if (async !== true) {\n          i = -1;\n          while (++i < nth) {\n            if (fn.call(obj, obj[i], i) === false) {\n              break;\n            }\n          }\n        } else {\n          offset = 0;\n\n          if (size > nth) {\n            size = nth;\n          }\n\n          utility.repeat(function () {\n            var i = -1;\n            var idx = undefined;\n\n            while (++i < size) {\n              idx = i + offset;\n\n              if (idx === nth || fn.call(obj, obj[idx], idx) === false) {\n                return false;\n              }\n            }\n\n            offset += size;\n\n            if (offset >= nth) {\n              return false;\n            }\n          }, undefined, undefined, false);\n        }\n\n        return obj;\n      },\n\n      /**\n       * Iterates `obj` in reverse and executes `fn` with arguments [`value`, `index`].\n       * Returning `false` halts iteration.\n       *\n       * @method eachReverse\n       * @memberOf array\n       * @param  {Array}    obj   Array to iterate\n       * @param  {Function} fn    Function to execute on index values\n       * @param  {Boolean}  async [Optional] Asynchronous iteration\n       * @param  {Number}   size  [Optional] Batch size for async iteration, default is 10\n       * @return {Array}          Array\n       * @example\n       * keigai.util.array.eachReverse( [ ... ], function ( ... ) { ... } );\n       * keigai.util.array.eachReverse( [ ... ], function ( ... ) { ... }, true, 100 ); // processing batches of a 100\n       */\n      eachReverse: function (obj, fn, async, size) {\n        var nth = obj.length;\n        var i = undefined,\n            offset = undefined;\n\n        if (async !== true) {\n          i = nth;\n          while (--i > -1) {\n            if (fn.call(obj, obj[i], i) === false) {\n              break;\n            }\n          }\n        } else {\n          size = size || 10;\n          offset = nth - 1;\n\n          if (size > nth) {\n            size = nth;\n          }\n\n          utility.repeat(function () {\n            var i = -1;\n            var idx = undefined;\n\n            while (++i < size) {\n              idx = offset - i;\n\n              if (idx < 0 || fn.call(obj, obj[idx], idx) === false) {\n                return false;\n              }\n            }\n\n            offset -= size;\n\n            if (offset < 0) {\n              return false;\n            }\n          }, undefined, undefined, false);\n        }\n\n        return obj;\n      },\n\n      /**\n       * Determines if an Array is empty\n       *\n       * @method empty\n       * @memberOf array\n       * @param  {Array} obj Array to inspect\n       * @return {Boolean}   `true` if there's no indices\n       * @example\n       * keigai.util.array.empty( [] );    // true\n       * keigai.util.array.empty( [\"a\"] ); // false\n       */\n      empty: function (obj) {\n        return obj.length === 0;\n      },\n\n      /**\n       * Determines if two Arrays are equal\n       *\n       * @method equal\n       * @memberOf array\n       * @param  {Array} obj1 Array to compare\n       * @param  {Array} obj2 Array to compare\n       * @return {Boolean} `true` if the Arrays match\n       * @example\n       * keigai.util.array.equal( [\"a\"], [\"a\"] );      // true\n       * keigai.util.array.equal( [\"a\"], [\"a\", \"b\"] ); // false\n       */\n      equal: function (obj1, obj2) {\n        return json.encode(obj1) === json.encode(obj2);\n      },\n\n      /**\n       * Fills `obj` with the evalution of `arg`, optionally from `start` to `offset`\n       *\n       * @method fill\n       * @memberOf array\n       * @param  {Array}  obj   Array to fill\n       * @param  {Mixed}  arg   String, Number of Function to fill with\n       * @param  {Number} start [Optional] Index to begin filling at\n       * @param  {Number} end   [Optional] Offset from start to stop filling at\n       * @return {Array}        Filled Array\n       * @example\n       * let myArray = [\"a\", \"b\", \"c\"];\n       *\n       * keigai.util.array.fill( myArray, function ( i ) { return i + \"a\"; } );\n       * myArray[0]; // \"aa\"\n       */\n      fill: function (obj, arg, start, offset) {\n        var fn = typeof arg == \"function\";\n        var l = obj.length;\n        var i = !isNaN(start) ? start : 0;\n        var nth = !isNaN(offset) ? i + offset : l - 1;\n\n        if (nth > l - 1) {\n          nth = l - 1;\n        }\n\n        if (fn) {\n          while (i <= nth) {\n            obj[i] = arg(obj[i]);\n            i++;\n          }\n        } else {\n          while (i <= nth) {\n            obj[i] = arg;\n            i++;\n          }\n        }\n\n        return obj;\n      },\n\n      /**\n       * Returns the first Array index\n       *\n       * @method first\n       * @memberOf array\n       * @param  {Array} obj The array\n       * @return {Mixed}     The first node of the array\n       * @example\n       * keigai.util.array.first( [\"a\", \"b\"] ); // \"a\"\n       */\n      first: function (obj) {\n        return obj[0];\n      },\n\n      /**\n       * Flattens a 2D Array\n       *\n       * @method flat\n       * @memberOf array\n       * @param  {Array} obj 2D Array to flatten\n       * @return {Array}     Flatten Array\n       * @example\n       * keigai.util.array.flat( [[0, 1], [2, 3]] ); // [0, 1, 2, 3]\n       */\n      flat: function (obj) {\n        var result = [];\n\n        result = obj.reduce(function (a, b) {\n          return a.concat(b);\n        }, result);\n\n        return result;\n      },\n\n      /**\n       * Iterates `obj` and executes `fn` with arguments [`value`, `index`].\n       * Returning `false` halts iteration.\n       *\n       * @method forEach\n       * @memberOf array\n       * @see array.each\n       * @param  {Array}    obj   Array to iterate\n       * @param  {Function} fn    Function to execute on index values\n       * @param  {Boolean}  async [Optional] Asynchronous iteration\n       * @param  {Number}   size  [Optional] Batch size for async iteration, default is 10\n       * @return {Array}          Array\n       * @example\n       * keigai.util.array.forEach( [ ... ], function ( ... ) { ... } );\n       * keigai.util.array.forEach( [ ... ], function ( ... ) { ... }, true, 100 ); // processing batches of a 100\n       */\n      forEach: function (obj, fn, async, size) {\n        return array.each(obj, fn, async, size);\n      },\n\n      /**\n       * Creates a 2D Array from an Object\n       *\n       * @method fromObject\n       * @memberOf array\n       * @param  {Object} obj Object to convert\n       * @return {Array}      2D Array\n       * @example\n       * keigai.util.array.fromObject( {name: \"John\", sex: \"male\"} ); // [[\"name\", \"John\"], [\"sex\", \"male\"]]\n       */\n      fromObject: function (obj) {\n        return array.mingle(array.keys(obj), array.cast(obj));\n      },\n\n      /**\n       * Facade of indexOf\n       *\n       * @method index\n       * @memberOf array\n       * @param  {Array} obj Array to search\n       * @param  {Mixed} arg Value to find index of\n       * @return {Number}    The position of arg in instance\n       * @example\n       * keigai.util.array.index( [\"a\", \"b\", \"c\"], \"b\" ); // 1\n       */\n      index: function (obj, arg) {\n        return obj.indexOf(arg);\n      },\n\n      /**\n       * Returns an Associative Array as an Indexed Array\n       *\n       * @method indexed\n       * @memberOf array\n       * @param  {Array} obj Array to index\n       * @return {Array}     Indexed Array\n       * @example\n       * let myArray = [\"a\", \"b\", \"c\"];\n       *\n       * myArray.prop = \"d\";\n       * keigai.util.array.indexed( myArray ); [\"a\", \"b\", \"c\", \"d\"];\n       */\n      indexed: function (obj) {\n        var result = [];\n\n        utility.iterate(obj, function (v) {\n          result.push(v);\n        });\n\n        return result;\n      },\n\n      /**\n       * Finds the intersections between obj1 and obj2\n       *\n       * @method intersect\n       * @memberOf array\n       * @param  {Array} obj1 Source Array\n       * @param  {Array} obj2 Comparison Array\n       * @return {Array}      Array of the intersections\n       * @example\n       * keigai.util.array.intersect( [\"a\", \"b\", \"d\"], [\"b\", \"c\", \"d\"] ); // [\"b\", \"d\"]\n       */\n      intersect: function (obj1, obj2) {\n        var a = obj1.length > obj2.length ? obj1 : obj2;\n        var b = a === obj1 ? obj2 : obj1;\n\n        return a.filter(function (key) {\n          return array.contains(b, key);\n        });\n      },\n\n      /**\n       * Iterates an Array using an Iterator\n       *\n       * @method iterate\n       * @memberOf array\n       * @param  {Array} obj Array to iterate\n       * @return {Array}     Array to iterate\n       */\n      iterate: function (obj, fn) {\n        var itr = array.iterator(obj);\n        var item = undefined;\n\n        do {\n          item = itr.next();\n\n          if (!item.done) {\n            fn(item.value);\n          }\n        } while (!item.done);\n\n        return obj;\n      },\n\n      /**\n       * Creates an Array generator to iterate the indices\n       * \n       * @method iterator\n       * @memberOf array\n       * @param  {Array} obj Array to iterate\n       * @return {Function}  Generator\n       */\n      iterator: function (obj) {\n        var i = -1;\n\n        return {\n          next: function next() {\n            if (++i < obj.length) {\n              return { done: false, value: obj[i] };\n            } else {\n              return { done: true };\n            }\n          }\n        };\n      },\n\n      /**\n       * Keeps every element of `obj` for which `fn` evaluates to true\n       *\n       * @method keepIf\n       * @memberOf array\n       * @param  {Array}    obj Array to iterate\n       * @param  {Function} fn  Function to test indices against\n       * @return {Array}        Array\n       * @example\n       * let myArray = [\"a\", \"b\", \"c\"];\n       *\n       * keigai.util.array.keepIf( myArray, function ( i ) { return /a|c/.test( i ); } );\n       * myArray[1]; // \"c\"\n       */\n      keepIf: function (obj, fn) {\n        var result = [];\n        var remove = [];\n\n        result = obj.filter(fn);\n        remove = array.diff(obj, result);\n\n        array.each(remove, function (i) {\n          array.remove(obj, array.index(obj, i));\n        });\n\n        return obj;\n      },\n\n      /**\n       * Returns the keys in an \"Associative Array\"\n       *\n       * @method keys\n       * @memberOf array\n       * @param  {Mixed} obj Array or Object to extract keys from\n       * @return {Array}     Array of the keys\n       * @example\n       * keigai.util.array.keys( {abc: true, xyz: false} ); // [\"abc\", \"xyz\"]\n       */\n      keys: function (obj) {\n        return Array.keys(obj);\n      },\n\n      /**\n       * Sorts an Array based on key values, like an SQL ORDER BY clause\n       *\n       * @method keySort\n       * @memberOf array\n       * @param  {Array}  obj   Array to sort\n       * @param  {String} query Sort query, e.g. \"name, age desc, country\"\n       * @param  {String} sub   [Optional] Key which holds data, e.g. \"{data: {}}\" = \"data\"\n       * @return {Array}        Sorted Array\n       * @example\n       * let myArray = [{abc: 123124, xyz: 5}, {abc: 123124, xyz: 6}, {abc: 2, xyz: 5}];\n       *\n       * keigai.util.array.keySort( myArray, \"abc\" );           // [{abc: 2, xyz: 5}, {abc: 123124, xyz: 5}, {abc: 123124, xyz: 6}];\n       * keigai.util.array.keySort( myArray, \"abc, xyz desc\" ); // [{abc: 2, xyz: 5}, {abc: 123124, xyz: 6}, {abc: 123124, xyz: 5}];\n       */\n      keySort: function (obj, query, sub) {\n        query = query.replace(/\\s*asc/ig, \"\").replace(/\\s*desc/ig, \" desc\");\n\n        var queries = string.explode(query).map(function (i) {\n          return i.split(\" \");\n        });\n        var sorts = [];\n        var braceS = \"[\\\"\";\n        var braceE = \"\\\"]\";\n\n        if (sub && sub !== \"\") {\n          sub = \".\" + sub;\n        } else {\n          sub = \"\";\n        }\n\n        array.each(queries, function (i) {\n          var s = \".\";\n          var e = \"\";\n\n          if (regex.not_dotnotation.test(i[0])) {\n            s = braceS;\n            e = braceE;\n          }\n\n          sorts.push(\"try {\");\n\n          if (i[1] === \"desc\") {\n            sorts.push(\"if ( a\" + sub + s + i[0] + e + \" < b\" + sub + s + i[0] + e + \" ) return 1;\");\n            sorts.push(\"if ( a\" + sub + s + i[0] + e + \" > b\" + sub + s + i[0] + e + \" ) return -1;\");\n          } else {\n            sorts.push(\"if ( a\" + sub + s + i[0] + e + \" < b\" + sub + s + i[0] + e + \" ) return -1;\");\n            sorts.push(\"if ( a\" + sub + s + i[0] + e + \" > b\" + sub + s + i[0] + e + \" ) return 1;\");\n          }\n\n          sorts.push(\"} catch (e) {\");\n          sorts.push(\"try {\");\n          sorts.push(\"if ( a\" + sub + s + i[0] + e + \" !== undefined ) return \" + (i[1] === \"desc\" ? \"-1\" : \"1\") + \";\");\n          sorts.push(\"} catch (e) {}\");\n          sorts.push(\"try {\");\n          sorts.push(\"if ( b\" + sub + s + i[0] + e + \" !== undefined ) return \" + (i[1] === \"desc\" ? \"1\" : \"-1\") + \";\");\n          sorts.push(\"} catch (e) {}\");\n          sorts.push(\"}\");\n        });\n\n        sorts.push(\"return 0;\");\n\n        return obj.sort(new Function(\"a\", \"b\", sorts.join(\"\\n\")));\n      },\n\n      /**\n       * Returns the last index of the Array\n       *\n       * @method last\n       * @memberOf array\n       * @param  {Array}  obj Array\n       * @param  {Number} arg [Optional] Negative offset from last index to return\n       * @return {Mixed}      Last index( s ) of Array\n       * @example\n       * let myArray = [1, 2, 3, 4];\n       *\n       * keigai.util.array.last( myArray );    // 4\n       * keigai.util.array.last( myArray, 2 ); // [3, 4]\n       */\n      last: function (obj, arg) {\n        var n = obj.length - 1;\n\n        if (arg >= n + 1) {\n          return obj;\n        } else if (isNaN(arg) || arg === 1) {\n          return obj[n];\n        } else {\n          return array.limit(obj, n - --arg, n);\n        }\n      },\n\n      /**\n       * Returns a limited range of indices from the Array\n       *\n       * @method limit\n       * @memberOf array\n       * @param  {Array}  obj    Array to iterate\n       * @param  {Number} start  Starting index\n       * @param  {Number} offset Number of indices to return\n       * @return {Array}         Array of indices\n       * @example\n       * let myArray = [1, 2, 3, 4];\n       *\n       * keigai.util.array.limit( myArray, 0, 2 ); // [1, 2]\n       * keigai.util.array.limit( myArray, 2, 2 ); // [3, 4]\n       */\n      limit: function (obj, start, offset) {\n        var result = [];\n        var i = start - 1;\n        var nth = start + offset;\n        var max = obj.length;\n\n        if (max > 0) {\n          while (++i < nth && i < max) {\n            result.push(obj[i]);\n          }\n        }\n\n        return result;\n      },\n\n      /**\n       * Finds the maximum value in an Array\n       *\n       * @method max\n       * @memberOf array\n       * @param  {Array} obj Array to process\n       * @return {Mixed}     Number, String, etc.\n       * @example\n       * keigai.util.array.max( [5, 3, 9, 1, 4] ); // 9\n       */\n      max: function (obj) {\n        return array.last(array.sorted(array.clone(obj)));\n      },\n\n      /**\n       * Finds the mean of an Array ( of numbers )\n       *\n       * @method mean\n       * @memberOf array\n       * @param  {Array} obj Array to process\n       * @return {Number}    Mean of the Array ( float or integer )\n       * @example\n       * keigai.util.array.mean( [1, 3, 5] ); // 3\n       */\n      mean: function (obj) {\n        return obj.length > 0 ? array.sum(obj) / obj.length : undefined;\n      },\n\n      /**\n       * Finds the median value of an Array ( of numbers )\n       *\n       * @method median\n       * @memberOf array\n       * @param  {Array} obj Array to process\n       * @return {Number}    Median number of the Array ( float or integer )\n       * @example\n       * keigai.util.array.median( [5, 1, 3, 8] ); // 4\n       * keigai.util.array.median( [5, 1, 3] );    // 3\n       */\n      median: function (obj) {\n        var dupe = array.sorted(array.clone(obj));\n        var nth = dupe.length;\n        var mid = number.round(nth / 2, \"down\");\n\n        return number.odd(nth) ? dupe[mid] : (dupe[mid - 1] + dupe[mid]) / 2;\n      },\n\n      /**\n       * Merges `arg` into `obj`, excluding duplicate indices\n       *\n       * @method merge\n       * @memberOf array\n       * @param  {Array} obj1 Array to receive indices\n       * @param  {Array} obj2 Array to merge\n       * @return {Array}      First argument\n       * @example\n       * let a = [\"a\", \"b\", \"c\"],\n       *     b = [\"d\"];\n       *\n       * keigai.util.array.merge( a, b );\n       * a[3]; // \"d\"\n       */\n      merge: function (obj1, obj2) {\n        array.each(obj2, function (i) {\n          array.add(obj1, i);\n        });\n\n        return obj1;\n      },\n\n      /**\n       * Finds the minimum value in an Array\n       *\n       * @method min\n       * @memberOf array\n       * @param  {Array} obj Array to process\n       * @return {Mixed}     Number, String, etc.\n       * @example\n       * keigai.util.array.min( [5, 3, 9, 1, 4] ); // 1\n       */\n      min: function (obj) {\n        return array.sorted(array.clone(obj))[0];\n      },\n\n      /**\n       * Mingles Arrays and returns a 2D Array\n       *\n       * @method mingle\n       * @memberOf array\n       * @param  {Array} obj1 Array to mingle\n       * @param  {Array} obj2 Array to mingle\n       * @return {Array}      2D Array\n       * @example\n       * let a = [\"a\", \"b\"],\n       *     b = [\"c\", \"d\"];\n       *\n       * keigai.util.array.mingle( a, b ); // [[\"a\", \"c\"], [\"b\", \"d\"]]\n       */\n      mingle: function (obj1, obj2) {\n        var result = obj1.map(function (i, idx) {\n          return [i, obj2[idx]];\n        });\n\n        return result;\n      },\n\n      /**\n       * Finds the mode value of an Array\n       *\n       * @method mode\n       * @memberOf array\n       * @param  {Array} obj Array to process\n       * @return {Mixed}     Mode value of the Array\n       * @example\n       * keigai.util.array.mode( [1, 3, 7, 1, 2, 10, 7, 7, 3, 10] );     // 7\n       * keigai.util.array.mode( [1, 3, 7, 1, 2, 10, 7, 7, 3, 10, 10] ); // [7, 10]\n       */\n      mode: function (obj) {\n        var values = {};\n        var count = 0;\n        var mode = [];\n        var nth = undefined,\n            result = undefined;\n\n        // Counting values\n        array.each(obj, function (i) {\n          if (!isNaN(values[i])) {\n            values[i]++;\n          } else {\n            values[i] = 1;\n          }\n        });\n\n        // Finding the highest occurring count\n        count = array.max(array.cast(values));\n\n        // Finding values that match the count\n        utility.iterate(values, function (v, k) {\n          if (v === count) {\n            mode.push(number.parse(k));\n          }\n        });\n\n        // Determining the result\n        nth = mode.length;\n\n        if (nth > 0) {\n          result = nth === 1 ? mode[0] : mode;\n        }\n\n        return result;\n      },\n\n      /**\n       * Finds the range of the Array ( of numbers ) values\n       *\n       * @method range\n       * @memberOf array\n       * @param  {Array} obj Array to process\n       * @return {Number}    Range of the array ( float or integer )\n       * @example\n       * keigai.util.array.range( [5, 1, 3, 8] ); // 7\n       */\n      range: function (obj) {\n        return array.max(obj) - array.min(obj);\n      },\n\n      /**\n       * Searches a 2D Array `obj` for the first match of `arg` as a second index\n       *\n       * @method rassoc\n       * @memberOf array\n       * @param  {Array} obj 2D Array to search\n       * @param  {Mixed} arg Primitive to find\n       * @return {Mixed}     Array or undefined\n       * @example\n       * keigai.util.array.rassoc( [[1, 3], [7, 2], [4, 3]], 3 ); // [1, 3]\n       */\n      rassoc: function (obj, arg) {\n        var result = undefined;\n\n        array.each(obj, function (i, idx) {\n          if (i[1] === arg) {\n            result = utility.clone(obj[idx], true);\n\n            return false;\n          }\n        });\n\n        return result;\n      },\n\n      /**\n       * Returns Array containing the items in `obj` for which `fn()` is not true\n       *\n       * @method reject\n       * @memberOf array\n       * @param  {Array}    obj Array to iterate\n       * @param  {Function} fn  Function to execute against `obj` indices\n       * @return {Array}        Array of indices which fn() is not true\n       * @example\n       * keigai.util.array.reject( [0, 1, 2, 3, 4, 5], function ( i ) { return i % 2 > 0; } ); // [0, 2, 4]\n       */\n      reject: function (obj, fn) {\n        return array.diff(obj, obj.filter(fn));\n      },\n\n      /**\n       * Removes indices from an Array without recreating it\n       *\n       * @method remove\n       * @memberOf array\n       * @param  {Array}  obj   Array to remove from\n       * @param  {Mixed}  start Starting index, or value to find within obj\n       * @param  {Number} end   [Optional] Ending index\n       * @return {Array}        Modified Array\n       * @example\n       * let myArray = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n       *\n       * keigai.util.array.remove( myArray, 2, 3 );\n       * myArray[2]; // \"e\"\n       */\n      remove: function (obj, start, end) {\n        if (isNaN(start)) {\n          start = array.index(obj, start);\n\n          if (start === -1) {\n            return obj;\n          }\n        } else {\n          start = start || 0;\n        }\n\n        var length = obj.length;\n        var remaining = obj.slice((end || start) + 1 || length);\n\n        obj.length = start < 0 ? length + start : start;\n        obj.push.apply(obj, remaining);\n\n        return obj;\n      },\n\n      /**\n       * Deletes every element of `obj` for which `fn` evaluates to true\n       *\n       * @method removeIf\n       * @memberOf array\n       * @param  {Array}    obj Array to iterate\n       * @param  {Function} fn  Function to test indices against\n       * @return {Array}        Array\n       * @example\n       * let myArray = [\"a\", \"b\", \"c\"];\n       *\n       * keigai.util.array.removeIf( myArray, function ( i ) { return /a|c/.test( i ); } );\n       * myArray[0]; // \"b\"\n       */\n      removeIf: function (obj, fn) {\n        var remove = obj.filter(fn);\n\n        array.each(remove, function (i) {\n          array.remove(obj, array.index(obj, i));\n        });\n\n        return obj;\n      },\n\n      /**\n       * Deletes elements of `obj` until `fn` evaluates to false\n       *\n       * @method removeWhile\n       * @memberOf array\n       * @param  {Array}    obj Array to iterate\n       * @param  {Function} fn  Function to test indices against\n       * @return {Array}        Array\n       * @example\n       * let myArray = [\"a\", \"b\", \"c\"];\n       *\n       * keigai.util.array.removeWhile( myArray, function ( i ) { return /a|c/.test( i ); } );\n       * myArray[0];     // \"b\"\n       * myArray.length; // 2\n       */\n      removeWhile: function (obj, fn) {\n        var remove = [];\n\n        array.each(obj, function (i) {\n          if (fn(i) !== false) {\n            remove.push(i);\n          } else {\n            return false;\n          }\n        });\n\n        array.each(remove, function (i) {\n          array.remove(obj, array.index(obj, i));\n        });\n\n        return obj;\n      },\n\n      /**\n       * Replaces the contents of `obj` with `arg`\n       *\n       * @method replace\n       * @memberOf array\n       * @param  {Array} obj1 Array to modify\n       * @param  {Array} obj2 Array to values to push into `obj1`\n       * @return {Array}      Array to modify\n       * @example\n       * let myArray = [\"a\", \"b\", \"c\"];\n       *\n       * keigai.util.array.replace( myArray, [true, false] );\n       * myArray[0];     // true\n       * myArray.length; // 2\n       */\n      replace: function (obj1, obj2) {\n        array.remove(obj1, 0, obj1.length);\n        array.each(obj2, function (i) {\n          obj1.push(i);\n        });\n\n        return obj1;\n      },\n\n      /**\n       * Returns the \"rest\" of `obj` from `arg`\n       *\n       * @method rest\n       * @memberOf array\n       * @param  {Array}  obj Array to process\n       * @param  {Number} arg [Optional] Start position of subset of `obj` ( positive number only )\n       * @return {Array}      Array of a subset of `obj`\n       * @example\n       * keigai.util.array.rest( [1, 2, 3, 4, 5, 6] );    // [2, 3, 4, 5, 6]\n       * keigai.util.array.rest( [1, 2, 3, 4, 5, 6], 3 ); // [4, 5, 6]\n       */\n      rest: function (obj) {\n        var arg = arguments[1] === undefined ? 1 : arguments[1];\n        if (arg < 1) {\n          arg = 1;\n        }\n\n        return array.limit(obj, arg, obj.length);\n      },\n\n      /**\n       * Finds the last index of `arg` in `obj`\n       *\n       * @method rindex\n       * @memberOf array\n       * @param  {Array} obj Array to search\n       * @param  {Mixed} arg Primitive to find\n       * @return {Mixed}     Index or undefined\n       * @example\n       * keigai.util.array.rindex( [1, 2, 3, 2, 1], 2 ); // 3\n       */\n      rindex: function (obj, arg) {\n        var result = -1;\n\n        array.each(obj, function (i, idx) {\n          if (i === arg) {\n            result = idx;\n          }\n        });\n\n        return result;\n      },\n\n      /**\n       * Returns new Array with `arg` moved to the first index\n       *\n       * @method rotate\n       * @memberOf array\n       * @param  {Array}  obj Array to rotate\n       * @param  {Number} arg Index to become the first index, if negative the rotation is in the opposite direction\n       * @return {Array}      Newly rotated Array\n       * @example\n       * keigai.util.array.rotate( [0, 1, 2, 3, 4],  3 )[0] // 2;\n       * keigai.util.array.rotate( [0, 1, 2, 3, 4], -2 )[0] // 3;\n       */\n      rotate: function (obj, arg) {\n        var nth = obj.length;\n        var result = undefined;\n\n        if (arg === 0) {\n          result = obj;\n        } else {\n          if (arg < 0) {\n            arg += nth;\n          } else {\n            arg--;\n          }\n\n          result = array.limit(obj, arg, nth);\n          result = result.concat(array.limit(obj, 0, arg));\n        }\n\n        return result;\n      },\n\n      /**\n       * Generates a series Array\n       *\n       * @method series\n       * @memberOf array\n       * @param  {Number} start  Start value the series\n       * @param  {Number} end    [Optional] The end of the series\n       * @param  {Number} offset [Optional] Offset for indices, default is 1\n       * @return {Array}         Array of new series\n       * @example\n       * keigai.util.array.series( 0, 5 );     // [0, 1, 2, 3, 4]\n       * keigai.util.array.series( 0, 25, 5 ); // [0, 5, 10, 15, 20]\n       */\n      series: function (start, end) {\n        var start = arguments[0] === undefined ? 0 : arguments[0];\n        var offset = arguments[2] === undefined ? 1 : arguments[2];\n        end = end || start;\n\n        var result = [];\n        var n = -1;\n        var nth = Math.max(0, Math.ceil((end - start) / offset));\n\n        while (++n < nth) {\n          result[n] = start;\n          start += offset;\n        }\n\n        return result;\n      },\n\n      /**\n       * Sorts the Array by parsing values\n       *\n       * @method sort\n       * @memberOf array\n       * @param  {Mixed} a Argument to compare\n       * @param  {Mixed} b Argument to compare\n       * @return {Number}  Number indicating sort order\n       * @example\n       * keigai.util.array.sort( 2, 3 ); // -1\n       */\n      sort: function (a, b) {\n        var types = { a: typeof a, b: typeof b };\n        var c = undefined,\n            d = undefined,\n            result = undefined;\n\n        if (types.a == \"number\" && types.b == \"number\") {\n          result = a - b;\n        } else {\n          c = a.toString();\n          d = b.toString();\n\n          if (c < d) {\n            result = -1;\n          } else if (c > d) {\n            result = 1;\n          } else if (types.a == types.b) {\n            result = 0;\n          } else if (types.a == \"boolean\") {\n            result = -1;\n          } else {\n            result = 1;\n          }\n        }\n\n        return result;\n      },\n\n      /**\n       * Sorts `obj` using `array.sort`\n       *\n       * @method sorted\n       * @memberOf array\n       * @param  {Array} obj Array to sort\n       * @return {Array}     Sorted Array\n       * @example\n       * let myArray = [5, 9, 2, 4];\n       *\n       * keigai.util.array.sorted( myArray );\n       * myArray[0]; // 2\n       */\n      sorted: function (obj) {\n        return obj.sort(array.sort);\n      },\n\n      /**\n       * Splits an Array by divisor\n       *\n       * @method split\n       * @memberOf array\n       * @param  {Array}  obj     Array to process\n       * @param  {Number} divisor Integer to divide the Array by\n       * @return {Array}          Split Array\n       * @example\n       * let myArray = [],\n       *     i       = -1,\n       *     results;\n       *\n       * while ( ++i < 100 ) {\n      \t *   myArray.push( i + 1 );\n      \t * }\n       *\n       * results = keigai.util.array.split( myArray, 21 );\n       * results.length;     // 21\n       * results[0].length;  // 5\n       * results[19].length; // 4\n       * results[19][0];     // 99\n       * results[20].length; // 1\n       * results[20][0];     // 100\n       */\n      split: function (obj, divisor) {\n        var result = [];\n        var total = obj.length;\n        var nth = Math.ceil(total / divisor);\n        var low = Math.floor(total / divisor);\n        var lower = Math.ceil(total / nth);\n        var lowered = false;\n        var start = 0;\n        var i = -1;\n\n        // Finding the fold\n        if (number.diff(total, divisor * nth) > nth) {\n          lower = total - low * divisor + low - 1;\n        } else if (total % divisor > 0 && lower * nth >= total) {\n          lower--;\n        }\n\n        while (++i < divisor) {\n          if (i > 0) {\n            start = start + nth;\n          }\n\n          if (!lowered && lower < divisor && i === lower) {\n            --nth;\n            lowered = true;\n          }\n\n          result.push(array.limit(obj, start, nth));\n        }\n\n        return result;\n      },\n\n      /**\n       * Finds the standard deviation of an Array ( of numbers )\n       *\n       * @method stddev\n       * @memberOf array\n       * @param  {Array} obj Array to process\n       * @return {Number}    Standard deviation of the Array ( float or integer )\n       * @example\n       * keigai.util.array.stddev( [1, 3, 5] ); // 1.632993161855452\n       */\n      stddev: function (obj) {\n        return Math.sqrt(array.variance(obj));\n      },\n\n      /**\n       * Gets the summation of an Array of numbers\n       *\n       * @method sum\n       * @memberOf array\n       * @param  {Array} obj Array to sum\n       * @return {Number}    Summation of Array\n       * @example\n       * keigai.util.array.sum( [2, 4, 3, 1] ); // 10\n       */\n      sum: function (obj) {\n        var result = 0;\n\n        if (obj.length > 0) {\n          result = obj.reduce(function (prev, cur) {\n            return prev + cur;\n          });\n        }\n\n        return result;\n      },\n\n      /**\n       * Takes the first `n` indices from `obj`\n       *\n       * @method take\n       * @memberOf array\n       * @param  {Array}  obj Array to process\n       * @param  {Number} n   Offset from 0 to return\n       * @return {Array}      Subset of `obj`\n       * @example\n       * keigai.util.array.take( [1, 2, 3, 4], 2 ); // [1, 2]\n       */\n      take: function (obj, n) {\n        return array.limit(obj, 0, n);\n      },\n\n      /**\n       * Casts an Array to Object\n       *\n       * @method toObject\n       * @memberOf array\n       * @param  {Array} ar Array to transform\n       * @return {Object}   New object\n       * @example\n       * keigai.util.array.toObject( [\"abc\", \"def\"] ); // {0: \"abc\", 1: \"def\"}\n       */\n      toObject: function (ar) {\n        var obj = {};\n        var i = ar.length;\n\n        while (i--) {\n          obj[i.toString()] = ar[i];\n        }\n\n        return obj;\n      },\n\n      /**\n       * Gets the total keys in an Array\n       *\n       * @method total\n       * @memberOf array\n       * @param  {Array} obj Array to find the length of\n       * @return {Number}    Number of keys in Array\n       * @example\n       * let myArray = [true, true, false];\n       *\n       * myArray.extra = true;\n       * keigai.util.array.total( myArray ); // 4\n       */\n      total: function (obj) {\n        return array.indexed(obj).length;\n      },\n\n      /**\n       * Returns an Array of unique indices of `obj`\n       *\n       * @method unique\n       * @memberOf array\n       * @param  {Array} obj Array to process\n       * @return {Array}     Array of unique indices\n       * @example\n       * keigai.util.array.unique( [\"a\", \"b\", \"a\", \"c\", \"b\", \"d\"] ); // [\"a\", \"b\", \"c\", \"d\"]\n       */\n      unique: function (obj) {\n        var result = [];\n\n        array.each(obj, function (i) {\n          array.add(result, i);\n        });\n\n        return result;\n      },\n\n      /**\n       * Finds the variance of an Array ( of numbers )\n       *\n       * @method variance\n       * @memberOf array\n       * @param  {Array} obj Array to process\n       * @return {Number}    Variance of the Array ( float or integer )\n       * @example\n       * keigai.util.array.variance( [1, 3, 5] ); // 2.6666666666666665\n       */\n      variance: function (obj) {\n        var nth = obj.length;\n        var n = 0;\n        var mean = undefined;\n\n        if (nth > 0) {\n          mean = array.mean(obj);\n\n          array.each(obj, function (i) {\n            n += math.sqr(i - mean);\n          });\n\n          return n / nth;\n        } else {\n          return n;\n        }\n      },\n\n      /**\n       * Converts any arguments to Arrays, then merges elements of `obj` with corresponding elements from each argument\n       *\n       * @method zip\n       * @memberOf array\n       * @param  {Array} obj  Array to transform\n       * @param  {Mixed} args Argument instance or Array to merge\n       * @return {Array}      Array\n       * @example\n       * keigai.util.array.zip( [0, 1], 1 ); // [[0, 1], [1, null]]\n       */\n      zip: function (obj, args) {\n        var result = [];\n\n        // Preparing args\n        if (!(args instanceof Array)) {\n          args = typeof args == \"object\" ? array.cast(args) : [args];\n        }\n\n        array.each(args, function (i, idx) {\n          if (!(i instanceof Array)) {\n            _this[idx] = [i];\n          }\n        });\n\n        // Building result Array\n        array.each(obj, function (i, idx) {\n          result[idx] = [i];\n          array.each(args, function (x) {\n            result[idx].push(x[idx] || null);\n          });\n        });\n\n        return result;\n      }\n    };\n\n    /**\n     * @namespace cache\n     * @private\n     */\n    var cache = {\n      /**\n       * Collection URIs\n       *\n       * @memberOf cache\n       * @type {Object}\n       */\n      lru: lru.factory(CACHE),\n\n      /**\n       * Expires a URI from the local cache\n       *\n       * @method expire\n       * @memberOf cache\n       * @param  {String} uri URI of the local representation\n       * @return {Boolean} `true` if successful\n       */\n      expire: function (uri) {\n        if (cache.lru.cache[uri]) {\n          cache.lru.remove(uri);\n\n          return true;\n        }\n\n        return false;\n      },\n\n      /**\n       * Determines if a URI has expired\n       *\n       * @method expired\n       * @memberOf cache\n       * @param  {Object} uri Cached URI object\n       * @return {Boolean}    True if the URI has expired\n       */\n      expired: function (uri) {\n        var item = cache.lru.cache[uri];\n\n        return item && item.value.expires < new Date().getTime();\n      },\n\n      /**\n       * Returns the cached object {headers, response} of the URI or false\n       *\n       * @method get\n       * @memberOf cache\n       * @param  {String}  uri    URI/Identifier for the resource to retrieve from cache\n       * @param  {Boolean} expire [Optional] If 'false' the URI will not expire\n       * @param  {Boolean} silent [Optional] If 'true', the event will not fire\n       * @return {Mixed}          URI Object {headers, response} or False\n       */\n      get: function (uri, expire) {\n        uri = utility.parse(uri).href;\n        var item = cache.lru.get(uri);\n\n        if (!item) {\n          return false;\n        }\n\n        if (expire !== false && cache.expired(uri)) {\n          cache.expire(uri);\n\n          return false;\n        }\n\n        return utility.clone(item, true);\n      },\n\n      /**\n       * Sets, or updates an item in cache.items\n       *\n       * @method set\n       * @memberOf cache\n       * @param  {String} uri      URI to set or update\n       * @param  {String} property Property of the cached URI to set\n       * @param  {Mixed} value     Value to set\n       * @return {Mixed}           URI Object {headers, response} or undefined\n       */\n      set: function (uri, property, value) {\n        uri = utility.parse(uri).href;\n        var item = cache.lru.get(uri);\n\n        if (!item) {\n          item = {\n            permission: 0\n          };\n        }\n\n        if (property === \"permission\") {\n          item.permission |= value;\n        } else if (property === \"!permission\") {\n          item.permission &= ~value;\n        } else {\n          item[property] = value;\n        }\n\n        cache.lru.set(uri, item);\n\n        return item;\n      }\n    };\n\n    /**\n     * Custom Object returned from `client.request()`\n     *\n     * @constructor\n     * @memberOf keigai\n     * @extends {keigai.Base}\n     * @param {Object} xhr XMLHttpRequest\n     */\n    var KXMLHttpRequest = (function (Base) {\n      function KXMLHttpRequest(xhr) {\n        this.observer = observable.factory();\n        this.defer = deferred.factory();\n        this.xhr = xhr;\n      }\n\n      _inherits(KXMLHttpRequest, Base);\n\n      return KXMLHttpRequest;\n    })(Base);\n\n    /**\n     * @namespace client\n     */\n    var client = {\n      /**\n       * Array Buffer is available\n       *\n       * @memberOf client\n       * @type {Boolean}\n       * @private\n       */\n      ab: typeof ArrayBuffer != \"undefined\",\n\n      /**\n       * Blob is available\n       *\n       * @memberOf client\n       * @type {Boolean}\n       * @private\n       */\n      blob: typeof Blob != \"undefined\",\n\n      /**\n       * Document is available\n       *\n       * @memberOf client\n       * @type {Boolean}\n       * @private\n       */\n      doc: typeof Document != \"undefined\",\n\n      /**\n       * Internet Explorer browser\n       *\n       * @memberOf client\n       * @type {Boolean}\n       * @private\n       */\n      ie: (function () {\n        return !server && regex.ie.test(navigator.userAgent);\n      })(),\n\n      /**\n       * Client version\n       *\n       * @memberOf client\n       * @type {Number}\n       * @private\n       */\n      version: function () {\n        var result = 0;\n\n        if (client.ie) {\n          result = number.parse(string.trim(navigator.userAgent.replace(/( .*msie|;.*)/gi, \"\")) || 9, 10);\n        }\n\n        return result;\n      },\n\n      /**\n       * Quick way to see if a URI allows a specific verb\n       *\n       * @method allows\n       * @memberOf client\n       * @param  {String} uri  URI to query\n       * @param  {String} verb HTTP verb\n       * @return {Boolean}     `true` if the verb is allowed, undefined if unknown\n       * @private\n       */\n      allows: function (uri, verb) {\n        uri = utility.parse(uri).href;\n        verb = verb.toLowerCase();\n\n        var result = false;\n        var bit = 0;\n\n        if (!cache.get(uri, false)) {\n          result = undefined;\n        } else {\n          if (regex.del.test(verb)) {\n            bit = 1;\n          } else if (regex.get_headers.test(verb)) {\n            bit = 4;\n          } else if (regex.put_post.test(verb)) {\n            bit = 2;\n          } else if (regex.patch.test(verb)) {\n            bit = 8;\n          }\n\n          result = Boolean(client.permissions(uri, verb).bit & bit);\n        }\n\n        return result;\n      },\n\n      /**\n       * Gets bit value based on args\n       *\n       * @method bit\n       * @memberOf client\n       * @param  {Array} args Array of commands the URI accepts\n       * @return {Number} To be set as a bit\n       * @private\n       */\n      bit: function (args) {\n        var result = 0;\n\n        array.each(args, function (verb) {\n          verb = verb.toLowerCase();\n\n          if (regex.get_headers.test(verb)) {\n            result |= 4;\n          } else if (regex.put_post.test(verb)) {\n            result |= 2;\n          } else if (regex.patch.test(verb)) {\n            result |= 8;\n          } else if (regex.del.test(verb)) {\n            result |= 1;\n          }\n        });\n\n        return result;\n      },\n\n      /**\n       * Determines if a URI is a CORS end point\n       *\n       * @method cors\n       * @memberOf client\n       * @param  {String} uri  URI to parse\n       * @return {Boolean}     True if CORS\n       * @private\n       */\n      cors: function (uri) {\n        return !server && uri.indexOf(\"//\") > -1 && uri.indexOf(\"//\" + location.host) === -1;\n      },\n\n      /**\n       * Caches the headers from the XHR response\n       *\n       * @method headers\n       * @memberOf client\n       * @param  {Object} xhr  XMLHttpRequest Object\n       * @param  {String} uri  URI to request\n       * @param  {String} type Type of request\n       * @return {Object}      Cached URI representation\n       * @private\n       */\n      headers: function (xhr, uri, type) {\n        var headers = string.trim(xhr.getAllResponseHeaders()).split(\"\\n\");\n        var items = {};\n        var o = {};\n        var allow = null;\n        var expires = new Date();\n        var cors = client.cors(uri);\n\n        array.each(headers, function (i) {\n          var header = i.split(\": \");\n\n          items[header[0].toLowerCase()] = string.trim(header[1]);\n\n          if (allow === null) {\n            if (!cors && regex.allow.test(header) || cors && regex.allow_cors.test(header)) {\n              allow = header[1];\n            }\n          }\n        });\n\n        if (regex.no.test(items[\"cache-control\"])) {\n          expires = expires.getTime();\n        } else if (items[\"cache-control\"] && regex.number_present.test(items[\"cache-control\"])) {\n          expires = expires.setSeconds(expires.getSeconds() + number.parse(regex.number_present.exec(items[\"cache-control\"])[0], 10));\n        } else if (items.expires) {\n          expires = new Date(items.expires).getTime();\n        } else {\n          expires = expires.getTime();\n        }\n\n        o.expires = expires;\n        o.headers = items;\n        o.timestamp = new Date();\n        o.permission = client.bit(allow !== null ? string.explode(allow) : [type]);\n\n        if (type === \"get\") {\n          cache.set(uri, \"expires\", o.expires);\n          cache.set(uri, \"headers\", o.headers);\n          cache.set(uri, \"timestamp\", o.timestamp);\n          cache.set(uri, \"permission\", o.permission);\n        }\n\n        return o;\n      },\n\n      /**\n       * Parses an XHR response\n       *\n       * @method parse\n       * @memberOf client\n       * @param  {Object} xhr  XHR Object\n       * @param  {String} type [Optional] content-type header value\n       * @return {Mixed}       Array, Boolean, Document, Number, Object or String\n       * @private\n       */\n      parse: function (xhr) {\n        var type = arguments[1] === undefined ? \"\" : arguments[1];\n        var result = undefined,\n            obj = undefined;\n\n        if ((regex.json_maybe.test(type) || string.isEmpty(type)) && (regex.json_wrap.test(xhr.responseText) && Boolean(obj = json.decode(xhr.responseText, true)))) {\n          result = obj;\n        } else if (type === \"text/csv\") {\n          result = csv.decode(xhr.responseText);\n        } else if (type === \"text/tsv\") {\n          result = csv.decode(xhr.responseText, \"\\t\");\n        } else if (regex.xml.test(type)) {\n          if (type !== \"text/xml\") {\n            xhr.overrideMimeType(\"text/xml\");\n          }\n\n          result = xhr.responseXML;\n        } else if (type === \"text/plain\" && regex.is_xml.test(xhr.responseText) && xml.valid(xhr.responseText)) {\n          result = xml.decode(xhr.responseText);\n        } else {\n          result = xhr.responseText;\n        }\n\n        return result;\n      },\n\n      /**\n       * Returns the permission of the cached URI\n       *\n       * @method permissions\n       * @memberOf client\n       * @param  {String} uri URI to query\n       * @return {Object}     Contains an Array of available commands, the permission bit and a map\n       * @private\n       */\n      permissions: function (uri) {\n        var cached = cache.get(uri, false);\n        var bit = !cached ? 0 : cached.permission;\n        var result = { allows: [], bit: bit, map: { partial: 8, read: 4, write: 2, \"delete\": 1, unknown: 0 } };\n\n        if (bit & 1) {\n          result.allows.push(\"DELETE\");\n        }\n\n        if (bit & 2) {\n          result.allows.push(\"POST\");\n          result.allows.push(\"PUT\");\n        }\n\n        if (bit & 4) {\n          result.allows.push(\"GET\");\n        }\n\n        if (bit & 8) {\n          result.allows.push(\"PATCH\");\n        }\n\n        return result;\n      },\n\n      /**\n       * Creates a JSONP request\n       *\n       * @method jsonp\n       * @memberOf client\n       * @param  {String} uri  URI to request\n       * @param  {Mixed}  args Custom JSONP handler parameter name, default is \"callback\"; or custom headers for GET request ( CORS )\n       * @return {Object} {@link keigai.Deferred}\n       * @example\n       * keigai.util.jsonp( \"http://somedomain.com/resource?callback=\", function ( arg ) {\n       *   // `arg` is the coerced response body\n       * }, function ( err ) {\n       *   // Handle `err`\n       * } );\n       */\n      jsonp: function (uri, args) {\n        var defer = deferred.factory();\n        var callback = \"callback\";\n        var cbid = undefined,\n            s = undefined;\n\n        if (external === undefined) {\n          if (!global.keigai) {\n            global.keigai = { callback: {} };\n          }\n\n          external = \"keigai\";\n        }\n\n        if (args instanceof Object && !args.callback) {\n          callback = args.callback;\n        }\n\n        do {\n          cbid = utility.genId().slice(0, 10);\n        } while (global.callback[cbid]);\n\n        uri = uri.replace(callback + \"=?\", callback + \"=\" + external + \".callback.\" + cbid);\n\n        global.callback[cbid] = function (arg) {\n          utility.clearTimers(cbid);\n          delete global.callback[cbid];\n          defer.resolve(arg);\n          element.destroy(s);\n        };\n\n        s = element.create(\"script\", { src: uri, type: \"text/javascript\" }, utility.dom(\"head\")[0]);\n\n        utility.defer(function () {\n          defer.reject(new Error(label.requestTimeout));\n        }, 30000, cbid);\n\n        return defer;\n      },\n\n      /**\n       * KXMLHttpRequest factory\n       *\n       * @method kxhr\n       * @memberOf client\n       * @param {Object} xhr XMLHttpRequest\n       * @return {Object} {@link keigai.KXMLHttpRequest}\n       * @private\n       */\n      kxhr: function (xhr) {\n        var obj = new KXMLHttpRequest(xhr);\n\n        // Wrapping deferred methods on obj\n        array.each(array.keys(Deferred.prototype), function (i) {\n          obj[i] = function () {\n            for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n              args[_key7] = arguments[_key7];\n            }\n\n            return obj.defer[i].apply(obj.defer, args);\n          };\n        });\n\n        // Hooking observer for standard events\n        array.each(EVENTS, function (i) {\n          obj.hook(obj.xhr, i);\n        });\n\n        return obj;\n      },\n\n      /**\n       * Creates an XmlHttpRequest to a URI ( aliased to multiple methods )\n       *\n       * The returned Deferred will have an .xhr\n       *\n       * @method request\n       * @memberOf client\n       * @param  {String}   uri     URI to query\n       * @param  {String}   type    [Optional] Type of request ( DELETE/GET/POST/PUT/PATCH/HEAD/OPTIONS ), default is `GET`\n       * @param  {Mixed}    args    [Optional] Data to send with the request\n       * @param  {Object}   headers [Optional] Custom request headers ( can be used to set withCredentials )\n       * @return {Object}   {@link keigai.KXMLHttpRequest}\n       * @example\n       * keigai.util.request( \"http://keigai.io\" ).then( function ( arg ) {\n       *   // `arg` is the coerced response body\n       * }, function ( err ) {\n       *   // Handle `err`\n       * } );\n       */\n      request: function (uri, type, args, headers) {\n        var type = arguments[1] === undefined ? \"GET\" : arguments[1];\n        uri = utility.parse(uri).href;\n        type = type.toLowerCase();\n        headers = headers instanceof Object ? headers : null;\n\n        var cors = client.cors(uri);\n        var kxhr = client.kxhr(!client.ie || (!cors || client.version > 9) ? new XMLHttpRequest() : new XDomainRequest());\n        var payload = (regex.put_post.test(type) || regex.patch.test(type)) && args ? args : null;\n        var cached = type === \"get\" ? cache.get(uri) : false;\n        var contentType = null;\n        var doc = client.doc;\n        var ab = client.ab;\n        var blob = client.blob;\n\n        // Only GET & POST is supported by XDomainRequest (so useless!)\n        if (client.ie && client.version === 9 && cors && !regex.xdomainrequest.test(type)) {\n          throw new Error(label.notAvailable);\n        }\n\n        // Hooking custom events\n        kxhr.on(\"readystatechange\", function (ev) {\n          var state = kxhr.xhr.readyState;\n\n          if (state === 1) {\n            kxhr.dispatch(\"beforeXHR\", kxhr.xhr, ev);\n          } else if (state === 4) {\n            kxhr.dispatch(\"afterXHR\", kxhr.xhr, ev);\n          }\n        });\n\n        if (!cors && !regex.get_headers.test(type) && client.allows(uri, type) === false) {\n          kxhr.dispatch(\"beforeXHR\", kxhr.xhr, null);\n          kxhr.xhr.status = 405;\n          kxhr.reject(new Error(label.methodNotAllowed));\n          utility.delay(function () {\n            kxhr.dispatch(\"afterXHR\", kxhr.xhr, null);\n          });\n\n          return;\n        }\n\n        if (type === \"get\" && Boolean(cached)) {\n          // Decorating XHR for proxy behavior\n          if (server) {\n            kxhr.xhr.readyState = 4;\n            kxhr.xhr.status = 200;\n            kxhr.xhr._resheaders = cached.headers;\n          }\n\n          kxhr.dispatch(\"beforeXHR\", kxhr.xhr, null);\n          kxhr.resolve(cached.response);\n\n          utility.delay(function () {\n            kxhr.dispatch(\"afterXHR\", kxhr.xhr, null);\n          });\n\n          return;\n        }\n\n        utility.delay(function () {\n          kxhr.xhr.open(type.toUpperCase(), uri, true);\n\n          // Setting content-type value\n          if (headers !== null && headers.hasOwnProperty(\"content-type\")) {\n            contentType = headers[\"content-type\"];\n          }\n\n          if (cors && contentType === null) {\n            contentType = \"text/plain\";\n          }\n\n          // Transforming payload\n          if (payload !== null) {\n            if (payload.hasOwnProperty(\"xml\")) {\n              payload = payload.xml;\n            }\n\n            if (doc && payload instanceof Document) {\n              payload = xml.decode(payload);\n            }\n\n            if (typeof payload == \"string\" && regex.is_xml.test(payload)) {\n              contentType = \"application/xml\";\n            }\n\n            if (!(ab && payload instanceof ArrayBuffer) && !(blob && payload instanceof Blob) && !(payload instanceof Buffer) && payload instanceof Object) {\n              contentType = \"application/json\";\n              payload = json.encode(payload);\n            }\n\n            if (contentType === null && (ab && payload instanceof ArrayBuffer || blob && payload instanceof Blob)) {\n              contentType = \"application/octet-stream\";\n            }\n\n            if (contentType === null) {\n              contentType = \"application/x-www-form-urlencoded; charset=UTF-8\";\n            }\n          }\n\n          // Setting headers for everything except IE9 CORS requests\n          if (!client.ie || (!cors || client.version > 9)) {\n            if (headers === null) {\n              headers = {};\n            }\n\n            if (typeof cached == \"object\" && cached.headers.hasOwnProperty(\"etag\")) {\n              headers.etag = cached.headers.etag;\n            }\n\n            if (contentType !== null) {\n              headers[\"content-type\"] = contentType;\n            }\n\n            if (headers.hasOwnProperty(\"callback\")) {\n              delete headers.callback;\n            }\n\n            headers[\"x-requested-with\"] = \"XMLHttpRequest\";\n\n            utility.iterate(headers, function (v, k) {\n              if (v !== null && k !== \"withCredentials\") {\n                kxhr.xhr.setRequestHeader(k, v);\n              }\n            });\n\n            // Cross Origin Resource Sharing ( CORS )\n            if (typeof kxhr.xhr.withCredentials == \"boolean\" && headers !== null && typeof headers.withCredentials == \"boolean\") {\n              kxhr.xhr.withCredentials = headers.withCredentials;\n            }\n          }\n\n          kxhr.on(\"load\", function () {\n            var self = kxhr;\n            var xdr = client.ie && self.xhr.readyState === undefined;\n            var shared = true;\n            var o = undefined,\n                r = undefined,\n                t = undefined,\n                redirect = undefined;\n\n            if (!xdr && kxhr.xhr.readyState === 4) {\n              switch (kxhr.xhr.status) {\n                case 200:\n                case 201:\n                case 202:\n                case 203:\n                case 204:\n                case 205:\n                case 206:\n                  o = client.headers(kxhr.xhr, uri, type);\n\n                  if (type === \"head\") {\n                    return kxhr.resolve(o.headers);\n                  } else if (type === \"options\") {\n                    return kxhr.resolve(o.headers);\n                  } else if (type !== \"delete\") {\n                    if (server && regex.priv.test(o.headers[\"cache-control\"])) {\n                      shared = false;\n                    }\n\n                    if (regex.http_body.test(kxhr.xhr.status)) {\n                      t = o.headers[\"content-type\"] || \"\";\n                      r = client.parse(kxhr.xhr, t);\n\n                      if (r === undefined) {\n                        kxhr.reject(new Error(label.serverError));\n                      }\n                    }\n\n                    if (type === \"get\" && shared) {\n                      cache.set(uri, \"response\", o.response = utility.clone(r, true));\n                    } else {\n                      cache.expire(uri, true);\n                    }\n                  } else if (type === \"delete\") {\n                    cache.expire(uri, true);\n                  }\n\n                  switch (kxhr.xhr.status) {\n                    case 200:\n                    case 202:\n                    case 203:\n                    case 206:\n                      kxhr.resolve(r);\n                      break;\n                    case 201:\n                      if ((o.headers.location === undefined || string.isEmpty(o.headers.location)) && !string.isUrl(r)) {\n                        kxhr.resolve(r);\n                      } else {\n                        redirect = string.trim(o.headers.Location || r);\n                        client.request(redirect).then(function (arg) {\n                          self.resolve(arg);\n                        }, function (e) {\n                          self.reject(e);\n                        });\n                      }\n                      break;\n                    case 204:\n                    case 205:\n                      kxhr.resolve(null);\n                      break;\n                  }\n                  break;\n                case 304:\n                  kxhr.resolve(r);\n                  break;\n                case 401:\n                  kxhr.reject(new Error(kxhr.xhr.responseText || label.serverUnauthorized));\n                  break;\n                case 403:\n                  cache.set(uri, \"!permission\", client.bit([type]));\n                  kxhr.reject(new Error(kxhr.xhr.responseText || label.serverForbidden));\n                  break;\n                case 405:\n                  cache.set(uri, \"!permission\", client.bit([type]));\n                  kxhr.reject(new Error(kxhr.xhr.responseText || label.serverInvalidMethod));\n                  break;\n                default:\n                  kxhr.reject(new Error(kxhr.xhr.responseText || label.serverError));\n              }\n            } else if (xdr) {\n              r = client.parse(kxhr.xhr, \"text/plain\");\n              cache.set(uri, \"permission\", client.bit([\"get\"]));\n              cache.set(uri, \"response\", r);\n              kxhr.resolve(r);\n            }\n          });\n\n          kxhr.on(\"error\", function (e) {\n            kxhr.reject(e);\n          });\n\n          // Sending request\n          kxhr.xhr.send(payload !== null ? payload : undefined);\n        });\n\n        return kxhr;\n      },\n\n      /**\n       * Scrolls to a position in the view using a two point bezier curve\n       *\n       * @method scroll\n       * @memberOf client\n       * @param  {Array}  dest Coordinates\n       * @param  {Number} ms   [Optional] Milliseconds to scroll, default is 250, min is 100\n       * @return {Object} {@link Deferred}\n       * @private\n       */\n      scroll: function (dest, ms) {\n        var defer = deferred();\n        var start = client.scrollPos();\n        var t = 0;\n\n        ms = (!isNaN(ms) ? ms : 250) / 100;\n\n        utility.repeat(function () {\n          var pos = math.bezier(start[0], start[1], dest[0], dest[1], ++t / 100);\n\n          window.scrollTo(pos[0], pos[1]);\n\n          if (t === 100) {\n            defer.resolve(true);\n            return false;\n          }\n        }, ms, \"scrolling\");\n\n        return defer;\n      },\n\n      /**\n       * Returns the current scroll position of the View\n       *\n       * @method scrollPos\n       * @memberOf client\n       * @return {Array} Describes the scroll position\n       * @private\n       */\n      scrollPos: function () {\n        return [window.scrollX || 0, window.scrollY || 0];\n      }\n    };\n\n    /**\n     * @namespace csv\n     */\n    var csv = {\n      /**\n       * Converts CSV to an Array of Objects\n       *\n       * @method decode\n       * @memberOf csv\n       * @param  {String} arg       CSV string\n       * @param  {String} delimiter [Optional] Delimiter to split columns on, default is \",\"\n       * @return {Array}            Array of Objects\n       */\n      decode: function (arg) {\n        var delimiter = arguments[1] === undefined ? \",\" : arguments[1];\n        var regex = new RegExp(delimiter + \"(?=(?:[^\\\"]|\\\"(?:[^\\\"])[^\\\"]*\\\")*$)\");\n        var rows = string.trim(arg).split(\"\\n\");\n        var keys = rows.shift().split(delimiter);\n        var result = [];\n        var nth = rows.length;\n        var x = keys.length;\n        var i = -1;\n        var n = undefined,\n            obj = undefined,\n            row = undefined;\n\n        while (++i < nth) {\n          obj = {};\n          row = rows[i].split(regex);\n\n          n = -1;\n          while (++n < x) {\n            obj[keys[n]] = utility.coerce((row[n] || \"\").replace(/^\"|\"$/g, \"\"));\n          }\n\n          result.push(obj);\n        }\n\n        return result;\n      },\n\n      /**\n       * Encodes an Array, JSON, or Object as CSV\n       *\n       * @method encode\n       * @memberOf csv\n       * @param  {Mixed}   arg       JSON, Array or Object\n       * @param  {String}  delimiter [Optional] Character to separate fields\n       * @param  {Boolean} header    [Optional] `false` to disable keys names as first row\n       * @return {String}            CSV string\n       * @example\n       * let csv = keigai.util.csv.encode( [{prop:\"value\"}, {prop:\"value2\"}] );\n       *\n       * console.log( csv );\n       * \"prop\n       *  value\n       *  value2\"\n       */\n      encode: function (arg) {\n        var delimiter = arguments[1] === undefined ? \",\" : arguments[1];\n        var header = arguments[2] === undefined ? true : arguments[2];\n        var obj = json.decode(arg, true) || arg;\n        var result = \"\";\n\n        // Prepares input based on CSV rules\n        var prepare = function (input) {\n          var output = undefined;\n\n          if (input instanceof Array) {\n            output = \"\\\"\" + input.toString() + \"\\\"\";\n\n            if (regex.object_type.test(output)) {\n              output = \"\\\"\" + csv.encode(input, delimiter) + \"\\\"\";\n            }\n          } else if (input instanceof Object) {\n            output = \"\\\"\" + csv.encode(input, delimiter) + \"\\\"\";\n          } else if (regex.csv_quote.test(input)) {\n            output = \"\\\"\" + input.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\";\n          } else {\n            output = input;\n          }\n\n          return output;\n        };\n\n        if (obj instanceof Array) {\n          if (obj[0] instanceof Object) {\n            if (header) {\n              result = array.keys(obj[0]).join(delimiter) + \"\\n\";\n            }\n\n            result += obj.map(function (i) {\n              return csv.encode(i, delimiter, false);\n            }).join(\"\\n\");\n          } else {\n            result += prepare(obj, delimiter) + \"\\n\";\n          }\n        } else {\n          if (header) {\n            result = array.keys(obj).join(delimiter) + \"\\n\";\n          }\n\n          result += array.cast(obj).map(prepare).join(delimiter) + \"\\n\";\n        }\n\n        return result.replace(regex.eol_nl, \"\");\n      }\n    };\n\n    var DataListFilter = (function (Base) {\n      /**\n       * Creates a new DataListFilter\n       *\n       * @constructor\n       * @memberOf keigai\n       * @extends {keigai.Base}\n       * @param  {Object} obj      Element to receive the filter\n       * @param  {Object} list     {@link keigai.DataList}\n       * @param  {Number} debounce [Optional] Milliseconds to debounce\n       * @example\n       * let store  = keigai.store( [...] ),\n       *     list   = keigai.list( document.querySelector( \"#list\" ), store, \"{{field}}\" ),\n       *     filter = keigai.filter( document.querySelector( \"input.filter\" ), list, \"field\" );\n       */\n      function DataListFilter(element, list, debounce) {\n        this.debounce = debounce;\n        this.element = element;\n        this.filters = {};\n        this.list = list;\n        this.observer = observable.factory();\n      }\n\n      _inherits(DataListFilter, Base);\n\n      _prototypeProperties(DataListFilter, null, {\n        set: {\n\n          /**\n           * Set the filters\n           *\n           * Create an object based on comma separated key string\n           *\n           * @method set\n           * @memberOf keigai.DataListFilter\n           * @param  {String} fields Comma separated filters\n           * @return {Object} {@link keigai.DataListFilter}\n           * @example\n           * filter.set( \"firstName, lastName, email\" );\n           */\n          value: function set(fields) {\n            var self = this;\n\n            this.filters = {};\n            array.each(string.explode(fields), function (v) {\n              self.filters[v] = \"\";\n            });\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        teardown: {\n\n          /**\n           * Removes listeners, and DOM hooks to avoid memory leaks\n           *\n           * @method teardown\n           * @memberOf keigai.DataListFilter\n           * @return {Object} {@link keigai.DataListFilter}\n           * @example\n           * filter.teardown();\n           */\n          value: function teardown() {\n            this.observer.unhook(this.element, \"keyup\");\n            this.observer.unhook(this.element, \"input\");\n            this.element = null;\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        update: {\n\n          /**\n           * Applies the input value as a filter against the DataList based on specific fields\n           *\n           * @method update\n           * @memberOf keigai.DataListFilter\n           * @fires keigai.DataList#beforeFilter Fires before filter\n           * @fires keigai.DataList#afterFilter Fires after filter\n           * @return {Object} {@link keigai.DataListFilter}\n           * @example\n           * filter.update(); // Debounced execution\n           */\n          value: function update() {\n            var self = this;\n\n            utility.defer(function () {\n              var val = element.val(self.element).toString();\n\n              self.list.dispatch(\"beforeFilter\", self.element, val);\n\n              if (!string.isEmpty(val)) {\n                utility.iterate(self.filters, function (v, k) {\n                  var queries = string.explode(val);\n\n                  // Ignoring trailing commas\n                  queries = queries.filter(function (i) {\n                    return !string.isEmpty(i);\n                  });\n\n                  // Shaping valid pattern\n                  array.each(queries, function (i, idx) {\n                    queries[idx] = \"^.*\" + string.escape(i).replace(/(^\\*|\\*$)/g, \"\").replace(/\\*/g, \".*\") + \".*\";\n                  });\n\n                  self.filters[k] = queries.join(\",\");\n                });\n\n                self.list.filter = self.filters;\n              } else {\n                self.list.filter = null;\n              }\n\n              self.list.pageIndex = 1;\n              self.list.refresh();\n              self.list.dispatch(\"afterFilter\", self.element);\n            }, this.debounce, this.element.id + \"Debounce\");\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        }\n      });\n\n      return DataListFilter;\n    })(Base);\n\n    /**\n     * @namespace filter\n     */\n    var filter = {\n      /**\n       * DataListFilter factory\n       *\n       * @method factory\n       * @memberOf filter\n       * @param  {Object} target   Element to receive the filter\n       * @param  {Object} list     {@link keigai.DataList}\n       * @param  {String} filters  Comma delimited string of fields to filter by\n       * @param  {Number} debounce [Optional] Milliseconds to debounce, default is `250`\n       * @return {Object} {@link keigai.DataListFilter}\n       * @example\n       * let store  = keigai.store( [...] ),\n       *     list   = keigai.list( document.querySelector( \"#list\" ), store, \"{{field}}\" ),\n       *     filter = keigai.filter( document.querySelector( \"input.filter\" ), list, \"field\" );\n       */\n      factory: function (target, list, filters) {\n        var debounce = arguments[3] === undefined ? 250 : arguments[3];\n        var ref = [list];\n        var obj = new DataListFilter(target, ref[0], debounce).set(filters);\n\n        // Decorating `target` with the appropriate input `type`\n        element.attr(target, \"type\", \"text\");\n\n        // Setting up a chain of Events\n        obj.observer.hook(obj.element, \"keyup\");\n        obj.observer.hook(obj.element, \"input\");\n        obj.on(\"keyup\", obj.update, \"keyup\");\n        obj.on(\"input\", obj.update, \"input\");\n\n        return obj;\n      }\n    };\n\n    var DataGrid = (function (Base) {\n      /**\n       * Creates a new DataGrid\n       *\n       * @constructor\n       * @memberOf keigai\n       * @extends {keigai.Base}\n       * @param  {Object}  target   Element to receive DataGrid\n       * @param  {Object}  store    DataStore\n       * @param  {Array}   fields   Array of fields to display\n       * @param  {Array}   sortable [Optional] Array of sortable columns/fields\n       * @param  {Object}  options  [Optional] DataList options\n       * @param  {Boolean} filtered [Optional] Create an input to filter the DataGrid\n       * @example\n       * let fields  = [\"name\", \"age\"],\n       *     options = {pageSize: 5, order: \"age desc, name\"},\n       *     store   = keigai.store( [...] ),\n       *     grid    = keigai.grid( document.querySelector( \"#grid\" ), store, fields, fields, options, true );\n       */\n      function DataGrid(target, store, fields) {\n        var sortable = arguments[3] === undefined ? [] : arguments[3];\n        var options = arguments[4] === undefined ? {} : arguments[4];\n        var filtered = arguments[5] === undefined ? false : arguments[5];\n        var sortOrder = undefined;\n\n        if (options.order && !string.isEmpty(options.order)) {\n          sortOrder = string.explode(options.order).map(function (i) {\n            return i.replace(regex.after_space, \"\");\n          });\n        }\n\n        this.element = element.create(\"section\", { \"class\": \"grid\" }, target);\n        this.fields = fields;\n        this.filtered = filtered;\n        this.list = null;\n        this.observer = observable.factory();\n        this.options = options;\n        this.store = store;\n        this.sortable = sortable;\n        this.sortOrder = sortOrder || sortable;\n      }\n\n      _inherits(DataGrid, Base);\n\n      _prototypeProperties(DataGrid, null, {\n        add: {\n\n          /**\n           * Adds an item to the DataGrid\n           *\n           * @method add\n           * @memberOf keigai.DataGrid\n           * @param {Object} record New DataStore record (shapes should match)\n           * @return {Object}       {@link keigai.DataGrid}\n           * @example\n           * grid.add( {name: \"John Doe\", age: 34} );\n           */\n          value: function add(record) {\n            var self = this;\n\n            this.store.set(null, record).then(null, function (e) {\n              utility.error(e);\n              self.dispatch(\"error\", e);\n            });\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        dump: {\n\n          /**\n           * Exports data grid records\n           *\n           * @method dump\n           * @memberOf keigai.DataGrid\n           * @return {Array} Record set\n           * @example\n           * let data = grid.dump();\n           */\n          value: function dump() {\n            return this.store.dump(this.list.records, this.fields);\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        refresh: {\n\n          /**\n           * Refreshes the DataGrid\n           *\n           * @method refresh\n           * @memberOf keigai.DataGrid\n           * @fires keigai.DataGrid#beforeRefresh Fires before refresh\n           * @fires keigai.DataGrid#afterRefresh Fires after refresh\n           * @return {Object} {@link keigai.DataGrid}\n           * @example\n           * grid.refresh();\n           */\n          value: function refresh() {\n            var sort = [];\n            var self = this;\n\n            this.dispatch(\"beforeRefresh\", this.element);\n\n            if (this.sortOrder.length > 0) {\n              array.each(this.sortOrder, function (i) {\n                var obj = element.find(self.element, \".header span[data-field='\" + i + \"']\")[0];\n\n                sort.push(string.trim(i + \" \" + (element.data(obj, \"sort\") || \"\")));\n              });\n\n              this.options.order = this.list.order = sort.join(\", \");\n            }\n\n            this.list.where = null;\n            utility.merge(this.list, this.options);\n            this.list.refresh();\n\n            this.dispatch(\"afterRefresh\", this.element);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        remove: {\n\n          /**\n           * Removes an item from the DataGrid\n           *\n           * @method remove\n           * @memberOf keigai.DataGrid\n           * @param {Mixed} record Record, key or index\n           * @return {Object} {@link keigai.DataGrid}\n           * @example\n           * grid.remove( \"key\" );\n           */\n          value: function remove(record) {\n            var self = this;\n\n            this.store.del(record).then(null, function (e) {\n              utility.error(e);\n              self.dispatch(\"error\", e);\n            });\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        sort: {\n\n          /**\n           * Sorts the DataGrid when a column header is clicked\n           *\n           * @method sort\n           * @memberOf keigai.DataGrid\n           * @param  {Object} ev Event\n           * @return {Object} {@link keigai.DataGrid}\n           */\n          value: function sort(ev) {\n            var target = utility.target(ev);\n            var field = undefined;\n\n            // Stopping event propogation\n            utility.stop(ev);\n\n            // Refreshing list if target is sortable\n            if (element.hasClass(target, \"sortable\")) {\n              field = element.data(target, \"field\");\n              element.data(target, \"sort\", element.data(target, \"sort\") === \"asc\" ? \"desc\" : \"asc\");\n              array.remove(this.sortOrder, field);\n              this.sortOrder.splice(0, 0, field);\n              this.refresh();\n            }\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        teardown: {\n\n          /**\n           * Tears down the DataGrid\n           *\n           * @method teardown\n           * @memberOf keigai.DataGrid\n           * @return {Object} {@link keigai.DataGrid}\n           * @example\n           * grid.teardown();\n           */\n          value: function teardown() {\n            this.observer.unhook(element.find(this.element, \"ul.header\")[0], \"click\");\n            this.list.teardown();\n            element.destroy(this.element);\n            this.element = null;\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        update: {\n\n          /**\n           * Updates an item in the DataGrid\n           *\n           * @method update\n           * @memberOf keigai.DataGrid\n           * @param {Mixed}  key  Key or index\n           * @param {Object} data New property values\n           * @return {Object}     {@link keigai.DataGrid}\n           * @example\n           * grid.update( \"key\", {name: \"Jim Smith\"} );\n           */\n          value: function update(key, data) {\n            var self = this;\n\n            this.store.update(key, data).then(null, function (e) {\n              utility.error(e);\n              self.dispatch(\"error\", e);\n            });\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        }\n      });\n\n      return DataGrid;\n    })(Base);\n\n    /**\n     * @namespace grid\n     */\n    var grid = {\n      /**\n       * DataGrid factory\n       *\n       * @method factory\n       * @memberOf grid\n       * @fires keigai.DataGrid#change Fires when the DOM changes\n       * @param  {Object}  target      Element to receive DataGrid\n       * @param  {Object}  store       DataStore\n       * @param  {Array}   fields      Array of fields to display\n       * @param  {Array}   sortable    [Optional] Array of sortable columns/fields\n       * @param  {Object}  options     [Optional] DataList options\n       * @param  {Boolean} filtered    [Optional] Create an input to filter the data grid\n       * @param  {Number}  debounce    [Optional] DataListFilter input debounce, default is 250\n       * @return {Object} {@link keigai.DataGrid}\n       * @example\n       * let fields  = [\"name\", \"age\"],\n       *     options = {pageSize: 5, order: \"age desc, name\"},\n       *     store   = keigai.store(),\n       *     grid    = keigai.grid( document.querySelector( \"#grid\" ), store, fields, fields, options, true );\n       *\n       * store.setUri( \"data.json\" ).then( null, function ( e ) {\n       *   ...\n       * } );\n       */\n      factory: function (target, store, fields, sortable, options, filtered, debounce) {\n        var ref = [store];\n        var obj = new DataGrid(target, ref[0], fields, sortable, options, filtered);\n        var template = \"\";\n        var header = element.create(\"li\", {}, element.create(\"ul\", { \"class\": \"header\" }, obj.element));\n        var width = 100 / obj.fields.length + \"%\";\n        var css = \"display:inline-block;width:\" + width;\n        var sort = obj.options.order ? string.explode(obj.options.order) : [];\n\n        // Creating DataList template based on fields\n        array.each(obj.fields, function (i) {\n          var trimmed = i.replace(/.*\\./g, \"\");\n          var el = element.create(\"span\", {\n            innerHTML: string.capitalize(string.unCamelCase(string.unhyphenate(trimmed, true)).replace(/_|-/g, \" \"), true),\n            style: css,\n            \"data-field\": i\n          }, header);\n\n          // Adding CSS class if \"column\" is sortable\n          if (array.contains(obj.sortable, i)) {\n            element.addClass(el, \"sortable\");\n\n            // Applying default sort, if specified\n            if (sort.filter(function (x) {\n              return x.indexOf(i) === 0;\n            }).length > 0) {\n              element.data(el, \"sort\", array.contains(sort, i + \" desc\") ? \"desc\" : \"asc\");\n            }\n          }\n\n          template += \"<span class=\\\"\" + i + \"\\\" data-field=\\\"\" + i + \"\\\" style=\\\"\" + css + \"\\\">{{\" + i + \"}}</span>\";\n        });\n\n        // Setting click handler on sortable \"columns\"\n        if (obj.sortable.length > 0) {\n          obj.observer.hook(header.parentNode, \"click\", obj.sort, \"sort\", obj);\n        }\n\n        if (obj.filtered === true) {\n          obj.options.listFiltered = true;\n          obj.options.listFilter = obj.fields.join(\",\");\n        }\n\n        // Creating DataList\n        ref.push(list.factory(obj.element, ref[0], template, obj.options));\n\n        // Setting by-reference DataList on DataGrid\n        obj.list = ref[1];\n\n        // Setting up a chain of Events\n        obj.on(\"beforeRefresh\", function (arg) {\n          element.dispatch(arg, \"beforeRefresh\");\n        }, \"bubble\");\n\n        obj.on(\"afterRefresh\", function (arg) {\n          element.dispatch(arg, \"afterRefresh\");\n        }, \"bubble\");\n\n        obj.on(\"click\", function (e) {\n          if (element.hasClass(e.currentTarget, \"header\")) {\n            obj.sort(e);\n          }\n        }, \"header\");\n\n        obj.list.on(\"change\", function () {\n          for (var _len8 = arguments.length, args = Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n            args[_key8] = arguments[_key8];\n          }\n\n          obj.dispatch.apply(obj, [\"change\"].concat(args));\n        }, \"change\");\n\n        obj.list.on(\"beforeFilter\", function () {\n          for (var _len9 = arguments.length, args = Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n            args[_key9] = arguments[_key9];\n          }\n\n          obj.dispatch.apply(obj, [\"beforeFilter\"].concat(args));\n        }, \"beforeFilter\");\n\n        obj.list.on(\"afterFilter\", function () {\n          for (var _len10 = arguments.length, args = Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n            args[_key10] = arguments[_key10];\n          }\n\n          obj.dispatch.apply(obj, [\"afterFilter\"].concat(args));\n        }, \"afterFilter\");\n\n        return obj;\n      }\n    };\n\n    var DataList = (function (Base) {\n      /**\n       * Creates a new DataList\n       *\n       * @constructor\n       * @memberOf keigai\n       * @extends {keigai.Base}\n       * @example\n       * let store = keigai.store( [...] ),\n       *     list  = keigai.list( document.querySelector(\"#list\"), store, \"{{name}}\", {order: \"name\"} );\n       */\n      function DataList(element, store, template) {\n        this.callback = null;\n        this.current = [];\n        this.element = element;\n        this.emptyMsg = label.noData;\n        this.filter = null;\n        this.filtered = [];\n        this.id = utility.genId();\n        this.items = [];\n        this.listFilter = null;\n        this.mutation = null;\n        this.observer = observable.factory();\n        this.pageIndex = 1;\n        this.pageSize = null;\n        this.pageRange = 5;\n        this.pagination = \"bottom\"; // \"top\" or \"bottom|top\" are also valid\n        this.placeholder = \"\";\n        this.order = \"\";\n        this.records = [];\n        this.template = template;\n        this.total = 0;\n        this.store = store;\n        this.where = null;\n      }\n\n      _inherits(DataList, Base);\n\n      _prototypeProperties(DataList, null, {\n        add: {\n\n          /**\n           * Adds an item to the DataList\n           *\n           * @method add\n           * @memberOf keigai.DataList\n           * @param {Object} record New DataStore record (shapes should match)\n           * @return {Object}       {@link keigai.DataList}\n           * @example\n           * list.add( {name: \"John Doe\", age: 34} );\n           */\n          value: function add(record) {\n            var self = this;\n\n            this.store.set(null, record).then(null, function (e) {\n              utility.error(e);\n              self.dispatch(\"error\", e);\n            });\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        dump: {\n\n          /**\n           * Exports data list records\n           *\n           * @method dump\n           * @memberOf keigai.DataList\n           * @return {Array} Record set\n           * @example\n           * let data = list.dump();\n           */\n          value: function dump() {\n            return this.store.dump(this.records);\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        page: {\n\n          /**\n           * Changes the page index of the DataList\n           *\n           * @method page\n           * @memberOf keigai.DataList\n           * @param  {Number} n Page to view\n           * @return {Object}   {@link keigai.DataList}\n           * @example\n           * list.page( 2 );\n           */\n          value: function page(n) {\n            this.pageIndex = n;\n\n            return this.refresh();\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        pages: {\n\n          /**\n           * Adds pagination Elements to the View, executed from `DataList.refresh()`\n           *\n           * @method pages\n           * @memberOf keigai.DataList\n           * @return {Object} {@link keigai.DataList}\n           * @example\n           * list.pages();\n           */\n          value: function pages() {\n            var self = this;\n            var obj = this.element;\n            var page = this.pageIndex;\n            var pos = this.pagination;\n            var range = this.pageRange;\n            var mid = Math.floor(range / 2);\n            var start = page - mid;\n            var end = page + mid;\n            var total = list.pages(this);\n            var diff = undefined;\n\n            // Removing the existing controls\n            array.each(utility.dom(\"#\" + obj.id + \"-pages-top, #\" + obj.id + \"-pages-bottom\"), function (i) {\n              if (i) {\n                self.observer.unhook(i, \"click\");\n                element.destroy(i);\n              }\n            });\n\n            // Halting because there's 1 page, or nothing\n            if (this.filter && this.filtered.length === 0 || this.total === 0 || total === 1) {\n              return this;\n            }\n\n            // Getting the range to display\n            if (start < 1) {\n              diff = number.diff(start, 1);\n              start = start + diff;\n              end = end + diff;\n            }\n\n            if (end > total) {\n              end = total;\n              start = end - range + 1;\n\n              if (start < 1) {\n                start = 1;\n              }\n            }\n\n            if (number.diff(start, end) >= range) {\n              --end;\n            }\n\n            array.each(string.explode(pos), function (i) {\n              var current = false;\n              var more = page > 1;\n              var next = page + 1 <= total;\n              var last = page >= total;\n              var el = undefined,\n                  n = undefined;\n\n              // Setting up the list\n              el = element.create(\"ul\", {\n                \"class\": \"list pages hidden \" + i,\n                id: obj.id + \"-pages-\" + i\n              }, obj, i === \"bottom\" ? \"after\" : \"before\");\n\n              // First page\n              element.create(more ? \"a\" : \"span\", {\n                \"class\": \"first page\",\n                \"data-page\": 1,\n                innerHTML: \"&lt;&lt;\"\n              }, element.create(\"li\", {}, el));\n\n              // Previous page\n              element.create(more ? \"a\" : \"span\", {\n                \"class\": \"prev page\",\n                \"data-page\": page - 1,\n                innerHTML: \"&lt;\"\n              }, element.create(\"li\", {}, el));\n\n              // Rendering the page range\n              n = start - 1;\n              while (++n <= end) {\n                current = n === page;\n                element.create(current ? \"span\" : \"a\", {\n                  \"class\": current ? \"current page\" : \"page\",\n                  \"data-page\": n,\n                  innerHTML: n\n                }, element.create(\"li\", {}, el));\n              }\n\n              // Next page\n              element.create(next ? \"a\" : \"span\", {\n                \"class\": \"next page\",\n                \"data-page\": next ? page + 1 : null,\n                innerHTML: \"&gt;\"\n              }, element.create(\"li\", {}, el));\n\n              // Last page\n              element.create(last ? \"span\" : \"a\", {\n                \"class\": \"last page\",\n                \"data-page\": last ? null : total,\n                innerHTML: \"&gt;&gt;\"\n              }, element.create(\"li\", {}, el));\n\n              // Adding to DOM\n              element.removeClass(el, \"hidden\");\n\n              // Pagination listener\n              self.observer.hook(el, \"click\");\n            });\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        refresh: {\n\n          /**\n           * Refreshes element\n           *\n           * @method refresh\n           * @memberOf keigai.DataList\n           * @extends {keigai.Base}\n           * @fires keigai.DataList#beforeRefresh Fires before refresh\n           * @fires keigai.DataList#afterRefresh Fires after refresh\n           * @fires keigai.DataList#error Fires on error\n           * @param  {Boolean} create [Optional] Recreates cached View of data\n           * @return {Object} {@link keigai.DataList}\n           * @example\n           * list.refresh();\n           */\n          value: function refresh(create) {\n            create = create === true;\n\n            var self = this;\n            var el = this.element;\n            var template = typeof this.template == \"object\";\n            var filter = this.filter !== null;\n            var items = [];\n            var callback = typeof this.callback == \"function\";\n            var reg = new RegExp();\n            var registry = []; // keeps track of records in the list ( for filtering )\n            var range = [];\n            var fn = undefined,\n                ceiling = undefined,\n                next = undefined;\n\n            this.dispatch(\"beforeRefresh\", el);\n\n            // Function to create templates for the html rep\n            if (!template) {\n              fn = function (i) {\n                var html = self.template;\n                var items = array.unique(html.match(/\\{\\{[\\w\\.\\-\\[\\]]+\\}\\}/g));\n\n                // Replacing record key\n                html = html.replace(\"{{\" + self.store.key + \"}}\", i.key);\n\n                // Replacing dot notation properties\n                array.each(items, function (attr) {\n                  var key = attr.replace(/\\{\\{|\\}\\}/g, \"\"),\n                      value = utility.walk(i.data, key);\n\n                  if (value === undefined) {\n                    value = \"\";\n                  }\n\n                  reg.compile(string.escape(attr), \"g\");\n                  html = html.replace(reg, value);\n                });\n\n                // Filling in placeholder value\n                html = html.replace(/\\{\\{.*\\}\\}/g, self.placeholder);\n\n                return \"<li data-key=\\\"\" + i.key + \"\\\">\" + html + \"</li>\";\n              };\n            } else {\n              fn = function (i) {\n                var obj = json.encode(self.template);\n                var items = array.unique(obj.match(/\\{\\{[\\w\\.\\-\\[\\]]+\\}\\}/g));\n\n                // Replacing record key\n                obj = obj.replace(\"{{\" + self.store.key + \"}}\", i.key);\n\n                // Replacing dot notation properties\n                array.each(items, function (attr) {\n                  var key = attr.replace(/\\{\\{|\\}\\}/g, \"\");\n                  var value = utility.walk(i.data, key) || \"\";\n\n                  reg.compile(string.escape(attr), \"g\");\n\n                  // Stripping first and last \" to concat to valid JSON\n                  obj = obj.replace(reg, json.encode(value).replace(/(^\")|(\"$)/g, \"\"));\n                });\n\n                // Filling in placeholder value\n                obj = json.decode(obj.replace(/\\{\\{.*\\}\\}/g, self.placeholder));\n\n                return { li: obj };\n              };\n            }\n\n            // Next phase\n            next = function (args) {\n              // Creating view of DataStore\n              self.records = args;\n              self.total = self.records.length;\n              self.filtered = [];\n\n              // Resetting 'view' specific arrays\n              self.current = [];\n\n              // Filtering records (if applicable)\n              if (filter) {\n                array.each(self.records, function (i) {\n                  utility.iterate(self.filter, function (v, k) {\n                    var key = undefined;\n\n                    if (array.contains(registry, i.key)) {\n                      return false;\n                    }\n\n                    key = k === self.store.key;\n\n                    array.each(string.explode(v), function (query) {\n                      var reg = new RegExp(query, \"i\");\n                      var value = !key ? utility.walk(i.data, k) : \"\";\n\n                      if (key && reg.test(i.key) || reg.test(value)) {\n                        registry.push(i.key);\n                        self.filtered.push(i);\n\n                        return false;\n                      }\n                    });\n                  });\n                });\n              }\n\n              // Pagination\n              if (self.pageSize !== null && !isNaN(self.pageIndex) && !isNaN(self.pageSize)) {\n                ceiling = list.pages(self);\n\n                // Passed the end, so putting you on the end\n                if (ceiling > 0 && self.pageIndex > ceiling) {\n                  return self.page(ceiling);\n                }\n                // Paginating the items\n                else if (self.total > 0) {\n                  range = list.range(self);\n                  self.current = array.limit(!filter ? self.records : self.filtered, range[0], range[1]);\n                }\n              } else {\n                self.current = !filter ? self.records : self.filtered;\n              }\n\n              // Processing records & generating templates\n              array.each(self.current, function (i) {\n                var html = fn(i);\n                var hash = btoa(html);\n\n                items.push({ key: i.key, template: html, hash: hash });\n              });\n\n              // Updating element\n              utility.render(function () {\n                var destroy = [];\n                var callbacks = [];\n                var i = undefined,\n                    nth = undefined;\n\n                if (items.length === 0) {\n                  element.html(el, \"<li class=\\\"empty\\\">\" + self.emptyMsg + \"</li>\");\n                } else {\n                  if (self.items.length === 0) {\n                    element.html(el, items.map(function (i) {\n                      return i.template;\n                    }).join(\"\"));\n\n                    if (callback) {\n                      array.each(array.cast(el.childNodes), function (i) {\n                        self.callback(i);\n                      });\n                    }\n                  } else {\n                    array.each(items, function (i, idx) {\n                      if (self.items[idx] !== undefined && self.items[idx].hash !== i.hash) {\n                        element.data(element.html(el.childNodes[idx], i.template.replace(/<li data-key=\\\"\\d+\\\">|<\\/li>/g, \"\")), \"key\", i.key);\n                        callbacks.push(idx);\n                      } else if (self.items[idx] === undefined) {\n                        element.create(i.template, null, el);\n                        callbacks.push(idx);\n                      }\n                    });\n\n                    if (items.length < self.items.length) {\n                      i = items.length - 1;\n                      nth = self.items.length;\n\n                      while (++i < nth) {\n                        destroy.push(i);\n                      }\n\n                      array.each(destroy.reverse(), function (i) {\n                        element.destroy(el.childNodes[i]);\n                      });\n                    }\n\n                    if (callback) {\n                      array.each(callbacks, function (i) {\n                        self.callback(el.childNodes[i]);\n                      });\n                    }\n                  }\n                }\n\n                // Updating reference for next change\n                self.items = items;\n\n                // Rendering pagination elements\n                if (self.pageSize !== null && regex.top_bottom.test(self.pagination) && !isNaN(self.pageIndex) && !isNaN(self.pageSize)) {\n                  self.pages();\n                } else {\n                  array.each(utility.$(\"#\" + el.id + \"-pages-top, #\" + el.id + \"-pages-bottom\"), function (i) {\n                    element.destroy(i);\n                  });\n                }\n\n                self.dispatch(\"afterRefresh\", el);\n              });\n            };\n\n            // Consuming records based on sort\n            if (this.where === null) {\n              string.isEmpty(this.order) ? next(this.store.get()) : this.store.sort(this.order, create).then(next, function (e) {\n                utility.error(e);\n                self.dispatch(\"error\", e);\n              });\n            } else if (string.isEmpty(this.order)) {\n              this.store.select(this.where).then(next, function (e) {\n                utility.error(e);\n                self.dispatch(\"error\", e);\n              });\n            } else {\n              this.store.sort(this.order, create, this.where).then(next, function (e) {\n                utility.error(e);\n                self.dispatch(\"error\", e);\n              });\n            }\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        remove: {\n\n          /**\n           * Removes an item from the DataList\n           *\n           * @method remove\n           * @memberOf keigai.DataList\n           * @param {Mixed} record Record, key or index\n           * @return {Object} {@link keigai.DataList}\n           * @example\n           * // Adding a click handler to 'trash' Elements\n           * keigai.util.array.cast( document.querySelectorAll( \".list .trash\" ) ).forEach( ( i ) => {\n           *   i.addEventListener( \"click\", ( ev ) => {\n           *     let key = keigai.util.element.data( keigai.util.target( ev ).parentNode, \"key\" );\n           *\n           *     list.remove( key );\n           *   }, false );\n           * } );\n           */\n          value: function remove(record) {\n            var self = this;\n\n            this.store.del(record).then(null, function (e) {\n              utility.error(e);\n              self.dispatch(\"error\", e);\n            });\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        sort: {\n\n          /**\n           * Sorts data list & refreshes element\n           *\n           * @method sort\n           * @memberOf keigai.DataList\n           * @param  {String} order SQL \"ORDER BY\" clause\n           * @return {Object} {@link keigai.DataList}\n           * @example\n           * list.sort( \"age, name\" );\n           */\n          value: function sort(order) {\n            this.order = order;\n\n            return this.refresh();\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        teardown: {\n\n          /**\n           * Tears down references to the DataList\n           *\n           * @method teardown\n           * @memberOf keigai.DataList\n           * @param  {Boolean} destroy [Optional] `true` will remove the DataList from the DOM\n           * @return {Object} {@link keigai.DataList}\n           * @example\n           * list.teardown();\n           */\n          value: function teardown(destroy) {\n            destroy = destroy === true;\n\n            var self = this;\n            var el = this.element;\n            var id = el.id;\n\n            array.each(this.store.lists, function (i, idx) {\n              if (i.id === self.id) {\n                array.remove(self.store.lists, idx);\n\n                return false;\n              }\n            });\n\n            if (this.listFilter) {\n              this.listFilter.teardown();\n            }\n\n            array.each(utility.$(\"#\" + id + \"-pages-top, #\" + id + \"-pages-bottom\"), function (i) {\n              self.observer.unhook(i, \"click\");\n\n              if (destroy) {\n                element.destroy(i);\n              }\n            });\n\n            this.observer.unhook(el, \"click\");\n\n            if (destroy) {\n              element.destroy(el);\n            }\n\n            this.element = null;\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        update: {\n\n          /**\n           * Updates an item in the DataList\n           *\n           * @method update\n           * @memberOf keigai.DataList\n           * @param {Mixed}  key  Key or index\n           * @param {Object} data New property values\n           * @return {Object}     {@link keigai.DataList}\n           * @example\n           * list.update( \"key\", {name: \"Jim Smith\"} );\n           */\n          value: function update(key, data) {\n            var self = this;\n\n            this.store.update(key, data).then(null, function (e) {\n              utility.error(e);\n              self.dispatch(\"error\", e);\n            });\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        }\n      });\n\n      return DataList;\n    })(Base);\n\n    /**\n     * @namespace list\n     */\n    var list = {\n      /**\n       * Creates an instance of DataList\n       *\n       * @method factory\n       * @memberOf list\n       * @fires keigai.DataList#change Fires when the DOM changes\n       * @param  {Object} target   Element to receive the DataList\n       * @param  {Object} store    {@link keigai.DataStore}\n       * @param  {Mixed}  template Record field, template ( $.tpl ), or String, e.g. \"<p>this is a {{field}} sample.</p>\", fields are marked with {{ }}\n       * @param  {Object} options  Optional parameters to set on the DataList\n       * @return {Object} {@link keigai.DataList}\n       * @example\n       * let store = keigai.store( [...] ),\n       *     list  = keigai.list( document.querySelector(\"#list\"), store, \"{{name}}\", {order: \"name\"} );\n       */\n      factory: function (target, store, template, options) {\n        var ref = [store];\n        var obj = new DataList(element.create(\"ul\", { \"class\": \"list\", id: utility.genId(null, true) }, target), ref[0], template);\n\n        if (options instanceof Object) {\n          if (options.listFiltered && options.listFilter) {\n            obj.listFilter = filter.factory(element.create(\"input\", {\n              id: obj.element.id + \"-filter\",\n              \"class\": \"filter\",\n              placeholder: \"Filter\"\n            }, target, \"first\"), obj, options.listFilter, options.debounce || 250);\n            delete options.listFilter;\n            delete options.listFiltered;\n            delete options.debounce;\n          }\n\n          utility.merge(obj, options);\n        }\n\n        obj.store.lists.push(obj);\n\n        // Setting up a chain of Events\n        obj.on(\"beforeRefresh\", function (arg) {\n          element.dispatch(arg, \"beforeRefresh\");\n        }, \"bubble\");\n\n        obj.on(\"afterRefresh\", function (arg) {\n          element.dispatch(arg, \"afterRefresh\");\n        }, \"bubble\");\n\n        obj.on(\"change\", function (arg) {\n          element.dispatch(obj.element, \"change\", arg);\n        }, \"change\");\n\n        obj.on(\"click\", function (e) {\n          var target = utility.target(e);\n          var page = undefined;\n\n          utility.stop(e);\n\n          if (target.nodeName === \"A\") {\n            page = element.data(target, \"page\");\n\n            if (!isNaN(page)) {\n              obj.page(page);\n            }\n          }\n        }, \"pagination\");\n\n        if (typeof MutationObserver == \"function\") {\n          obj.mutation = new MutationObserver(function (arg) {\n            obj.dispatch(\"change\", arg);\n          });\n\n          obj.mutation.observe(obj.element, { childList: true, subtree: true });\n        }\n\n        // Rendering if not tied to an API or data is ready\n        if (obj.store.uri === null || obj.store.loaded) {\n          obj.refresh();\n        }\n\n        return obj;\n      },\n\n      /**\n       * Calculates the total pages\n       *\n       * @method pages\n       * @memberOf list\n       * @return {Number} Total pages\n       * @private\n       */\n      pages: function (obj) {\n        if (isNaN(obj.pageSize)) {\n          throw new Error(label.invalidArguments);\n        }\n\n        return Math.ceil((!obj.filter ? obj.total : obj.filtered.length) / obj.pageSize);\n      },\n\n      /**\n       * Calculates the page size as an Array of start & finish\n       *\n       * @method range\n       * @memberOf list\n       * @return {Array}  Array of start & end numbers\n       * @private\n       */\n      range: function (obj) {\n        var start = obj.pageIndex * obj.pageSize - obj.pageSize;\n        var end = obj.pageSize;\n\n        return [start, end];\n      }\n    };\n\n    var Deferred = (function () {\n      /**\n       * Creates a new Deferred\n       *\n       * @constructor\n       * @memberOf keigai\n       */\n      function Deferred() {\n        var self = this;\n\n        this.promise = promise.factory();\n        this.onDone = [];\n        this.onAlways = [];\n        this.onFail = [];\n\n        // Setting handlers to execute Arrays of Functions\n        this.promise.then(function (arg) {\n          array.each(self.onDone, function (i) {\n            i(arg);\n          });\n\n          array.each(self.onAlways, function (i) {\n            i(arg);\n          });\n\n          self.onAlways = [];\n          self.onDone = [];\n          self.onFail = [];\n        }, function (arg) {\n          array.each(self.onFail, function (i) {\n            i(arg);\n          });\n\n          array.each(self.onAlways, function (i) {\n            i(arg);\n          });\n\n          self.onAlways = [];\n          self.onDone = [];\n          self.onFail = [];\n        });\n      }\n\n      _prototypeProperties(Deferred, null, {\n        always: {\n\n          /**\n           * Registers a function to execute after Promise is reconciled\n           *\n           * @method always\n           * @memberOf keigai.Deferred\n           * @param  {Function} arg Function to execute\n           * @return {Object} {@link keigai.Deferred}\n           * @example\n           * let deferred = keigai.util.defer();\n           *\n           * deferred.always( function () {\n           *     ...\n           * } ).then( function () {\n           *     ...\n           * } );\n           *\n           * ...\n           *\n           * deferred.resolve( true );\n           */\n          value: function always(arg) {\n            this.onAlways.push(arg);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        done: {\n\n          /**\n           * Registers a function to execute after Promise is resolved\n           *\n           * @method done\n           * @memberOf keigai.Deferred\n           * @param  {Function} arg Function to execute\n           * @return {Object} {@link keigai.Deferred}\n           * @example\n           * let deferred = keigai.util.defer();\n           *\n           * deferred.done( function ( ... ) {\n           *   ...\n           * } );\n           */\n          value: function done(arg) {\n            this.onDone.push(arg);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        fail: {\n\n          /**\n           * Registers a function to execute after Promise is rejected\n           *\n           * @method fail\n           * @memberOf keigai.Deferred\n           * @param  {Function} arg Function to execute\n           * @return {Object} {@link keigai.Deferred}\n           * @example\n           * let deferred = keigai.util.defer();\n           *\n           * deferred.fail( function ( ... ) {\n           *   ...\n           * } );\n           */\n          value: function fail(arg) {\n            this.onFail.push(arg);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        reject: {\n\n          /**\n           * Rejects the Promise\n           *\n           * @method reject\n           * @memberOf keigai.Deferred\n           * @param  {Mixed} arg Rejection outcome\n           * @return {Object} {@link keigai.Deferred}\n           * @example\n           * let deferred = keigai.util.defer();\n           *\n           * deferred.reject( new Error( \"Something went wrong\" ) );\n           */\n          value: function reject(arg) {\n            this.promise.reject.call(this.promise, arg);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        resolve: {\n\n          /**\n           * Resolves the Promise\n           *\n           * @method resolve\n           * @memberOf keigai.Deferred\n           * @param  {Mixed} arg Resolution outcome\n           * @return {Object} {@link keigai.Deferred}\n           * @example\n           * let deferred = keigai.util.defer();\n           *\n           * deferred.resolve( true );\n           */\n          value: function resolve(arg) {\n            this.promise.resolve.call(this.promise, arg);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        then: {\n\n          /**\n           * Registers handler(s) for the Promise\n           *\n           * @method then\n           * @memberOf keigai.Deferred\n           * @param  {Function} success Executed when/if promise is resolved\n           * @param  {Function} failure [Optional] Executed when/if promise is broken\n           * @return {Object} {@link Promise}\n           * @example\n           * let deferred = keigai.util.defer();\n           *\n           * deferred.then( function ( ... ) { ... }, function ( err ) { ... } )\n           *         .then( function ( ... ) { ... }, function ( err ) { ... } );\n           *\n           * ...\n           *\n           * deferred.resolve( true );\n           */\n          value: function then(success, failure) {\n            return this.promise.then(success, failure);\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        }\n      });\n\n      return Deferred;\n    })();\n\n    /**\n     * @namespace deferred\n     */\n    var deferred = {\n      /**\n       * Deferred factory\n       *\n       * @method factory\n       * @memberOf deferred\n       * @return {Object} {@link keigai.Deferred}\n       * @example\n       * let deferred = keigai.util.defer();\n       *\n       * deferred.then( function ( ... ) { ... }, function ( err ) { ... } )\n       * deferred.always( function ( ... ) { ... } );\n       *\n       * ...\n       *\n       * deferred.resolve( true );\n       */\n      factory: function () {\n        return new Deferred();\n      }\n    };\n\n    /**\n     * @namespace element\n     */\n    var element = {\n      /**\n       * Adds a CSS class to an Element\n       *\n       * @method addClass\n       * @memberOf element\n       * @param  {Object} obj Element\n       * @param  {String} arg CSS class\n       * @return {Object}     Element\n       * @example\n       * keigai.util.element.addClass( document.querySelector( \"#target\" ), \"newClass\" );\n       */\n      addClass: function (obj, arg) {\n        element.klass(obj, arg, true);\n      },\n\n      /**\n       * Appends an Element to an Element\n       *\n       * @method appendTo\n       * @memberOf element\n       * @param  {Object} obj   Element\n       * @param  {Object} child Child Element\n       * @return {Object}       Element\n       * @example\n       * keigai.util.element.appendTo( document.querySelector( \"#target\" ), document.querySelector( \"#something\" ) );\n       */\n      appendTo: function (obj, child) {\n        obj.appendChild(child);\n\n        return obj;\n      },\n\n      /**\n       * Gets or sets an Element attribute\n       *\n       * @method attr\n       * @memberOf element\n       * @param  {Object} obj   Element\n       * @param  {String} name  Attribute name\n       * @param  {Mixed}  value Attribute value\n       * @return {Object}       Element\n       * @example\n       * keigai.util.element.attr( document.querySelector( \"select\" ), \"selected\", \"option 1\" );\n       */\n      attr: function (obj, key, value) {\n        var target = undefined,\n            result = undefined;\n\n        if (regex.svg.test(obj.namespaceURI)) {\n          if (value === undefined) {\n            result = obj.getAttributeNS(obj.namespaceURI, key);\n\n            if (result === null || string.isEmpty(result)) {\n              result = undefined;\n            } else {\n              result = utility.coerce(result);\n            }\n          } else {\n            obj.setAttributeNS(obj.namespaceURI, key, value);\n          }\n        } else {\n          if (typeof value == \"string\") {\n            value = string.trim(value);\n          }\n\n          if (regex.checked_disabled.test(key) && value === undefined) {\n            return utility.coerce(obj[key]);\n          } else if (regex.checked_disabled.test(key) && value !== undefined) {\n            obj[key] = value;\n          } else if (obj.nodeName === \"SELECT\" && key === \"selected\" && value === undefined) {\n            return utility.dom(\"#\" + obj.id + \" option[selected=\\\"selected\\\"]\")[0] || utility.dom(\"#\" + obj.id + \" option\")[0];\n          } else if (obj.nodeName === \"SELECT\" && key === \"selected\" && value !== undefined) {\n            target = utility.dom(\"#\" + obj.id + \" option[selected=\\\"selected\\\"]\")[0];\n\n            if (target !== undefined) {\n              target.selected = false;\n              target.removeAttribute(\"selected\");\n            }\n\n            target = utility.dom(\"#\" + obj.id + \" option[value=\\\"\" + value + \"\\\"]\")[0];\n            target.selected = true;\n            target.setAttribute(\"selected\", \"selected\");\n          } else if (value === undefined) {\n            result = obj.getAttribute(key);\n\n            if (result === null || string.isEmpty(result)) {\n              result = undefined;\n            } else {\n              result = utility.coerce(result);\n            }\n\n            return result;\n          } else {\n            obj.setAttribute(key, value);\n          }\n        }\n\n        return obj;\n      },\n\n      /**\n       * Clears an object's innerHTML, or resets it's state\n       *\n       * @method clear\n       * @memberOf element\n       * @param  {Object} obj Element\n       * @return {Object}     Element\n       * @example\n       * keigai.util.element.clear( document.querySelector( \"#something\" ) );\n       */\n      clear: function (obj) {\n        if (typeof obj.reset == \"function\") {\n          obj.reset();\n        } else if (obj.value !== undefined) {\n          element.update(obj, { innerHTML: \"\", value: \"\" });\n        } else {\n          element.update(obj, { innerHTML: \"\" });\n        }\n\n        return obj;\n      },\n\n      /**\n       * Creates an Element in document.body or a target Element.\n       * An id is generated if not specified with args.\n       *\n       * @method create\n       * @memberOf element\n       * @param  {String} type Type of Element to create, or HTML String\n       * @param  {Object} args [Optional] Properties to set\n       * @param  {Object} obj  [Optional] Target Element\n       * @param  {Mixed}  pos  [Optional] \"first\", \"last\" or Object describing how to add the new Element, e.g. {before: referenceElement}, default is \"last\"\n       * @return {Mixed}       Element that was created, or an Array if `type` is a String of multiple Elements (frag)\n       * @example\n       * keigai.util.element.create( \"div\", {innerHTML: \"Hello World!\"}, document.querySelector( \"#something\" ) );\n       * keigai.util.element.create( \"&lt;div&gt;Hello World!&lt;/div&gt;\" );\n       */\n      create: function (type, args, obj, pos) {\n        var svg = false;\n        var frag = false;\n        var fragment = undefined,\n            result = undefined;\n\n        // Removing potential HTML template formatting\n        type = type.replace(/\\t|\\n|\\r/g, \"\");\n\n        if (obj) {\n          svg = obj.namespaceURI && regex.svg.test(obj.namespaceURI);\n        } else {\n          obj = document.body;\n        }\n\n        // String injection, create a frag and apply it\n        if (regex.html.test(type)) {\n          frag = true;\n          fragment = element.frag(type);\n          result = fragment.childNodes.length === 1 ? fragment.childNodes[0] : array.cast(fragment.childNodes);\n        }\n        // Original syntax\n        else {\n          if (!svg && !regex.svg.test(type)) {\n            fragment = document.createElement(type);\n          } else {\n            fragment = document.createElementNS(\"http://www.w3.org/2000/svg\", type);\n          }\n\n          if (args instanceof Object) {\n            element.update(fragment, args);\n          }\n        }\n\n        if (!pos || pos === \"last\") {\n          obj.appendChild(fragment);\n        } else if (pos === \"first\") {\n          element.prependChild(obj, fragment);\n        } else if (pos === \"after\") {\n          pos = { after: obj };\n          obj = obj.parentNode;\n          obj.insertBefore(fragment, pos.after.nextSibling);\n        } else if (pos.after) {\n          obj.insertBefore(fragment, pos.after.nextSibling);\n        } else if (pos === \"before\") {\n          pos = { before: obj };\n          obj = obj.parentNode;\n          obj.insertBefore(fragment, pos.before);\n        } else if (pos.before) {\n          obj.insertBefore(fragment, pos.before);\n        } else {\n          obj.appendChild(fragment);\n        }\n\n        return !frag ? fragment : result;\n      },\n\n      /**\n       * Gets or sets a CSS style attribute on an Element\n       *\n       * @method css\n       * @memberOf element\n       * @param  {Object} obj   Element\n       * @param  {String} key   CSS to put in a style tag\n       * @param  {String} value [Optional] Value to set\n       * @return {Object}       Element\n       * @example\n       * keigai.util.element.css( document.querySelector( \"#something\" ), \"font-weight\", \"bold\" );\n       * keigai.util.element.css( document.querySelector( \"#something\" ), \"font-weight\" ); // \"bold\"\n       */\n      css: function (obj, key, value) {\n        if (!regex.caps.test(key)) {\n          key = string.toCamelCase(key);\n        }\n\n        if (value !== undefined) {\n          obj.style[key] = value;\n          return obj;\n        } else {\n          return obj.style[key];\n        }\n      },\n\n      /**\n       * Data attribute facade acting as a getter (with coercion) & setter\n       *\n       * @method data\n       * @memberOf element\n       * @param  {Object} obj   Element\n       * @param  {String} key   Data key\n       * @param  {Mixed}  value Boolean, Number or String to set\n       * @return {Mixed}        undefined, Element or value\n       * @example\n       * // Setting\n       * keigai.util.element.data( document.querySelector( \"#something\" ), \"id\", \"abc-1234\" );\n       *\n       * // Getting\n       * keigai.util.element.data( document.querySelector( \"#something\" ), \"id\" ); // \"abc-1234\"\n       *\n       * // Unsetting\n       * keigai.util.element.data( document.querySelector( \"#something\" ), \"id\", null );\n       *\n       * // Setting a `null` value can be done by using a String\n       * keigai.util.element.data( document.querySelector( \"#something\" ), \"id\", \"null\" );\n       */\n      data: function (obj, key, value) {\n        if (value !== undefined) {\n          obj.setAttribute(\"data-\" + key, regex.json_wrap.test(value) ? json.encode(value) : value);\n\n          return obj;\n        } else {\n          return utility.coerce(obj.getAttribute(\"data-\" + key));\n        }\n      },\n\n      /**\n       * Destroys an Element\n       *\n       * @method destroy\n       * @memberOf element\n       * @param  {Object} obj Element\n       * @return {Undefined} undefined\n       * @example\n       * keigai.util.element.destroy( document.querySelector( \"#something\" ) );\n       */\n      destroy: function (obj) {\n        if (obj.parentNode !== null) {\n          obj.parentNode.removeChild(obj);\n        }\n\n        return undefined;\n      },\n\n      /**\n       * Disables an Element\n       *\n       * @method disable\n       * @memberOf element\n       * @param  {Object} obj Element\n       * @return {Object}     Element\n       * @example\n       * keigai.util.element.disable( document.querySelector( \"#something\" ) );\n       */\n      disable: function (obj) {\n        if (typeof obj.disabled == \"boolean\" && !obj.disabled) {\n          obj.disabled = true;\n        }\n\n        return obj;\n      },\n\n      /**\n       * Dispatches a DOM Event from an Element\n       *\n       * `data` will appear as `Event.detail`\n       *\n       * @method dispatch\n       * @memberOf element\n       * @param  {Object}  obj        Element which dispatches the Event\n       * @param  {String}  type       Type of Event to dispatch\n       * @param  {Object}  data       [Optional] Data to include with the Event\n       * @param  {Boolean} bubbles    [Optional] Determines if the Event bubbles, defaults to `true`\n       * @param  {Boolean} cancelable [Optional] Determines if the Event can be canceled, defaults to `true`\n       * @return {Object}             Element which dispatches the Event\n       * @example\n       * keigai.util.element.dispatch( document.querySelector( \"#something\" ), \"click\" );\n       */\n      dispatch: function (obj, type) {\n        var data = arguments[2] === undefined ? {} : arguments[2];\n        var bubbles = arguments[3] === undefined ? true : arguments[3];\n        var cancelable = arguments[4] === undefined ? true : arguments[4];\n        var ev = undefined;\n\n        if (!obj) {\n          return;\n        }\n\n        try {\n          ev = new CustomEvent(type);\n        } catch (e) {\n          ev = document.createEvent(\"CustomEvent\");\n        }\n\n        ev.initCustomEvent(type, bubbles, cancelable, data);\n        obj.dispatchEvent(ev);\n\n        return obj;\n      },\n\n      /**\n       * Enables an Element\n       *\n       * @method enable\n       * @memberOf element\n       * @param  {Object} obj Element\n       * @return {Object}     Element\n       * @example\n       * keigai.util.element.enable( document.querySelector( \"#something\" ) );\n       */\n      enable: function (obj) {\n        if (typeof obj.disabled == \"boolean\" && obj.disabled) {\n          obj.disabled = false;\n        }\n\n        return obj;\n      },\n\n      /**\n       * Finds descendant childNodes of Element matched by arg\n       *\n       * @method find\n       * @memberOf element\n       * @param  {Object} obj Element to search\n       * @param  {String} arg Comma delimited string of descendant selectors\n       * @return {Mixed}      Array of Elements or undefined\n       * @example\n       * keigai.util.element.find( document.querySelector( \"#something\" ), \"p\" );\n       */\n      find: function (obj, arg) {\n        var result = [];\n\n        array.each(string.explode(arg), function (i) {\n          result = result.concat(array.cast(obj.querySelectorAll(i)));\n        });\n\n        return result;\n      },\n\n      /**\n       * Creates a document fragment\n       *\n       * @method frag\n       * @memberOf element\n       * @param  {String} arg [Optional] innerHTML\n       * @return {Object}     Document fragment\n       * @example\n       * let frag = keigai.util.element.frag( \"Hello World!\" );\n       */\n      frag: function (arg) {\n        var obj = document.createDocumentFragment();\n\n        if (arg) {\n          array.each(array.cast(element.create(\"div\", { innerHTML: arg }, obj).childNodes), function (i) {\n            obj.appendChild(i);\n          });\n\n          obj.removeChild(obj.childNodes[0]);\n        }\n\n        return obj;\n      },\n\n      /**\n       * Determines if Element has descendants matching arg\n       *\n       * @method has\n       * @memberOf element\n       * @param  {Object} obj Element\n       * @param  {String} arg Type of Element to find\n       * @return {Boolean}    `true` if 1 or more Elements are found\n       * @example\n       * if ( keigai.util.element.has( document.querySelector( \"#something\" ), \"p\" ) ) {\n       *   ...\n       * }\n       */\n      has: function (obj, arg) {\n        var result = element.find(obj, arg);\n\n        return !isNaN(result.length) && result.length > 0;\n      },\n\n      /**\n       * Determines if obj has a specific CSS class\n       *\n       * @method hasClass\n       * @memberOf element\n       * @param  {Object} obj Element\n       * @param  {String} arg CSS class to test for\n       * @return {Boolean}    `true` if Element has `arg`\n       * @example\n       * if ( keigai.util.element.hasClass( document.querySelector( \"#something\" ), \"someClass\" ) ) {\n       *   ...\n       * }\n       */\n      hasClass: function (obj, arg) {\n        return obj.classList.contains(arg);\n      },\n\n      /**\n       * Returns a Boolean indidcating if the Object is hidden\n       *\n       * @method hidden\n       * @memberOf element\n       * @param  {Object} obj Element\n       * @return {Boolean}   `true` if hidden\n       * @example\n       * if ( keigai.util.element.hidden( document.querySelector( \"#something\" ) ) ) {\n       *   ...\n       * }\n       */\n      hidden: function (obj) {\n        return obj.style.display === \"none\" || obj.hidden === true;\n      },\n\n      /**\n       * Gets or sets an Elements innerHTML\n       *\n       * @method html\n       * @memberOf element\n       * @param  {Object} obj Element\n       * @param  {String} arg [Optional] innerHTML value\n       * @return {Object}     Element\n       * @example\n       * keigai.util.element.html( document.querySelector( \"#something\" ), \"Hello World!\" );\n       * keigai.util.element.html( document.querySelector( \"#something\" ) ); // \"Hello World!\"\n       */\n      html: function (obj, arg) {\n        if (arg === undefined) {\n          return obj.innerHTML;\n        } else {\n          obj.innerHTML = arg;\n          return obj;\n        }\n      },\n\n      /**\n       * Determines if Element is equal to `arg`, supports nodeNames & CSS2+ selectors\n       *\n       * @method is\n       * @memberOf element\n       * @param  {Object} obj Element\n       * @param  {String} arg Property to query\n       * @return {Boolean}    `true` if a match\n       * @example\n       * if ( keigai.util.element.is( document.querySelector( \"#something\" ), \"div\" ) ) {\n       *   ...\n       * }\n       *\n       * if ( keigai.util.element.is( document.querySelector( \"#something\" ), \":first-child\" ) ) {\n       *   ...\n       * }\n       */\n      is: function (obj, arg) {\n        if (regex.selector_is.test(arg)) {\n          return element.find(obj.parentNode, obj.nodeName.toLowerCase() + arg).filter(function (i) {\n            return i.id === obj.id;\n          }).length === 1;\n        } else {\n          return new RegExp(arg, \"i\").test(obj.nodeName);\n        }\n      },\n\n      /**\n       * Adds or removes a CSS class\n       *\n       * @method klass\n       * @memberOf element\n       * @param  {Object}  obj Element\n       * @param  {String}  arg Class to add or remove ( can be a wildcard )\n       * @param  {Boolean} add Boolean to add or remove, defaults to true\n       * @return {Object}      Element\n       * @example\n       * // Adding a class\n       * keigai.util.element.klass( document.querySelector( \"#something\" ), \"newClass\" );\n       *\n       * // Removing a class\n       * keigai.util.element.klass( document.querySelector( \"#something\" ), \"newClass\", false );\n       */\n      klass: function (obj, arg) {\n        var add = arguments[2] === undefined ? true : arguments[2];\n        arg = string.explode(arg, \" \");\n\n        if (add) {\n          array.each(arg, function (i) {\n            obj.classList.add(i);\n          });\n        } else {\n          array.each(arg, function (i) {\n            if (i !== \"*\") {\n              obj.classList.remove(i);\n            } else {\n              array.each(obj.classList, function (x) {\n                obj.classList.remove(x);\n              });\n\n              return false;\n            }\n          });\n        }\n\n        return obj;\n      },\n\n      /**\n       * Finds the position of an Element\n       *\n       * @method position\n       * @memberOf element\n       * @param  {Object} obj Element\n       * @return {Array}      Coordinates [left, top, right, bottom]\n       * @example\n       * let pos = keigai.util.element.position( document.querySelector( \"#something\" ) );\n       */\n      position: function () {\n        var obj = arguments[0] === undefined ? document.body : arguments[0];\n        return (function () {\n          var left = undefined,\n              top = undefined,\n              right = undefined,\n              bottom = undefined,\n              height = undefined,\n              width = undefined;\n\n          left = top = 0;\n          width = obj.offsetWidth;\n          height = obj.offsetHeight;\n\n          if (obj.offsetParent) {\n            top = obj.offsetTop;\n            left = obj.offsetLeft;\n\n            while (obj = obj.offsetParent) {\n              left += obj.offsetLeft;\n              top += obj.offsetTop;\n            }\n\n            right = document.body.offsetWidth - (left + width);\n            bottom = document.body.offsetHeight - (top + height);\n          } else {\n            right = width;\n            bottom = height;\n          }\n\n          return [left, top, right, bottom];\n        })();\n      },\n\n      /**\n       * Prepends an Element to an Element\n       *\n       * @method prependChild\n       * @memberOf element\n       * @param  {Object} obj   Element\n       * @param  {Object} child Child Element\n       * @return {Object}       Element\n       * @example\n       * keigai.util.element.prependChild( document.querySelector( \"#target\" ), document.querySelector( \"#something\" ) );\n       */\n      prependChild: function (obj, child) {\n        return obj.childNodes.length === 0 ? obj.appendChild(child) : obj.insertBefore(child, obj.childNodes[0]);\n      },\n\n      /**\n       * Removes an Element attribute\n       *\n       * @method removeAttr\n       * @memberOf element\n       * @param  {Object} obj Element\n       * @param  {String} key Attribute name\n       * @return {Object}     Element\n       * @example\n       * keigai.util.element.removeAttr( document.querySelector( \"a\" ), \"href\" );\n       */\n      removeAttr: function (obj, key) {\n        if (regex.svg.test(obj.namespaceURI)) {\n          obj.removeAttributeNS(obj.namespaceURI, key);\n        } else {\n          if (obj.nodeName === \"SELECT\" && key === \"selected\") {\n            array.each(element.find(obj, \"option\"), function (i) {\n              if (i.selected === true) {\n                i.selected = false;\n                i.removeAttribute(\"selected\");\n                return false;\n              }\n            });\n          } else {\n            obj.removeAttribute(key);\n          }\n        }\n\n        return obj;\n      },\n\n      /**\n       * Removes a CSS class from Element\n       *\n       * @method removeClass\n       * @memberOf element\n       * @param  {Object} obj Element\n       * @param  {String} arg CSS class\n       * @return {Object}     Element\n       * @example\n       * keigai.util.element.removeClass( document.querySelector( \"#target\" ), \"existingClass\" );\n       */\n      removeClass: function (obj, arg) {\n        element.klass(obj, arg, false);\n      },\n\n      /**\n       * Scrolls to the position of an Element\n       *\n       * @method scrollTo\n       * @memberOf element\n       * @param  {Object} obj        Element to scroll to\n       * @param  {Number} ms         [Optional] Milliseconds to scroll, default is 250, min is 100\n       * @param  {Number} offsetTop  [Optional] Offset from top of Element\n       * @param  {Number} offsetLeft [Optional] Offset from left of Element\n       * @return {Object} {@link Deferred}\n       * @example\n       * keigai.util.element.scrollTo( document.querySelector( \"#something\" ) ).then( () => {\n       *   ...\n       * } );\n       */\n      scrollTo: function (obj, ms, offsetTop, offsetLeft) {\n        var pos = array.remove(element.position(obj), 2, 3);\n\n        if (!isNaN(offsetTop)) {\n          pos[0] += offsetTop;\n        }\n\n        if (!isNaN(offsetLeft)) {\n          pos[1] += offsetLeft;\n        }\n\n        return client.scroll(pos, ms);\n      },\n\n      /**\n       * Serializes the elements of an Element\n       *\n       * @method serialize\n       * @memberOf element\n       * @param  {Object}  obj    Element\n       * @param  {Boolean} string [Optional] true if you want a query string, default is false ( JSON )\n       * @param  {Boolean} encode [Optional] true if you want to URI encode the value, default is true\n       * @return {Mixed}          String or Object\n       * @example\n       * let userInput = keigai.util.element.serialize( document.querySelector( \"form\" ) );\n       */\n      serialize: function (obj) {\n        var string = arguments[1] === undefined ? true : arguments[1];\n        var encode = arguments[2] === undefined ? true : arguments[2];\n        var registry = {};\n        var children = undefined,\n            result = undefined;\n\n        children = obj.nodeName === \"FORM\" ? obj.elements ? array.cast(obj.elements) : obj.find(\"button, input, select, textarea\") : [obj];\n\n        array.each(children, function (i) {\n          var id = i.id || i.name || i.type;\n\n          if (i.nodeName === \"FORM\") {\n            utility.merge(registry, json.decode(element.serialize(i)));\n          } else if (!registry[id]) {\n            registry[id] = element.val(i);\n          }\n        });\n\n        if (!string) {\n          result = registry;\n        } else {\n          result = \"\";\n\n          utility.iterate(registry, function (v, k) {\n            encode ? result += \"&\" + encodeURIComponent(k) + \"=\" + encodeURIComponent(v) : result += \"&\" + k + \"=\" + v;\n          });\n\n          result = result.replace(regex.and, \"?\");\n        }\n\n        return result;\n      },\n\n      /**\n       * Returns the size of the Element\n       *\n       * @method size\n       * @memberOf element\n       * @param  {Object} obj Element\n       * @return {Array}      [width, height]\n       * @example\n       * let size = keigai.util.element.size( document.querySelector( \"#something\" ) );\n       */\n      size: function (obj) {\n        return [obj.offsetWidth + number.parse(obj.style.paddingLeft || 0) + number.parse(obj.style.paddingRight || 0) + number.parse(obj.style.borderLeft || 0) + number.parse(obj.style.borderRight || 0), obj.offsetHeight + number.parse(obj.style.paddingTop || 0) + number.parse(obj.style.paddingBottom || 0) + number.parse(obj.style.borderTop || 0) + number.parse(obj.style.borderBottom || 0)];\n      },\n\n      /**\n       * Getter / setter for an Element's text\n       *\n       * @method text\n       * @memberOf element\n       * @param  {Object} obj Element\n       * @param  {String} arg [Optional] Value to set\n       * @return {Object}     Element\n       * @example\n       * let obj  = document.querySelector( \"#something\" ),\n       *     text = keigai.util.element.text( obj );\n       *\n       * keigai.util.element.text( obj, text + \", and some more text\" );\n       */\n      text: function (obj, arg) {\n        var key = obj.textContent ? \"textContent\" : \"innerText\";\n        var payload = {};\n        var set = false;\n\n        if (typeof arg != \"undefined\") {\n          set = true;\n          payload[key] = arg;\n        }\n\n        return set ? element.update(obj, payload) : obj[key];\n      },\n\n      /**\n       * Toggles a CSS class\n       *\n       * @method toggleClass\n       * @memberOf element\n       * @param  {Object} obj Element\n       * @param  {String} arg CSS class to toggle\n       * @return {Object}     Element\n       * @example\n       * let obj = document.querySelector( \"#something\" );\n       *\n       * obj.addEventListener( \"click\", ( ev ) => {\n       *   keigai.util.element.toggleClass( obj, \"active\" );\n       * }, false );\n       */\n      toggleClass: function (obj, arg) {\n        obj.classList.toggle(arg);\n\n        return obj;\n      },\n\n      /**\n       * Updates an Element\n       *\n       * @method update\n       * @memberOf element\n       * @param  {Object}  obj  Element\n       * @param  {Object} args Properties to set\n       * @return {Object}      Element\n       * @example\n       * keigai.util.element.update( document.querySelector( \"#something\" ), {innerHTML: \"Hello World!\", \"class\": \"new\"} );\n       */\n      update: function (obj, args) {\n        utility.iterate(args, function (v, k) {\n          if (regex.element_update.test(k)) {\n            obj[k] = v;\n          } else if (k === \"class\") {\n            !string.isEmpty(v) ? element.addClass(obj, v) : element.removeClass(obj, \"*\");\n          } else if (k.indexOf(\"data-\") === 0) {\n            element.data(obj, k.replace(\"data-\", \"\"), v);\n          } else {\n            element.attr(obj, k, v);\n          }\n        });\n\n        return obj;\n      },\n\n      /**\n       * Gets or sets the value of Element\n       *\n       * @method val\n       * @memberOf element\n       * @param  {Object} obj   Element\n       * @param  {Mixed}  value [Optional] Value to set\n       * @return {Object}       Element\n       * @example\n       * keigai.util.element.val( document.querySelector( \"input[type='text']\" ), \"new value\" );\n       */\n      val: function (obj, value) {\n        var ev = \"input\";\n        var output = undefined;\n\n        if (value === undefined) {\n          if (regex.radio_checkbox.test(obj.type)) {\n            if (string.isEmpty(obj.name)) {\n              throw new Error(label.expectedProperty);\n            }\n\n            array.each(utility.dom(\"input[name='\" + obj.name + \"']\"), function (i) {\n              if (i.checked) {\n                output = i.value;\n                return false;\n              }\n            });\n          } else if (regex.select.test(obj.type)) {\n            output = null;\n            array.each(element.find(obj, \"option\"), function (i) {\n              if (i.selected === true) {\n                output = i.value;\n                return false;\n              }\n            });\n          } else if (obj.value) {\n            output = obj.value;\n          } else {\n            output = element.text(obj);\n          }\n\n          if (output !== undefined) {\n            output = utility.coerce(output);\n\n            if (typeof output == \"string\") {\n              output = string.trim(output);\n            }\n          } else {\n            output = \"\";\n          }\n        } else {\n          value = value.toString();\n\n          if (regex.radio_checkbox.test(obj.type)) {\n            ev = \"click\";\n\n            array.each(utility.dom(\"input[name='\" + obj.name + \"']\"), function (i) {\n              if (i.value === value) {\n                i.checked = true;\n                output = i;\n                return false;\n              }\n            });\n          } else if (regex.select.test(obj.type)) {\n            ev = \"change\";\n\n            array.each(element.find(obj, \" option\"), function (i) {\n              if (i.value === value) {\n                i.selected = true;\n                output = i;\n                return false;\n              }\n            });\n          } else {\n            obj.value !== undefined ? obj.value = value : element.text(obj, value);\n          }\n\n          element.dispatch(obj, ev);\n\n          output = obj;\n        }\n\n        return output;\n      }\n    };\n\n    /**\n     * @namespace json\n     */\n    var json = {\n      /**\n       * Decodes the argument\n       *\n       * @method decode\n       * @memberOf json\n       * @param  {String}  arg    String to parse\n       * @param  {Boolean} silent [Optional] Silently fail\n       * @return {Mixed}          Entity resulting from parsing JSON, or undefined\n       * @example\n       * let x = keigai.util.json.decode( ..., true );\n       *\n       * if ( x ) {\n       *   ...\n       * } else {\n       *   ... // invalid JSON, with `Error` suppressed by `silent`\n       * }\n       */\n      decode: function (arg, silent) {\n        try {\n          return JSON.parse(arg);\n        } catch (e) {\n          if (silent !== true) {\n            utility.error(e, [arg, silent], _this);\n          }\n\n          return undefined;\n        }\n      },\n\n      /**\n       * Encodes `arg` as JSON\n       *\n       * @method encode\n       * @memberOf json\n       * @param  {Mixed}   arg    Primative\n       * @param  {Boolean} silent [Optional] Silently fail\n       * @return {String}         JSON, or undefined\n       * @example\n       * let x = keigai.util.json.encode( ..., true );\n       *\n       * if ( x ) {\n       *   ...\n       * } else {\n       *   ... // invalid JSON, with `Error` suppressed by `silent`\n       * }\n       */\n      encode: function (arg, silent) {\n        try {\n          return JSON.stringify(arg);\n        } catch (e) {\n          if (silent !== true) {\n            utility.error(e, [arg, silent], _this);\n          }\n\n          return undefined;\n        }\n      }\n    };\n\n    /**\n     * @namespace label\n     * @private\n     */\n    var label = {\n      /**\n       * Expected a Number\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      expectedNumber: \"Expected a Number\",\n\n      /**\n       * Expected a property, and it was not set\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      expectedProperty: \"Expected a property, and it was not set\",\n\n      /**\n       * Expected an Object\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      expectedObject: \"Expected an Object\",\n\n      /**\n       * One or more arguments is invalid\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      invalidArguments: \"One or more arguments is invalid\",\n\n      /**\n       * INVALID_STATE_ERR: Headers have not been received\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      invalidStateNoHeaders: \"INVALID_STATE_ERR: Headers have not been received\",\n\n      /**\n       * Synchronous XMLHttpRequest requests are not supported\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      invalidStateNoSync: \"Synchronous XMLHttpRequest requests are not supported\",\n\n      /**\n       * INVALID_STATE_ERR: Object is not open\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      invalidStateNotOpen: \"INVALID_STATE_ERR: Object is not open\",\n\n      /**\n       * INVALID_STATE_ERR: Object is sending\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      invalidStateNotSending: \"INVALID_STATE_ERR: Object is sending\",\n\n      /**\n       * INVALID_STATE_ERR: Object is not usable\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      invalidStateNotUsable: \"INVALID_STATE_ERR: Object is not usable\",\n\n      /**\n       * Error when deferred is rejected for invalid request\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      methodNotAllowed: \"Method not allowed\",\n\n      /**\n       * Default `emptyMsg` of DataLists\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      noData: \"Nothing to display\",\n\n      /**\n       * Requested method is not available\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      notAvailable: \"Requested method is not available\",\n\n      /**\n       * No previous version of a record\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      datastoreNoPrevVersion: \"No previous version found\",\n\n      /**\n       * HTTP request timed out\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      requestTimeout: \"Request timed out\",\n\n      /**\n       * Server error has occurred\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      serverError: \"Server error has occurred\",\n\n      /**\n       * Forbidden to access URI\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      serverForbidden: \"Forbidden to access URI\",\n\n      /**\n       * Method not allowed\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      serverInvalidMethod: \"Method not allowed\",\n\n      /**\n       * Authorization required to access URI\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      serverUnauthorized: \"Authorization required to access URI\",\n\n      /**\n       * Your browser is too old to use keigai, please upgrade\n       *\n       * @type {String}\n       * @memberOf label\n       */\n      upgrade: \"Your browser is too old to use keigai, please upgrade\"\n    };\n\n    /**\n     * @namespace math\n     */\n    var math = {\n      /**\n       * Generates bezier curve coordinates for up to 4 points, last parameter is `t`\n       *\n       * Two point example: (0, 10, 0, 0, 1) means move straight up\n       *\n       * @method bezier\n       * @memberOf math\n       * @return {Array} Coordinates\n       * @example\n       * // Moving straight down\n       * let p1 = keigai.util.math.bezier( 0, 10, 2000, 10, 0 ),\n       *     p2 = keigai.util.math.bezier( 0, 10, 2000, 10, 0.5 ),\n       *     p3 = keigai.util.math.bezier( 0, 10, 2000, 10, 0.75 ),\n       *     p4 = keigai.util.math.bezier( 0, 10, 2000, 10, 0.9 ),\n       *     p5 = keigai.util.math.bezier( 0, 10, 2000, 10, 1 );\n       */\n      bezier: function () {\n        for (var _len11 = arguments.length, args = Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n          args[_key11] = arguments[_key11];\n        }\n\n        var a = array.cast(args);\n        var t = a.pop();\n        var P = array.chunk(a, 2);\n        var n = P.length;\n        var c = undefined,\n            S0 = undefined,\n            Q0 = undefined,\n            Q1 = undefined,\n            Q2 = undefined,\n            C0 = undefined,\n            C1 = undefined,\n            C2 = undefined,\n            C3 = undefined;\n\n        if (n < 2 || n > 4) {\n          throw new Error(label.invalidArguments);\n        }\n\n        // Setting variables\n        c = [];\n        S0 = 1 - t;\n        Q0 = math.sqr(S0);\n        Q1 = 2 * S0 * t;\n        Q2 = math.sqr(t);\n        C0 = Math.pow(S0, 3);\n        C1 = 3 * Q0 * t;\n        C2 = 3 * S0 * Q2;\n        C3 = Math.pow(t, 3);\n\n        // Straight\n        if (n === 2) {\n          c.push(S0 * P[0][0] + t * P[1][0]);\n          c.push(S0 * P[0][1] + t * P[1][1]);\n        }\n        // Quadratic\n        else if (n === 3) {\n          c.push(Q0 * P[0][0] + Q1 * P[1][0] + (Q2 + P[2][0]));\n          c.push(Q0 * P[0][1] + Q1 * P[1][1] + (Q2 + P[2][1]));\n        }\n        // Cubic\n        else if (n === 4) {\n          c.push(C0 * P[0][0] + C1 * P[1][0] + C2 * P[2][0] + C3 * P[3][0]);\n          c.push(C0 * P[0][1] + C1 * P[1][1] + C2 * P[2][1] + C3 * P[3][1]);\n        }\n\n        return c;\n      },\n\n      /**\n       * Finds the distance between 2 Arrays of coordinates\n       *\n       * @method dist\n       * @memberOf math\n       * @param  {Array} a Coordinates [x, y]\n       * @param  {Array} b Coordinates [x, y]\n       * @return {Number}  Distance between `a` & `b`\n       * @example\n       * let dist = keigai.util.math.dist( [4, 40], [-10, 12] );\n       */\n      dist: function (a, b) {\n        return Math.sqrt(math.sqr(b[0] - a[0]) + math.sqr(b[1] - a[1]));\n      },\n\n      /**\n       * Squares a Number\n       *\n       * @method sqr\n       * @memberOf math\n       * @param  {Number} n Number to square\n       * @return {Number}   Squared value\n       * @example\n       * let sqr = keigai.util.math.sqr( 23 );\n       */\n      sqr: function (n) {\n        return n * n;\n      }\n    };\n\n    /**\n     * @namespace number\n     */\n    var number = {\n      /**\n       * Returns the difference of arg\n       *\n       * @method diff\n       * @memberOf number\n       * @param {Number} arg Number to compare\n       * @return {Number}    The absolute difference\n       * @example\n       * keigai.util.number.diff( -3, 8 ); // 11\n       */\n      diff: function (num1, num2) {\n        return Math.abs(num1 - num2);\n      },\n\n      /**\n       * Tests if an number is even\n       *\n       * @method even\n       * @memberOf number\n       * @param {Number} arg Number to test\n       * @return {Boolean}   True if even, or undefined\n       * @example\n       * let n = keigai.util.number.random( 10 );\n       *\n       * if ( keigai.util.number.even( n ) ) {\n       *   ...\n       * }\n       */\n      even: function (arg) {\n        return arg % 2 === 0;\n      },\n\n      /**\n       * Formats a Number to a delimited String\n       *\n       * @method format\n       * @memberOf number\n       * @param  {Number} arg       Number to format\n       * @param  {String} delimiter [Optional] String to delimit the Number with\n       * @param  {String} every     [Optional] Position to insert the delimiter, default is 3\n       * @return {String}           Number represented as a comma delimited String\n       * @example\n       * keigai.util.number.format( 1000 ); // \"1,000\"\n       */\n      format: function (arg) {\n        var delimiter = arguments[1] === undefined ? \",\" : arguments[1];\n        var every = arguments[2] === undefined ? 3 : arguments[2];\n        arg = arg.toString();\n\n        var d = arg.indexOf(\".\") > -1 ? \".\" + arg.replace(regex.number_format_1, \"\") : \"\";\n        var a = arg.replace(regex.number_format_2, \"\").split(\"\").reverse();\n        var p = Math.floor(a.length / every);\n        var i = 1;\n        var n = undefined,\n            b = undefined;\n\n        for (b = 0; b < p; b++) {\n          n = i === 1 ? every : every * i + (i === 2 ? 1 : i - 1);\n          a.splice(n, 0, delimiter);\n          i++;\n        }\n\n        a = a.reverse().join(\"\");\n\n        if (a.charAt(0) === delimiter) {\n          a = a.substring(1);\n        }\n\n        return a + d;\n      },\n\n      /**\n       * Returns half of a, or true if a is half of b\n       *\n       * @method half\n       * @memberOf number\n       * @param  {Number} a Number to divide\n       * @param  {Number} b [Optional] Number to test a against\n       * @return {Mixed}    Boolean if b is passed, Number if b is undefined\n       * @example\n       * if ( keigai.util.number.half( 2, 4 ) ) {\n       *   ...\n       * } );\n       */\n      half: function (a, b) {\n        return b ? a / b === 0.5 : a / 2;\n      },\n\n      /**\n       * Tests if a number is odd\n       *\n       * @method odd\n       * @memberOf number\n       * @param  {Number} arg Number to test\n       * @return {Boolean}    True if odd, or undefined\n       * @example\n       * let n = keigai.util.number.random( 10 );\n       *\n       * if ( keigai.util.number.odd( n ) ) {\n       *   ...\n       * }\n       */\n      odd: function (arg) {\n        return !number.even(arg);\n      },\n\n      /**\n       * Parses the number\n       *\n       * @method parse\n       * @memberOf number\n       * @param  {Mixed}  arg  Number to parse\n       * @param  {Number} base Integer representing the base or radix\n       * @return {Number}      Integer or float\n       * @example\n       * // Unsure if `n` is an int or a float\n       * keigai.util.number.parse( n );\n       */\n      parse: function (arg, base) {\n        return base === undefined ? parseFloat(arg) : parseInt(arg, base);\n      },\n\n      /**\n       * Generates a random number between 0 and `arg`\n       *\n       * @method random\n       * @memberOf number\n       * @param  {Number} arg Ceiling for random number, default is 100\n       * @return {Number}     Random number\n       * @example\n       * let n = keigai.util.math.random( 10 );\n       */\n      random: function () {\n        var arg = arguments[0] === undefined ? 100 : arguments[0];\n        return Math.floor(Math.random() * (arg + 1));\n      },\n\n      /**\n       * Rounds a number up or down\n       *\n       * @method round\n       * @memberOf number\n       * @param  {Number} arg       Number to round\n       * @param  {String} direction [Optional] \"up\" or \"down\"\n       * @return {Number}           Rounded interger\n       * @example\n       * keigai.util.math.round( n, \"down\" );\n       */\n      round: function (arg, direction) {\n        arg = number.parse(arg);\n\n        if (direction === undefined || string.isEmpty(direction)) {\n          return number.parse(arg.toFixed(0));\n        } else if (regex.down.test(direction)) {\n          return ~ ~arg;\n        } else {\n          return Math.ceil(arg);\n        }\n      }\n    };\n\n    /**\n     * @namespace promise\n     */\n    var promise = {\n      /**\n       * \"Unboxed\" Promise factory\n       *\n       * @method factory\n       * @memberOf promise\n       * @return {Object} {@link Promise}\n       */\n      factory: function () {\n        var promise = undefined,\n            pCatch = undefined,\n            pResolve = undefined,\n            pReject = undefined,\n            pThen = undefined;\n\n        promise = new Promise(function (resolve, reject) {\n          pResolve = resolve;\n          pReject = reject;\n        });\n\n        pCatch = function () {\n          for (var _len12 = arguments.length, args = Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n            args[_key12] = arguments[_key12];\n          }\n\n          return promise[\"catch\"].apply(promise, args);\n        };\n\n        pThen = function () {\n          for (var _len13 = arguments.length, args = Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n            args[_key13] = arguments[_key13];\n          }\n\n          return promise.then.apply(promise, args);\n        };\n\n        return { \"catch\": pCatch, resolve: pResolve, reject: pReject, then: pThen };\n      }\n    };\n\n    var DataStore = (function (Base) {\n      /**\n       * Creates a new DataStore\n       *\n       * @constructor\n       * @memberOf keigai\n       * @extends {keigai.Base}\n       * @example\n       * let store = keigai.store();\n       */\n      function DataStore() {\n        this.autosave = false;\n        this.callback = null;\n        this.credentials = null;\n        this.lists = [];\n        this.events = true;\n        this.expires = null;\n        this.headers = { Accept: \"application/json\" };\n        this.ignore = [];\n        this.index = [];\n        this.indexes = { key: {} };\n        this.key = null;\n        this.loaded = false;\n        this.mongodb = \"\";\n        this.observer = observable.factory();\n        this.records = [];\n        this.source = null;\n        this.total = 0;\n        this.versions = {};\n        this.versioning = true;\n        this.views = {};\n        this.uri = null;\n      }\n\n      _inherits(DataStore, Base);\n\n      _prototypeProperties(DataStore, null, {\n        batch: {\n\n          /**\n           * Batch sets or deletes data in the store\n           *\n           * @method batch\n           * @memberOf keigai.DataStore\n           * @param  {String}  type Type of action to perform ( set/del/delete )\n           * @param  {Array}   data Array of keys or indices to delete, or Object containing multiple records to set\n           * @param  {Boolean} sync [Optional] Syncs store with data, if true everything is erased\n           * @return {Object} {@link keigai.Deferred}\n           * @fires keigai.DataStore#beforeBatch Fires before the batch is queued\n           * @fires keigai.DataStore#afterBatch Fires after the batch is queued\n           * @fires keigai.DataStore#failedBatch Fires when an exception occurs\n           * @example\n           * store.batch( \"set\", [...] ).then( ( records ) => {\n           *   ...\n           * }, ( err ) => {\n           *   ...\n           * } );\n           */\n          value: function batch(type, data) {\n            var sync = arguments[2] === undefined ? false : arguments[2];\n            var self = this;\n            var events = this.events;\n            var defer = deferred.factory();\n            var deferreds = [];\n\n            if (!regex.set_del.test(type) || sync && regex.del.test(type) || typeof data != \"object\") {\n              defer.reject(new Error(label.invalidArguments));\n            } else {\n              if (events) {\n                this.dispatch(\"beforeBatch\", data);\n              }\n\n              if (sync) {\n                this.clear(sync);\n              }\n\n              if (data.length === 0) {\n                this.loaded = true;\n\n                if (events) {\n                  this.dispatch(\"afterBatch\", this.records);\n                }\n\n                defer.resolve(this.records);\n              } else {\n                // Batch deletion will create a sparse array, which will be compacted before re-indexing\n                if (type === \"del\") {\n                  array.each(data, function (i) {\n                    deferreds.push(self.del(i, false, true));\n                  });\n                } else {\n                  array.each(data, function (i) {\n                    deferreds.push(self.set(null, i, true));\n                  });\n                }\n\n                this.loaded = false;\n\n                utility.when(deferreds).then(function (args) {\n                  self.loaded = true;\n\n                  if (events) {\n                    self.dispatch(\"afterBatch\", args);\n                  }\n\n                  // Forcing a clear of views to deal with async nature of workers & staggered loading\n                  array.each(self.lists, function (i) {\n                    i.refresh(true);\n                  });\n\n                  if (type === \"del\") {\n                    self.records = array.compact(self.records);\n                    self.reindex();\n                  }\n\n                  if (self.autosave) {\n                    self.save();\n                  }\n\n                  defer.resolve(args);\n                }, function (e) {\n                  if (events) {\n                    self.dispatch(\"failedBatch\", e);\n                  }\n\n                  defer.reject(e);\n                });\n              }\n            }\n\n            return defer;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        buildUri: {\n\n          /**\n           * Builds a URI\n           *\n           * @method buildUri\n           * @memberOf keigai.DataStore\n           * @param  {String} key Record key\n           * @return {String}     URI\n           * @example\n           * let uri = store.buildUri( \"key\" );\n           */\n          value: function buildUri(key) {\n            var parsed = utility.parse(this.uri);\n\n            return parsed.protocol + \"//\" + parsed.host + parsed.pathname + (regex.endslash.test(parsed.pathname) ? \"\" : \"/\") + key;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        clear: {\n\n          /**\n           * Clears the data object, unsets the uri property\n           *\n           * @method clear\n           * @memberOf keigai.DataStore\n           * @param  {Boolean} sync [Optional] Boolean to limit clearing of properties\n           * @return {Object} {@link keigai.DataStore}\n           * @fires keigai.DataStore#beforeClear Fires before the data is cleared\n           * @fires keigai.DataStore#afterClear Fires after the data is cleared\n           * @example\n           * // Resyncing the records, if wired to an API\n           * store.clear( true );\n           *\n           * // Resetting the store\n           * store.clear();\n           */\n          value: function clear() {\n            var sync = arguments[0] === undefined ? true : arguments[0];\n            var events = this.events === true;\n            var resave = this.autosave === true;\n\n            if (!sync) {\n              if (events) {\n                this.dispatch(\"beforeClear\");\n              }\n\n              array.each(this.lists, function (i) {\n                if (i) {\n                  i.teardown(true);\n                }\n              });\n\n              this.autosave = false;\n              this.callback = null;\n              this.credentials = null;\n              this.lists = [];\n              this.events = true;\n              this.expires = null;\n              this.headers = { Accept: \"application/json\" };\n              this.ignore = [];\n              this.index = [];\n              this.indexes = { key: {} };\n              this.key = null;\n              this.loaded = false;\n              this.records = [];\n              this.source = null;\n              this.total = 0;\n              this.versions = {};\n              this.versioning = true;\n              this.views = {};\n              this.uri = null;\n\n              if (events) {\n                this.dispatch(\"afterClear\");\n              }\n            } else {\n              this.indexes = { key: {} };\n              this.loaded = false;\n              this.records = [];\n              this.total = 0;\n              this.views = {};\n\n              array.each(this.lists, function (i) {\n                if (i) {\n                  i.refresh();\n                }\n              });\n            }\n\n            if (resave) {\n              this.save();\n            }\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        del: {\n\n          /**\n           * Deletes a record based on key or index\n           *\n           * @method del\n           * @memberOf keigai.DataStore\n           * @param  {Mixed}   record  Record, key or index\n           * @param  {Boolean} reindex [Optional] `true` if DataStore should be reindexed\n           * @param  {Boolean} batch   [Optional] `true` if part of a batch operation\n           * @return {Object} {@link keigai.Deferred}\n           * @fires keigai.DataStore#beforeDelete Fires before the record is deleted\n           * @fires keigai.DataStore#afterDelete Fires after the record is deleted\n           * @fires keigai.DataStore#failedDelete Fires if the store is RESTful and the action is denied\n           * @example\n           * store.del( \"key\" ).then( () => {\n           *   console.log( \"Successfully deleted \" + key );\n           * }, ( err ) => {\n           *   console.warn( \"Failed to delete \" + key + \": \" + err.message );\n           * } );\n           */\n          value: function del(record) {\n            var reindex = arguments[1] === undefined ? true : arguments[1];\n            var batch = arguments[2] === undefined ? false : arguments[2];\n            record = record.key ? record : this.get(record);\n\n            var self = this;\n            var defer = deferred.factory();\n\n            if (record === undefined) {\n              defer.reject(new Error(label.invalidArguments));\n            } else {\n              if (this.events) {\n                self.dispatch(\"beforeDelete\", record);\n              }\n\n              if (this.uri === null || this.callback !== null) {\n                this.delComplete(record, reindex, batch, defer);\n              } else {\n                client.request(this.buildUri(record.key), \"DELETE\", null, utility.merge({ withCredentials: this.credentials }, this.headers)).then(function () {\n                  self.delComplete(record, reindex, batch, defer);\n                }, function (e) {\n                  self.dispatch(\"failedDelete\", e);\n                  defer.reject(e);\n                });\n              }\n            }\n\n            return defer;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        delComplete: {\n\n          /**\n           * Delete completion\n           *\n           * @method delComplete\n           * @memberOf keigai.DataStore\n           * @param  {Object}  record  DataStore record\n           * @param  {Boolean} reindex `true` if DataStore should be reindexed\n           * @param  {Boolean} batch   `true` if part of a batch operation\n           * @param  {Object}  defer   Deferred instance\n           * @return {Object} {@link keigai.DataStore}\n           * @private\n           */\n          value: function delComplete(record, reindex, batch, defer) {\n            var self = this;\n\n            delete this.indexes.key[record.key];\n            delete this.versions[record.key];\n\n            this.total--;\n            this.views = {};\n\n            if (!batch) {\n              array.remove(this.records, record.index);\n\n              if (reindex) {\n                this.reindex();\n              } else {\n                array.each(record.indexes, function (i) {\n                  array.remove(self.indexes[i[0]][i[1]], record.index);\n\n                  if (self.indexes[i[0]][i[1]].length === 0) {\n                    delete self.indexes[i[0]][i[1]];\n                  }\n                });\n              }\n\n              if (this.autosave) {\n                this.purge(record.key);\n              }\n\n              if (this.events) {\n                this.dispatch(\"afterDelete\", record);\n              }\n\n              array.each(this.lists, function (i) {\n                i.refresh();\n              });\n            } else {\n              this.records[record.index] = null;\n            }\n\n            return defer.resolve(record.key);\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        dump: {\n\n          /**\n           * Exports a subset or complete record set of DataStore\n           *\n           * @method dump\n           * @memberOf keigai.DataStore\n           * @param  {Array} args   [Optional] Sub-data set of DataStore\n           * @param  {Array} fields [Optional] Fields to export, defaults to all\n           * @return {Array}        Records\n           * @example\n           * let data = store.dump();\n           */\n          value: function dump(args, fields) {\n            args = args || this.records;\n\n            var self = this;\n            var custom = fields instanceof Array && fields.length > 0;\n            var key = this.key !== null;\n            var fn = undefined;\n\n            if (custom) {\n              fn = function (i) {\n                var record = {};\n\n                array.each(fields, function (f) {\n                  record[f] = f === self.key ? isNaN(i.key) ? i.key : Number(i.key) : utility.clone(i.data[f], true);\n                });\n\n                return record;\n              };\n            } else {\n              fn = function (i) {\n                var record = {};\n\n                if (key) {\n                  record[self.key] = isNaN(i.key) ? i.key : Number(i.key);\n                }\n\n                utility.iterate(i.data, function (v, k) {\n                  record[k] = utility.clone(v, true);\n                });\n\n                return record;\n              };\n            }\n\n            return args.map(fn);\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        get: {\n\n          /**\n           * Retrieves the current version of a record(s) based on key or index\n           *\n           * If the key is an integer, cast to a string before sending as an argument!\n           *\n           * @method get\n           * @memberOf keigai.DataStore\n           * @param  {Mixed}  record Key, index or Array of pagination start & end; or comma delimited String of keys or indices\n           * @param  {Number} offset [Optional] Offset from `record` for pagination\n           * @return {Mixed}         Individual record, or Array of records\n           * @example\n           * let record = store.get( \"key\" );\n           */\n          value: function get(record, offset) {\n            var type = typeof record;\n            var self = this;\n            var result = undefined;\n\n            if (type === \"undefined\") {\n              result = this.records;\n            } else if (type === \"string\") {\n              if (record.indexOf(\",\") === -1) {\n                result = this.records[this.indexes.key[record]];\n              } else {\n                result = string.explode(record).map(function (i) {\n                  if (!isNaN(i)) {\n                    return self.records[parseInt(i, 10)];\n                  } else {\n                    return self.records[self.indexes.key[i]];\n                  }\n                });\n              }\n            } else if (type === \"number\") {\n              if (isNaN(offset)) {\n                result = this.records[parseInt(record, 10)];\n              } else {\n                result = array.limit(this.records, parseInt(record, 10), parseInt(offset, 10));\n              }\n            }\n\n            return utility.clone(result, true);\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        join: {\n\n          /**\n           * Performs an (INNER/LEFT/RIGHT) JOIN on two DataStores\n           *\n           * @method join\n           * @memberOf keigai.DataStore\n           * @param  {String} arg   DataStore to join\n           * @param  {String} field Field in both DataStores\n           * @param  {String} join  Type of JOIN to perform, defaults to `inner`\n           * @return {Object} {@link keigai.Deferred}\n           * let data = store.join( otherStore, \"commonField\" );\n           */\n          value: function join(arg, field) {\n            var join = arguments[2] === undefined ? \"inner\" : arguments[2];\n            var self = this;\n            var defer = deferred.factory();\n            var results = [];\n            var deferreds = [];\n            var key = field === this.key;\n            var keys = array.merge(array.keys(this.records[0].data), array.keys(arg.records[0].data));\n            var fn = undefined;\n\n            if (join === \"inner\") {\n              fn = function (i) {\n                var where = {},\n                    record = i.data,\n                    defer = deferred.factory();\n\n                where[field] = key ? i.key : record[field];\n\n                arg.select(where).then(function (match) {\n                  if (match.length > 2) {\n                    defer.reject(new Error(label.databaseMoreThanOne));\n                  } else if (match.length === 1) {\n                    results.push(utility.merge(record, match[0].data));\n                    defer.resolve(true);\n                  } else {\n                    defer.resolve(false);\n                  }\n                });\n\n                deferreds.push(defer);\n              };\n            } else if (join === \"left\") {\n              fn = function (i) {\n                var where = {},\n                    record = i.data,\n                    defer = deferred.factory();\n\n                where[field] = key ? i.key : record[field];\n\n                arg.select(where).then(function (match) {\n                  if (match.length > 2) {\n                    defer.reject(new Error(label.databaseMoreThanOne));\n                  } else if (match.length === 1) {\n                    results.push(utility.merge(record, match[0].data));\n                    defer.resolve(true);\n                  } else {\n                    array.each(keys, function (i) {\n                      if (record[i] === undefined) {\n                        record[i] = null;\n                      }\n                    });\n\n                    results.push(record);\n                    defer.resolve(true);\n                  }\n                });\n\n                deferreds.push(defer);\n              };\n            } else if (join === \"right\") {\n              fn = function (i) {\n                var where = {},\n                    record = i.data,\n                    defer = deferred.factory();\n\n                where[field] = key ? i.key : record[field];\n\n                self.select(where).then(function (match) {\n                  if (match.length > 2) {\n                    defer.reject(new Error(label.databaseMoreThanOne));\n                  } else if (match.length === 1) {\n                    results.push(utility.merge(record, match[0].data));\n                    defer.resolve(true);\n                  } else {\n                    array.each(keys, function (i) {\n                      if (record[i] === undefined) {\n                        record[i] = null;\n                      }\n                    });\n\n                    results.push(record);\n                    defer.resolve(true);\n                  }\n                });\n\n                deferreds.push(defer);\n              };\n            }\n\n            array.each(utility.clone(join === \"right\" ? arg.records : this.records, true), fn);\n\n            utility.when(deferreds).then(function () {\n              defer.resolve(results);\n            }, function (e) {\n              defer.reject(e);\n            });\n\n            return defer;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        only: {\n\n          /**\n           * Retrieves only 1 field/property\n           *\n           * @method only\n           * @memberOf keigai.DataStore\n           * @param  {String} arg Field/property to retrieve\n           * @return {Array}      Array of values\n           * @example\n           * let ages = store.only( \"age\" );\n           */\n          value: function only(arg) {\n            if (arg === this.key) {\n              return this.records.map(function (i) {\n                return i.key;\n              });\n            } else {\n              return this.records.map(function (i) {\n                return i.data[arg];\n              });\n            }\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        purge: {\n\n          /**\n           * Purges DataStore or record from persistant storage\n           *\n           * @method purge\n           * @memberOf keigai.DataStore\n           * @param  {Mixed} arg  [Optional] String or Number for record\n           * @return {Object}     Record or store\n           * @example\n           * store.purge();\n           */\n          value: function purge(arg) {\n            return this.storage(arg || this, \"remove\");\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        reindex: {\n\n          /**\n           * Reindexes the DataStore\n           *\n           * @method reindex\n           * @memberOf keigai.DataStore\n           * @return {Object} {@link keigai.DataStore}\n           * @example\n           * store.reindex();\n           */\n          value: function reindex() {\n            var self = this;\n            var i = -1;\n            var tmp = [];\n\n            this.views = {};\n            this.indexes = { key: {} };\n\n            if (this.total > 0) {\n              array.each(this.records, function (record) {\n                if (record !== undefined) {\n                  tmp[++i] = record;\n                  record.index = i;\n                  self.indexes.key[record.key] = i;\n                  self.setIndexes(record);\n                }\n              });\n            }\n\n            this.records = tmp;\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        restore: {\n\n          /**\n           * Restores DataStore or record persistant storage\n           *\n           * @method restore\n           * @memberOf keigai.DataStore\n           * @param  {Mixed} arg  [Optional] String or Number for record\n           * @return {Object}     Record or store\n           * @example\n           * store.restore();\n           */\n          value: function restore(arg) {\n            return this.storage(arg || this, \"get\");\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        save: {\n\n          /**\n           * Saves DataStore or record to persistant storage, or sessionStorage\n           *\n           * @method save\n           * @memberOf keigai.DataStore\n           * @param  {Mixed} arg  [Optional] String or Number for record\n           * @return {Object} {@link keigai.Deferred}\n           * @example\n           * store.save();\n           */\n          value: function save(arg) {\n            return this.storage(arg || this, \"set\");\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        select: {\n\n          /**\n           * Selects records (not by reference) based on an explicit description\n           *\n           * @method select\n           * @memberOf keigai.DataStore\n           * @param  {Object} where Object describing the WHERE clause\n           * @return {Object} {@link keigai.Deferred}\n           * @example\n           * let adults;\n           *\n           * store.select( {age: ( i ) { return i >= 21; } } ).then( function ( records ) => {\n           *   adults = records;\n           * }, ( err ) => {\n           *   ...\n           * } );\n           */\n          value: function select(where) {\n            var _this5 = this;\n            var self = this;\n            var defer = deferred.factory();\n            var functions = [];\n            var clauses = undefined,\n                cond = undefined,\n                index = undefined,\n                result = undefined,\n                sorted = undefined,\n                values = undefined,\n                worker = undefined;\n\n            if (!(where instanceof Object)) {\n              defer.reject(new Error(label.invalidArguments));\n            } else {\n              utility.iterate(where, function (v, k) {\n                if (typeof v == \"function\") {\n                  _this5[k] = v.toString();\n                  functions.push(k);\n                }\n              });\n\n              if (webWorker) {\n                try {\n                  worker = utility.worker(defer);\n                  worker.postMessage({\n                    cmd: \"select\",\n                    indexes: this.indexes,\n                    records: this.records,\n                    where: json.encode(where),\n                    functions: functions\n                  });\n                } catch (e) {\n                  // Probably IE10, which doesn't have the correct security flag for local loading\n                  webWorker = false;\n\n                  this.select(where).then(function (arg) {\n                    defer.resolve(arg);\n                  }, function (e) {\n                    defer.reject(e);\n                  });\n                }\n              } else {\n                clauses = array.fromObject(where);\n                sorted = array.flat(clauses).filter(function (i, idx) {\n                  return idx % 2 === 0;\n                }).sort(array.sort);\n                index = sorted.join(\"|\");\n                values = sorted.map(function (i) {\n                  return where[i];\n                }).join(\"|\");\n                cond = \"return ( \";\n\n                if (functions.length === 0 && this.indexes[index]) {\n                  result = (this.indexes[index][values] || []).map(function (i) {\n                    return self.records[i];\n                  });\n                } else {\n                  if (clauses.length > 1) {\n                    array.each(clauses, function (i, idx) {\n                      var b1 = \"( \";\n\n                      if (idx > 0) {\n                        b1 = \" && ( \";\n                      }\n\n                      if (i[1] instanceof Function) {\n                        cond += b1 + i[1].toString() + \"( rec.data[\\\"\" + i[0] + \"\\\"] ) )\";\n                      } else if (!isNaN(i[1])) {\n                        cond += b1 + \"rec.data[\\\"\" + i[0] + \"\\\"] === \" + i[1] + \" )\";\n                      } else {\n                        cond += b1 + \"rec.data[\\\"\" + i[0] + \"\\\"] === \\\"\" + i[1] + \"\\\" )\";\n                      }\n                    });\n                  } else {\n                    if (clauses[0][1] instanceof Function) {\n                      cond += clauses[0][1].toString() + \"( rec.data[\\\"\" + clauses[0][0] + \"\\\"] )\";\n                    } else if (!isNaN(clauses[0][1])) {\n                      cond += \"rec.data[\\\"\" + clauses[0][0] + \"\\\"] === \" + clauses[0][1];\n                    } else {\n                      cond += \"rec.data[\\\"\" + clauses[0][0] + \"\\\"] === \\\"\" + clauses[0][1] + \"\\\"\";\n                    }\n                  }\n\n                  cond += \" );\";\n\n                  result = utility.clone(this.records, true).filter(new Function(\"rec\", cond));\n                }\n\n                defer.resolve(result);\n              }\n            }\n\n            return defer;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        set: {\n\n          /**\n           * Creates or updates an existing record\n           *\n           * @method set\n           * @memberOf keigai.DataStore\n           * @param  {Mixed}   key       [Optional] Integer or String to use as a Primary Key\n           * @param  {Object}  data      Key:Value pairs to set as field values\n           * @param  {Boolean} batch     [Optional] True if called by data.batch\n           * @param  {Boolean} overwrite [Optional] Overwrites the existing record, if found\n           * @return {Object} {@link keigai.Deferred}\n           * @fires keigai.DataStore#beforeSet Fires before the record is set\n           * @fires keigai.DataStore#afterSet Fires after the record is set, the record is the argument for listeners\n           * @fires keigai.DataStore#failedSet Fires if the store is RESTful and the action is denied\n           * @example\n           * // Creating a new record\n           * store.set( null, {...} );\n           *\n           * // Updating a record\n           * store.set( \"key\", {...} );\n           */\n          value: function set(key, data) {\n            var batch = arguments[2] === undefined ? false : arguments[2];\n            var overwrite = arguments[3] === undefined ? false : arguments[3];\n            data = utility.clone(data, true);\n\n            var self = this;\n            var events = this.events;\n            var defer = deferred.factory();\n            var record = key !== null ? this.get(key) || null : data[this.key] ? this.get(data[this.key]) || null : null;\n            var method = \"POST\";\n            var parsed = utility.parse(self.uri || \"\");\n            var uri = undefined,\n                odata = undefined,\n                rdefer = undefined;\n\n            var patch = function (overwrite, data, ogdata) {\n              var ndata = [];\n\n              if (overwrite) {\n                array.each(array.keys(ogdata), function (k) {\n                  if (k !== self.key && data[k] === undefined) {\n                    ndata.push({ op: \"remove\", path: \"/\" + k });\n                  }\n                });\n              }\n\n              utility.iterate(data, function (v, k) {\n                if (k !== self.key && ogdata[k] === undefined) {\n                  ndata.push({ op: \"add\", path: \"/\" + k, value: v });\n                } else if (json.encode(ogdata[k]) !== json.encode(v)) {\n                  ndata.push({ op: \"replace\", path: \"/\" + k, value: v });\n                }\n              });\n\n              return ndata;\n            };\n\n            if (typeof data == \"string\") {\n              if (data.indexOf(\"//\") === -1) {\n                // Relative path to store, i.e. a child\n                if (data.charAt(0) !== \"/\") {\n                  uri = this.buildUri(data);\n                }\n                // Root path, relative to store, i.e. a domain\n                else if (self.uri !== null && regex.root.test(data)) {\n                  uri = parsed.protocol + \"//\" + parsed.host + data;\n                } else {\n                  uri = data;\n                }\n              } else {\n                uri = data;\n              }\n\n              key = uri.replace(regex.not_endpoint, \"\");\n\n              if (string.isEmpty(key)) {\n                defer.reject(new Error(label.invalidArguments));\n              } else {\n                if (!batch && events) {\n                  self.dispatch(\"beforeSet\", { key: key, data: data });\n                }\n\n                client.request(uri, \"GET\", null, utility.merge({ withCredentials: self.credentials }, self.headers)).then(function (arg) {\n                  self.setComplete(record, key, self.source ? utility.walk(arg, self.source) : arg, batch, overwrite, defer);\n                }, function (e) {\n                  self.dispatch(\"failedSet\", e);\n                  defer.reject(e);\n                });\n              }\n            } else {\n              if (!batch && events) {\n                self.dispatch(\"beforeSet\", { key: key, data: data });\n              }\n\n              if (batch || this.uri === null) {\n                this.setComplete(record, key, data, batch, overwrite, defer);\n              } else {\n                if (key !== null) {\n                  uri = this.buildUri(key);\n                  method = \"PATCH\";\n                  odata = utility.clone(data, true);\n                  data = patch(overwrite, data, this.dump([record])[0]);\n                } else {\n                  // Dropping query string\n                  uri = parsed.protocol + \"//\" + parsed.host + parsed.pathname;\n                }\n\n                rdefer = client.request(uri, method, data, utility.merge({ withCredentials: this.credentials }, this.headers));\n                rdefer.then(function (arg) {\n                  var change = undefined;\n\n                  if (rdefer.xhr.status !== 204 && rdefer.xhr.status < 300) {\n                    change = key === null ? self.source ? utility.walk(arg, self.source) : arg : odata;\n                  } else {\n                    change = odata;\n                  }\n\n                  self.setComplete(record, key, change, batch, overwrite, defer);\n                }, function (e) {\n                  if (method == \"PATCH\") {\n                    method = \"PUT\";\n                    data = utility.clone(odata, true);\n\n                    utility.iterate(record.data, function (v, k) {\n                      data[k] = v;\n                    });\n\n                    client.request(uri, method, data, utility.merge({ withCredentials: self.credentials }, self.headers)).then(function () {\n                      self.setComplete(record, key, odata, batch, overwrite, defer);\n                    }, function (e) {\n                      self.dispatch(\"failedSet\", e);\n                      defer.reject(e);\n                    });\n                  } else {\n                    self.dispatch(\"failedSet\", e);\n                    defer.reject(e);\n                  }\n                });\n              }\n            }\n\n            return defer;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        setComplete: {\n\n          /**\n           * Set completion\n           *\n           * @method setComplete\n           * @memberOf keigai.DataStore\n           * @param  {Mixed}   record    DataStore record, or `null` if new\n           * @param  {String}  key       Record key\n           * @param  {Object}  data      Record data\n           * @param  {Boolean} batch     `true` if part of a batch operation\n           * @param  {Boolean} overwrite Overwrites the existing record, if found\n           * @param  {Object}  defer     Deferred instance\n           * @return {Object} {@link keigai.DataStore}\n           * @private\n           */\n          value: function setComplete(record, key, data, batch, overwrite, defer) {\n            // Clearing views\n            this.views = {};\n\n            // Setting key\n            if (key === null) {\n              if (this.key !== null && data[this.key] !== undefined && data[this.key] !== null) {\n                key = data[this.key].toString();\n              } else {\n                key = utility.uuid();\n              }\n            }\n\n            // Removing primary key from data\n            if (this.key) {\n              delete data[this.key];\n            }\n\n            // Create\n            if (record === null) {\n              record = {\n                index: this.total++,\n                key: key,\n                data: data,\n                indexes: []\n              };\n\n              this.indexes.key[key] = record.index;\n              this.records[record.index] = record;\n\n              if (this.versioning) {\n                this.versions[record.key] = lru.factory(VERSIONS);\n                this.versions[record.key].nth = 0;\n              }\n            }\n            // Update\n            else {\n              if (this.versioning) {\n                if (this.versions[record.key] === undefined) {\n                  this.versions[record.key] = lru.factory(VERSIONS);\n                  this.versions[record.key].nth = 0;\n                }\n\n                this.versions[record.key].set(\"v\" + ++this.versions[record.key].nth, this.dump([record])[0]);\n              }\n\n              // By reference\n              record = this.records[record.index];\n\n              if (overwrite) {\n                record.data = {};\n              }\n\n              utility.iterate(data, function (v, k) {\n                record.data[k] = v;\n              });\n\n              // Snapshot that's safe to hand out\n              record = utility.clone(record, true);\n            }\n\n            this.setIndexes(record);\n\n            if (!batch) {\n              if (this.autosave) {\n                this.save();\n              }\n\n              if (this.events) {\n                this.dispatch(\"afterSet\", record);\n              }\n\n              array.each(this.lists, function (i) {\n                i.refresh();\n              });\n            }\n\n            defer.resolve(record);\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        setExpires: {\n\n          /**\n           * Gets or sets an explicit expiration of data\n           *\n           * @method setExpires\n           * @memberOf keigai.DataStore\n           * @param  {Number} arg Milliseconds until data is stale\n           * @return {Object} {@link keigai.DataStore}\n           * @example\n           * store.setExpires( 5 * 60 * 1000 ); // Resyncs every 5 minutes\n           */\n          value: function setExpires(arg) {\n            var id = this.id + \"Expire\";\n            var expires = arg;\n            var self = this;\n\n            // Expiry cannot be less than a second, and must be a valid scenario for consumption; null will disable repetitive expiration\n            if (arg !== null && this.uri === null || arg !== null && (isNaN(arg) || arg < 1000)) {\n              throw new Error(label.invalidArguments);\n            }\n\n            if (this.expires === arg) {\n              return;\n            }\n\n            this.expires = arg;\n\n            utility.clearTimers(id);\n\n            if (arg === null) {\n              return;\n            }\n\n            utility.repeat(function () {\n              if (self.uri === null) {\n                self.setExpires(null);\n\n                return false;\n              }\n\n              self.dispatch(\"beforeExpire\");\n              cache.expire(self.uri);\n              self.dispatch(\"expire\");\n              self.dispatch(\"afterExpire\");\n            }, expires, id, false);\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        setIndexes: {\n\n          /**\n           * Sets indexes for a record using `store.indexes`\n           *\n           * Composite indexes are supported, but require keys be in alphabetical order, e.g. \"age|name\"\n           *\n           * @method setIndexes\n           * @memberOf keigai.DataStore\n           * @param  {Object} arg DataStore Record\n           * @return {Object} {@link keigai.DataStore}\n           * @example\n           * store.setIndexes( record );\n           */\n          value: function setIndexes(arg) {\n            var self = this;\n            var delimter = \"|\";\n\n            arg.indexes = [];\n\n            array.each(this.index, function (i) {\n              var keys = i.split(delimter);\n              var values = \"\";\n\n              if (self.indexes[i] === undefined) {\n                self.indexes[i] = {};\n              }\n\n              array.each(keys, function (k, kdx) {\n                values += (kdx > 0 ? delimter : \"\") + arg.data[k];\n              });\n\n              if (self.indexes[i][values] === undefined) {\n                self.indexes[i][values] = [];\n              }\n\n              if (!array.contains(self.indexes[i][values], arg.index)) {\n                self.indexes[i][values].push(arg.index);\n                arg.indexes.push([i, values]);\n              }\n            });\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        setUri: {\n\n          /**\n           * Sets the RESTful API end point\n           *\n           * @method setUri\n           * @memberOf keigai.DataStore\n           * @param  {String} arg API collection end point\n           * @return {Object}     Deferred\n           * @example\n           * store.setUri( \"...\" ).then( ( records ) => {\n           *   ...\n           * }, ( err ) => {\n           *   ...\n           * } );\n           */\n          value: function setUri(arg) {\n            var _this6 = this;\n            var defer = deferred.factory();\n            var parsed = undefined;\n\n            if (arg !== null && string.isEmpty(arg)) {\n              defer.reject(new Error(label.invalidArguments));\n            }\n\n            if (arg === null) {\n              this.uri = arg;\n            } else {\n              parsed = utility.parse(arg);\n              this.uri = parsed.protocol + \"//\" + parsed.host + parsed.path;\n\n              if (!string.isEmpty(parsed.auth) && !this.headers.authorization && !this.headers.Authorization) {\n                this.headers.Authorization = \"Basic \" + btoa(decodeURIComponent(parsed.auth));\n              }\n\n              this.on(\"expire\", function () {\n                _this6.sync();\n              }, \"resync\", this);\n\n              cache.expire(this.uri);\n\n              this.sync().then(function (arg) {\n                defer.resolve(arg);\n              }, function (e) {\n                defer.reject(e);\n              });\n            }\n\n            return defer;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        sort: {\n\n          /**\n           * Creates, or returns a cached view of the records (not by reference)\n           *\n           * @method sort\n           * @memberOf keigai.DataStore\n           * @param  {String} query  SQL ( style ) order by\n           * @param  {String} create [Optional, default behavior is true, value is false] Boolean determines whether to recreate a view if it exists\n           * @param  {Object} where  [Optional] Object describing the WHERE clause\n           * @return {Object} {@link keigai.Deferred}\n           * @example\n           * store.sort( \"age desc, name\" ).then( ( records ) => {\n           *   ...\n           * }, ( err ) => {\n           *   ...\n           * } );\n           */\n          value: function sort(query, create, where) {\n            create = create === true || where instanceof Object;\n\n            var self = this;\n            var view = string.toCamelCase(string.explode(query).join(\" \"));\n            var defer = deferred.factory();\n\n            // Next phase\n            var next = function (records) {\n              var worker = undefined;\n\n              if (self.total === 0) {\n                defer.resolve([]);\n              } else if (!create && self.views[view]) {\n                defer.resolve(self.views[view]);\n              } else if (webWorker) {\n                defer.then(function (arg) {\n                  self.views[view] = arg;\n\n                  return self.views[view];\n                }, function (e) {\n                  utility.error(e);\n                });\n\n                try {\n                  worker = utility.worker(defer);\n                  worker.postMessage({ cmd: \"sort\", indexes: self.indexes, records: records, query: query });\n                } catch (e) {\n                  // Probably IE10, which doesn't have the correct security flag for local loading\n                  webWorker = false;\n\n                  self.views[view] = array.keySort(records, query, \"data\");\n                  defer.resolve(self.views[view]);\n                }\n              } else {\n                self.views[view] = array.keySort(records, query, \"data\");\n                defer.resolve(self.views[view]);\n              }\n            };\n\n            if (!where) {\n              next(utility.clone(this.records, true));\n            } else {\n              this.select(where).then(next, function (e) {\n                defer.reject(e);\n              });\n            }\n\n            return defer;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        storage: {\n\n          /**\n           * Storage interface\n           *\n           * SQL/NoSQL backends will be used if configured in lieu of localStorage (node.js only)\n           *\n           * @method storage\n           * @memberOf keigai.DataStore\n           * @param  {Mixed}  obj  Record ( Object, key or index ) or store\n           * @param  {Object} op   Operation to perform ( get, remove or set )\n           * @param  {String} type [Optional] Type of Storage to use ( local, session [local] )\n           * @return {Object} {@link keigai.Deferred}\n           * @example\n           * store.storage( store, \"set\" );\n           */\n          value: function storage(obj, op, type) {\n            var self = this;\n            var record = false;\n            var mongo = !string.isEmpty(this.mongodb);\n            var session = type === \"session\" && typeof sessionStorage != \"undefined\";\n            var defer = deferred.factory();\n            var data = undefined,\n                key = undefined,\n                result = undefined;\n\n            if (!regex.number_string_object.test(typeof obj) || !regex.get_remove_set.test(op)) {\n              defer.reject(new Error(label.invalidArguments));\n            } else {\n              record = regex.number_string.test(typeof obj) || obj.hasOwnProperty(\"data\");\n\n              if (op !== \"remove\") {\n                if (record && !(obj instanceof Object)) {\n                  obj = this.get(obj);\n                }\n\n                key = record ? obj.key : obj.id;\n              } else if (op === \"remove\" && record) {\n                key = obj.key || obj;\n              }\n\n              if (mongo) {\n                mongodb.connect(this.mongodb, function (e, db) {\n                  if (e) {\n                    if (db) {\n                      db.close();\n                    }\n\n                    return defer.reject(e);\n                  }\n\n                  db.collection(self.id, function (e, collection) {\n                    if (e) {\n                      db.close();\n                      return defer.reject(e);\n                    }\n\n                    if (op === \"get\") {\n                      if (record) {\n                        collection.find({ _id: obj.key }).limit(1).toArray(function (e, recs) {\n                          db.close();\n\n                          if (e) {\n                            defer.reject(e);\n                          } else if (recs.length === 0) {\n                            defer.resolve(null);\n                          } else {\n                            delete recs[0]._id;\n\n                            self.set(key, recs[0], true).then(function (rec) {\n                              defer.resolve(rec);\n                            }, function (e) {\n                              defer.reject(e);\n                            });\n                          }\n                        });\n                      } else {\n                        collection.find({}).toArray(function (e, recs) {\n                          var i = undefined,\n                              nth = undefined;\n\n                          if (e) {\n                            db.close();\n                            return defer.reject(e);\n                          }\n\n                          i = -1;\n                          nth = recs.length;\n\n                          if (nth > 0) {\n                            self.records = recs.map(function (r) {\n                              var rec = { key: r._id, index: ++i, data: {} };\n\n                              self.indexes.key[rec.key] = rec.index;\n                              rec.data = r;\n                              delete rec.data._id;\n                              self.setIndexes(rec);\n\n                              return rec;\n                            });\n\n                            self.total = nth;\n                          }\n\n                          db.close();\n                          defer.resolve(self.records);\n                        });\n                      }\n                    } else if (op === \"remove\") {\n                      collection.remove(record ? { _id: key } : {}, { safe: true }, function (e, arg) {\n                        db.close();\n\n                        if (e) {\n                          defer.reject(e);\n                        } else {\n                          defer.resolve(arg);\n                        }\n                      });\n                    } else if (op === \"set\") {\n                      if (record) {\n                        collection.update({ _id: obj.key }, obj.data, {\n                          w: 1,\n                          safe: true,\n                          upsert: true\n                        }, function (e, arg) {\n                          db.close();\n\n                          if (e) {\n                            defer.reject(e);\n                          } else {\n                            defer.resolve(arg);\n                          }\n                        });\n                      } else {\n                        // Removing all documents & re-inserting\n                        collection.remove({}, { w: 1, safe: true }, function (e) {\n                          var deferreds = undefined;\n\n                          if (e) {\n                            db.close();\n                            return defer.reject(e);\n                          } else {\n                            deferreds = [];\n\n                            array.each(self.records, function (i) {\n                              var data = {};\n                              var defer2 = deferred.factory();\n\n                              deferreds.push(defer2);\n\n                              utility.iterate(i.data, function (v, k) {\n                                data[k] = v;\n                              });\n\n                              collection.update({ _id: i.key }, data, {\n                                w: 1,\n                                safe: true,\n                                upsert: true\n                              }, function (e, arg) {\n                                if (e) {\n                                  defer2.reject(e);\n                                } else {\n                                  defer2.resolve(arg);\n                                }\n                              });\n                            });\n\n                            utility.when(deferreds).then(function (result) {\n                              db.close();\n                              defer.resolve(result);\n                            }, function (e) {\n                              db.close();\n                              defer.reject(e);\n                            });\n                          }\n                        });\n                      }\n                    } else {\n                      db.close();\n                      defer.reject(null);\n                    }\n                  });\n                });\n              } else {\n                if (op === \"get\") {\n                  result = session ? sessionStorage.getItem(key) : localStorage.getItem(key);\n\n                  if (result !== null) {\n                    result = json.decode(result);\n\n                    if (record) {\n                      self.set(key, result, true).then(function (rec) {\n                        defer.resolve(rec);\n                      }, function (e) {\n                        defer.reject(e);\n                      });\n                    } else {\n                      utility.merge(self, result);\n                      defer.resolve(self);\n                    }\n                  } else {\n                    defer.resolve(self);\n                  }\n\n                  // Decorating loaded state for various code paths\n                  defer.then(function () {\n                    self.loaded = true;\n                  }, function (e) {\n                    throw e;\n                  });\n                } else if (op === \"remove\") {\n                  session ? sessionStorage.removeItem(key) : localStorage.removeItem(key);\n                  defer.resolve(this);\n                } else if (op === \"set\") {\n                  data = json.encode(record ? obj.data : {\n                    total: this.total,\n                    index: this.index,\n                    indexes: this.indexes,\n                    records: this.records\n                  });\n                  session ? sessionStorage.setItem(key, data) : localStorage.setItem(key, data);\n                  defer.resolve(this);\n                } else {\n                  defer.reject(null);\n                }\n              }\n            }\n\n            return defer;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        sync: {\n\n          /**\n           * Syncs the DataStore with a URI representation\n           *\n           * @method sync\n           * @memberOf keigai.DataStore\n           * @return {Object} {@link keigai.Deferred}\n           * @fires keigai.DataStore#beforeSync Fires before syncing the DataStore\n           * @fires keigai.DataStore#afterSync Fires after syncing the DataStore\n           * @fires keigai.DataStore#failedSync Fires when an exception occurs\n           * @example\n           * store.sync().then( ( records ) => {\n           *   ...\n           * }, ( err ) => {\n           *   ...\n           * } );\n           */\n          value: function sync() {\n            var self = this;\n            var events = this.events === true;\n            var defer = deferred.factory();\n\n            /**\n             * Resolves public deferred\n             *\n             * @method success\n             * @memberOf keigai.DataStore.sync\n             * @private\n             * @param  {Object} arg API response\n             * @return {Undefined}  undefined\n             */\n            var success = function (arg) {\n              var data = undefined;\n\n              if (typeof arg != \"object\") {\n                return failure(new Error(label.expectedObject));\n              }\n\n              if (self.source !== null) {\n                arg = utility.walk(arg, self.source);\n              }\n\n              if (arg instanceof Array) {\n                data = arg;\n              } else {\n                data = [arg];\n              }\n\n              self.batch(\"set\", data, true).then(function (arg) {\n                if (events) {\n                  self.dispatch(\"afterSync\", arg);\n                }\n\n                defer.resolve(arg);\n              }, failure);\n            };\n\n            /**\n             * Rejects public deferred\n             *\n             * @method failure\n             * @memberOf keigai.DataStore.sync\n             * @private\n             * @param  {Object} e Error instance\n             * @return {Undefined} undefined\n             */\n            var failure = function (e) {\n              if (events) {\n                self.dispatch(\"failedSync\", e);\n              }\n\n              defer.reject(e);\n            };\n\n            if (this.uri === null || string.isEmpty(this.uri)) {\n              defer.reject(new Error(label.invalidArguments));\n            } else {\n              if (events) {\n                this.dispatch(\"beforeSync\", this.uri);\n              }\n\n              if (this.callback !== null) {\n                client.jsonp(this.uri, { callback: this.callback }).then(success, failure);\n              } else {\n                client.request(this.uri, \"GET\", null, utility.merge({ withCredentials: this.credentials }, this.headers)).then(success, failure);\n              }\n            }\n\n            return defer;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        teardown: {\n\n          /**\n           * Tears down a store & expires all records associated to an API\n           *\n           * @method teardown\n           * @memberOf keigai.DataStore\n           * @return {Object} {@link keigai.DataStore}\n           * @example\n           * store.teardown();\n           */\n          value: function teardown() {\n            var uri = this.uri;\n            var id = undefined;\n\n            if (uri !== null) {\n              cache.expire(uri, true);\n\n              id = this.id + \"DataExpire\";\n              utility.clearTimers(id);\n\n              array.each(this.records, function (i) {\n                var recordUri = uri + \"/\" + i.key;\n\n                cache.expire(recordUri, true);\n              });\n            }\n\n            array.each(this.lists, function (i) {\n              i.teardown(true);\n            });\n\n            this.clear(true);\n            this.dispatch(\"afterTeardown\");\n\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        undo: {\n\n          /**\n           * Undoes the last modification to a record, if it exists\n           *\n           * @method undo\n           * @memberOf keigai.DataStore\n           * @param  {Mixed}  key     Key or index\n           * @param  {String} version [Optional] Version to restore\n           * @return {Object}         Deferred\n           * @example\n           * // Didn't like the new version, so undo the change\n           * store.undo( \"key\", \"v1\" );\n           */\n          value: function undo(key, version) {\n            var record = this.get(key);\n            var defer = deferred.factory();\n            var versions = this.versions[record.key];\n            var previous = undefined;\n\n            if (record === undefined) {\n              defer.reject(new Error(label.invalidArguments));\n            } else {\n              if (versions) {\n                previous = versions.get(version || versions.first);\n\n                if (previous === undefined) {\n                  defer.reject(label.datastoreNoPrevVersion);\n                } else {\n                  this.set(key, previous).then(function (arg) {\n                    defer.resolve(arg);\n                  }, function (e) {\n                    defer.reject(e);\n                  });\n                }\n              } else {\n                defer.reject(label.datastoreNoPrevVersion);\n              }\n            }\n\n            return defer;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        unique: {\n\n          /**\n           * Returns Array of unique values of `key`\n           *\n           * @method unique\n           * @memberOf keigai.DataStore\n           * @param  {String} key Field to compare\n           * @return {Array}      Array of values\n           * @example\n           * let ages = store.unique( \"age\" );\n           */\n          value: function unique(key) {\n            return array.unique(this.records.map(function (i) {\n              return i.data[key];\n            }));\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        update: {\n\n          /**\n           * Applies a difference to a record\n           *\n           * Use `data.set()` if `data` is the complete field set\n           *\n           * @method update\n           * @memberOf keigai.DataStore\n           * @param  {Mixed}  key  Key or index\n           * @param  {Object} data Key:Value pairs to set as field values\n           * @return {Object} {@link keigai.Deferred}\n           * @example\n           * store.update( \"key\", {age: 34} );\n           */\n          value: function update(key, data) {\n            var record = this.get(key);\n            var defer = deferred.factory();\n\n            if (record === undefined) {\n              defer.reject(new Error(label.invalidArguments));\n            } else {\n              this.set(key, utility.merge(record.data, data)).then(function (arg) {\n                defer.resolve(arg);\n              }, function (e) {\n                defer.reject(e);\n              });\n            }\n\n            return defer;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        }\n      });\n\n      return DataStore;\n    })(Base);\n\n    /**\n     * @namespace store\n     */\n    var store = {\n      /**\n       * Decorates a DataStore on an Object\n       *\n       * @method factory\n       * @memberOf store\n       * @param  {Mixed}  recs [Optional] Data to set with this.batch\n       * @param  {Object} args [Optional] Arguments to set on the store\n       * @return {Object} {@link keigai.DataStore}\n       * @example\n       * let store = keigai.store(null, {key: \"guid\"});\n       *\n       * store.setUri( \"http://...\" ).then( ( records ) => {\n       *   // Do something with the records\n       * }, ( e ) => {\n       *   // Handle `e`\n       * } );\n       */\n      factory: function (recs, args) {\n        var obj = new DataStore();\n\n        if (args instanceof Object) {\n          utility.merge(obj, args);\n        }\n\n        if (recs !== null && typeof recs == \"object\") {\n          obj.batch(\"set\", recs);\n        }\n\n        return obj;\n      },\n\n      /**\n       * DataStore worker handler\n       *\n       * @method worker\n       * @memberOf store\n       * @param  {Object} ev Event\n       * @return {Undefined} undefined\n       * @private\n       */\n      worker: function (ev) {\n        var cmd = ev.data.cmd;\n        var records = ev.data.records;\n        var clauses = undefined,\n            cond = undefined,\n            functions = undefined,\n            indexes = undefined,\n            index = undefined,\n            result = undefined,\n            sorted = undefined,\n            where = undefined,\n            values = undefined;\n\n        if (cmd === \"select\") {\n          where = JSON.parse(ev.data.where);\n          functions = ev.data.functions;\n          clauses = array.fromObject(where);\n          sorted = array.flat(clauses).filter(function (i, idx) {\n            return idx % 2 === 0;\n          }).sort(array.sort);\n          index = sorted.join(\"|\");\n          values = sorted.map(function (i) {\n            return where[i];\n          }).join(\"|\");\n          indexes = ev.data.indexes;\n          cond = \"return ( \";\n\n          if (functions.length === 0 && indexes[index]) {\n            result = (indexes[index][values] || []).map(function (i) {\n              return records[i];\n            });\n          } else {\n            if (clauses.length > 1) {\n              array.each(clauses, function (i, idx) {\n                var b1 = \"( \";\n\n                if (idx > 0) {\n                  b1 = \" && ( \";\n                }\n\n                if (array.contains(functions, i[0])) {\n                  cond += b1 + i[1] + \"( rec.data[\\\"\" + i[0] + \"\\\"] ) )\";\n                } else if (!isNaN(i[1])) {\n                  cond += b1 + \"rec.data[\\\"\" + i[0] + \"\\\"] === \" + i[1] + \" )\";\n                } else {\n                  cond += b1 + \"rec.data[\\\"\" + i[0] + \"\\\"] === \\\"\" + i[1] + \"\\\" )\";\n                }\n              });\n            } else {\n              if (array.contains(functions, clauses[0][0])) {\n                cond += clauses[0][1] + \"( rec.data[\\\"\" + clauses[0][0] + \"\\\"] )\";\n              } else if (!isNaN(clauses[0][1])) {\n                cond += \"rec.data[\\\"\" + clauses[0][0] + \"\\\"] === \" + clauses[0][1];\n              } else {\n                cond += \"rec.data[\\\"\" + clauses[0][0] + \"\\\"] === \\\"\" + clauses[0][1] + \"\\\"\";\n              }\n            }\n\n            cond += \" );\";\n\n            result = records.filter(new Function(\"rec\", cond));\n          }\n        } else if (cmd === \"sort\") {\n          result = array.keySort(records, ev.data.query, \"data\");\n        }\n\n        postMessage(result);\n      }\n    };\n\n    /**\n     * @namespace string\n     */\n    var string = {\n      /**\n       * Capitalizes the String\n       *\n       * @method capitalize\n       * @memberOf string\n       * @param  {String}  obj String to capitalize\n       * @param  {Boolean} all [Optional] Capitalize each word\n       * @return {String}      Capitalized String\n       * @example\n       * keigai.util.string.capitalize( \"hello\" ); // \"Hello\"\n       */\n      capitalize: function (obj) {\n        var all = arguments[1] === undefined ? false : arguments[1];\n        var result = undefined;\n\n        if (all) {\n          result = string.explode(obj, \" \").map(function (i) {\n            return i.charAt(0).toUpperCase() + i.slice(1);\n          }).join(\" \");\n        } else {\n          result = obj.charAt(0).toUpperCase() + obj.slice(1);\n        }\n\n        return result;\n      },\n\n      /**\n       * Escapes meta characters within a string\n       *\n       * @method escape\n       * @memberOf string\n       * @param  {String} obj String to escape\n       * @return {String}     Escaped string\n       * @example\n       * keigai.util.string.escape( \"{hello}\" ); // \"\\{hello\\}\"\n       */\n      escape: function (obj) {\n        return obj.replace(/[\\-\\[\\]{}()*+?.,\\\\\\/\\^\\$|#\\s]/g, \"\\\\$&\");\n      },\n\n      /**\n       * Splits a string on comma, or a parameter, and trims each value in the resulting Array\n       *\n       * @method explode\n       * @memberOf string\n       * @param  {String} obj String to capitalize\n       * @param  {String} arg String to split on\n       * @return {Array}      Array of the exploded String\n       * @example\n       * keigai.util.array.each( keigai.util.string.explode( \"abc, def\" ), ( i ) => {\n       *   ...\n       * } );\n       */\n      explode: function (obj) {\n        var arg = arguments[1] === undefined ? \",\" : arguments[1];\n        return string.trim(obj).split(new RegExp(\"\\\\s*\" + arg + \"\\\\s*\"));\n      },\n\n      /**\n       * Creates a String representation of an Object, preserving Functions\n       *\n       * Nested Objects are not supported\n       *\n       * @method fromObject\n       * @memberOf string\n       * @param  {Object} obj  Object to convert\n       * @param  {String} name [Optional] Name of Object\n       * @return {String}      String representation\n       * @example\n       * keigai.util.string.fromObject( {a: true, b: false}, \"stats\" ); // \"stats = {'a': true,'b':false}\"\n       */\n      fromObject: function (obj, name) {\n        var result = (name ? name + \" = {\" : \"{\") + \"\\n\";\n\n        utility.iterate(obj, function (v, k) {\n          result += \"\\\"\" + k + \"\\\":\" + v.toString() + \",\\n\";\n        });\n\n        result = result.replace(/\\[object Object\\]/g, \"{}\").replace(/,\\n$/, \"\\n\") + \"}\";\n\n        return result;\n      },\n\n      /**\n       * Replaces all spaces in a string with dashes\n       *\n       * @method hyphenate\n       * @memberOf string\n       * @param  {String} obj   String to hyphenate\n       * @param {Boolean} camel [Optional] Hyphenate camelCase\n       * @return {String}       String with dashes instead of spaces\n       * @example\n       * keigai.util.string.hyphenate( \"hello world\" ); // \"hello-world\"\n       */\n      hyphenate: function (obj) {\n        var camel = arguments[1] === undefined ? false : arguments[1];\n        var result = string.trim(obj).replace(/\\s+/g, \"-\");\n\n        if (camel === true) {\n          result = result.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n        }\n\n        return result;\n      },\n\n      /**\n       * Tests if a string is a boolean\n       *\n       * @method isBoolean\n       * @memberOf string\n       * @param  {String}  obj String to test\n       * @return {Boolean}     Result of test\n       * @example\n       * if ( keigai.util.string.isBoolean( ... ) {\n       *   ...\n       * } );\n       */\n      isBoolean: function (obj) {\n        return regex.bool.test(obj);\n      },\n\n      /**\n       * Tests if a string is empty\n       *\n       * @method isEmpty\n       * @memberOf string\n       * @param  {String}  obj String to test\n       * @return {Boolean}     Result of test\n       * @example\n       * if ( !keigai.util.string.isEmpty( ... ) {\n       *   ...\n       * } );\n       */\n      isEmpty: function (obj) {\n        return string.trim(obj) === \"\";\n      },\n\n      /**\n       * Tests if a string is a number\n       *\n       * @method isNumber\n       * @memberOf string\n       * @param  {String}  obj String to test\n       * @return {Boolean}     Result of test\n       * @example\n       * if ( keigai.util.string.isNumber( ... ) {\n       *   ...\n       * } );\n       */\n      isNumber: function (obj) {\n        return regex.number.test(obj);\n      },\n\n      /**\n       * Tests if a string is a URL\n       *\n       * @method isUrl\n       * @memberOf string\n       * @param  {String}  obj String to test\n       * @return {Boolean}     Result of test\n       * @example\n       * if ( keigai.util.string.isUrl( ... ) {\n       *   ...\n       * } );\n       */\n      isUrl: function (obj) {\n        return regex.url.test(obj);\n      },\n\n      /**\n       * Transforms the case of a String into CamelCase\n       *\n       * @method toCamelCase\n       * @memberOf string\n       * @param  {String} obj String to capitalize\n       * @return {String}     Camel case String\n       * @example\n       * keigai.util.string.toCamelCase( \"hello world\" ); // \"helloWorld\"\n       */\n      toCamelCase: function (obj) {\n        var s = string.trim(obj).replace(/\\.|_|-|\\@|\\[|\\]|\\(|\\)|\\#|\\$|\\%|\\^|\\&|\\*|\\s+/g, \" \").toLowerCase().split(regex.space_hyphen);\n        var r = [];\n\n        array.each(s, function (i, idx) {\n          r.push(idx === 0 ? i : string.capitalize(i));\n        });\n\n        return r.join(\"\");\n      },\n\n      /**\n       * Returns singular form of the string\n       *\n       * @method singular\n       * @memberOf string\n       * @param  {String} obj String to transform\n       * @return {String}     Transformed string\n       * @example\n       * keigai.util.string.singular( \"cans\" ); // \"can\"\n       */\n      singular: function (obj) {\n        return obj.replace(/oe?s$/, \"o\").replace(/ies$/, \"y\").replace(/ses$/, \"se\").replace(/s$/, \"\");\n      },\n\n      /**\n       * Casts a String to a Function\n       *\n       * @method toFunction\n       * @memberOf string\n       * @param  {String} obj String to cast\n       * @return {Function}   Function\n       * @example\n       * let fn = someFunction.toString();\n       *\n       * ...\n       *\n       * let func = keigai.util.string.toFunction( fn );\n       */\n      toFunction: function (obj) {\n        var args = string.trim(obj.replace(/^.*\\(/, \"\").replace(/[\\t|\\r|\\n|\\\"|\\']+/g, \"\").replace(/\\).*/, \"\"));\n        var body = string.trim(obj.replace(/^.*\\{/, \"\").replace(/\\}$/, \"\"));\n\n        return Function.apply(Function, string.explode(args).concat([body]));\n      },\n\n      /**\n       * Trims the whitespace around a String\n       *\n       * @method trim\n       * @memberOf string\n       * @param  {String} obj String to capitalize\n       * @return {String}     Trimmed String\n       * @example\n       * keigai.util.string.trim( \"  hello world \" ); // \"hello world\"\n       */\n      trim: function (obj) {\n        return obj.replace(/^(\\s+|\\t+|\\n+)|(\\s+|\\t+|\\n+)$/g, \"\");\n      },\n\n      /**\n       * Uncamelcases the String\n       *\n       * @method unCamelCase\n       * @memberOf string\n       * @param  {String} obj String to uncamelcase\n       * @return {String}     Uncamelcased String\n       */\n      unCamelCase: function (obj) {\n        return string.trim(obj.replace(/([A-Z])/g, \" $1\").toLowerCase());\n      },\n\n      /**\n       * Uncapitalizes the String\n       *\n       * @method uncapitalize\n       * @memberOf string\n       * @param  {String} obj String to uncapitalize\n       * @return {String}     Uncapitalized String\n       * @example\n       * keigai.util.string.uncapitalize( \"Hello\" ); // \"hello\"\n       */\n      uncapitalize: function (obj) {\n        var result = string.trim(obj);\n\n        return result.charAt(0).toLowerCase() + result.slice(1);\n      },\n\n      /**\n       * Replaces all hyphens with spaces\n       *\n       * @method unhyphenate\n       * @memberOf string\n       * @param  {String}  obj  String to unhypenate\n       * @param  {Boolean} caps [Optional] True to capitalize each word\n       * @return {String}       Unhyphenated String\n       * @example\n       * keigai.util.string.unhyphenate( \"hello-world\" );       // \"hello world\"\n       * keigai.util.string.unhyphenate( \"hello-world\", true ); // \"Hello World\"\n       */\n      unhyphenate: function (obj) {\n        var caps = arguments[1] === undefined ? false : arguments[1];\n        if (caps !== true) {\n          return string.explode(obj, \"-\").join(\" \");\n        } else {\n          return string.explode(obj, \"-\").map(function (i) {\n            return string.capitalize(i);\n          }).join(\" \");\n        }\n      }\n    };\n\n    /**\n     * @namespace utility\n     */\n    var utility = {\n      /**\n       * Collection of timers\n       *\n       * @memberOf utility\n       * @type {Object}\n       * @private\n       */\n      timer: {},\n\n      /**\n       * Collection of repeating functions\n       *\n       * @memberOf utility\n       * @type {Object}\n       * @private\n       */\n      repeating: {},\n\n      /**\n       * Creates Elements or Queries the DOM using CSS selectors\n       *\n       * @method $\n       * @memberOf utility\n       * @param  {Mixed} arg HTML, or Comma delimited string of CSS selectors\n       * @return {Array}     Array of matching Elements\n       * @example\n       * let $ = keigai.util.$;\n       *\n       * // Looking for Elements\n       * $( \".someClass\" ).forEach( ( i ) => {\n       *   ...\n       * } );\n       *\n       * // Creating an H1 Element\n       * $( \"&lt;h1&gt;\" ).forEach( ( i ) => {\n       *   ...\n       * } );\n       */\n      $: function (arg) {\n        var result = undefined;\n\n        // Nothing\n        if (!arg) {}\n        // HTML\n        else if (regex.html.test(arg)) {\n          result = [element.create(arg)];\n        }\n        // CSS selector(s)\n        else {\n          arg = string.trim(arg);\n\n          if (arg.indexOf(\",\") === -1) {\n            result = utility.dom(arg);\n\n            if (result) {\n              if (isNaN(result.length)) {\n                result = [result];\n              }\n            } else {\n              result = [];\n            }\n          } else {\n            result = [];\n\n            array.each(string.explode(arg), function (query) {\n              var obj = utility.dom(query);\n\n              if (obj instanceof Array) {\n                result = result.concat(obj);\n              } else if (obj) {\n                result.push(obj);\n              }\n            });\n          }\n        }\n\n        return result;\n      },\n\n      /**\n       * Creates an instance of Base\n       *\n       * @method base\n       * @memberOf utility\n       * @param  {Object} arg [Optional] Decorative Object\n       * @return {Object}     Instance of Base\n       */\n      base: function (arg) {\n        var obj = new Base();\n\n        if (arg instanceof Object) {\n          utility.merge(obj, arg);\n        }\n\n        obj.observer = observable.factory();\n\n        return obj;\n      },\n\n      /**\n       * Blob factory\n       *\n       * @method blob\n       * @memberOf utility\n       * @param  {String} arg String to convert to a Blob\n       * @return {Object}     Blob\n       * @private\n       */\n      blob: function (arg) {\n        var obj = undefined;\n\n        try {\n          obj = new Blob([arg], { type: \"application/javascript\" });\n        } catch (e) {\n          if (!global.BlobBuilder) {\n            global.BlobBuilder = global.MSBlobBuilder || global.WebKitBlobBuilder || global.MozBlobBuilder;\n          }\n\n          obj = new global.BlobBuilder().append(arg).getBlob();\n        }\n\n        return obj;\n      },\n\n      /**\n       * Clears deferred & repeating functions\n       *\n       * @method clearTimers\n       * @memberOf utility\n       * @param  {String} id ID of timer( s )\n       * @return {Undefined} undefined\n       * @example\n       * keigai.util.clearTimers( 'helloWorld' );\n       */\n      clearTimers: function (id) {\n        // deferred\n        if (utility.timer[id]) {\n          clearTimeout(utility.timer[id]);\n          delete utility.timer[id];\n        }\n\n        // repeating\n        if (utility.repeating[id]) {\n          clearTimeout(utility.repeating[id]);\n          delete utility.repeating[id];\n        }\n      },\n\n      /**\n       * Clones an Object\n       *\n       * @method clone\n       * @memberOf utility\n       * @param  {Object}  obj     Object to clone\n       * @param  {Boolean} shallow [Optional] Create a shallow clone, which doesn't maintain prototypes, default is `false`\n       * @return {Object}          Clone of obj\n       * @example\n       * let x = {a: true, b: false},\n       *     y = keigai.util.clone( x, true );\n       *\n       * y.a; // true\n       */\n      clone: function (obj) {\n        var shallow = arguments[1] === undefined ? false : arguments[1];\n        var clone = undefined,\n            result = undefined;\n\n        if (shallow === true) {\n          return obj !== undefined && obj !== null ? JSON.parse(JSON.stringify(obj)) : obj;\n        } else if (!obj || regex.primitive.test(typeof obj) || obj instanceof RegExp) {\n          return obj;\n        } else if (obj instanceof Array) {\n          result = [];\n\n          array.each(obj, function (i, idx) {\n            result[idx] = utility.clone(i);\n          });\n\n          return result;\n        } else if (!server && !client.ie && obj instanceof Document) {\n          return xml.decode(xml.encode(obj));\n        } else if (typeof obj.__proto__ != \"undefined\") {\n          return utility.extend(obj.__proto__, obj);\n        } else if (obj instanceof Object) {\n          // If JSON encoding fails due to recursion, the original Object is returned because it's assumed this is for decoration\n          clone = json.encode(obj, true);\n\n          if (clone !== undefined) {\n            clone = json.decode(clone);\n\n            // Decorating Functions that would be lost with JSON encoding/decoding\n            utility.iterate(obj, function (v, k) {\n              if (typeof v == \"function\") {\n                clone[k] = v;\n              }\n            });\n          } else {\n            clone = obj;\n          }\n\n          return clone;\n        } else {\n          return obj;\n        }\n      },\n\n      /**\n       * Coerces a String to a Type\n       *\n       * @method coerce\n       * @memberOf utility\n       * @param  {String} value String to coerce\n       * @return {Mixed}        Primitive version of the String\n       * @example\n       * keigai.util.coerce( \"1\" ); // 1\n       */\n      coerce: function (value) {\n        var tmp = undefined;\n\n        if (value === null || value === undefined) {\n          return undefined;\n        } else if (value === \"true\") {\n          return true;\n        } else if (value === \"false\") {\n          return false;\n        } else if (value === \"null\") {\n          return null;\n        } else if (value === \"undefined\") {\n          return undefined;\n        } else if (value === \"\") {\n          return value;\n        } else if (!isNaN(tmp = Number(value))) {\n          return tmp;\n        } else if (regex.json_wrap.test(value)) {\n          return json.decode(value, true) || value;\n        } else {\n          return value;\n        }\n      },\n\n      /**\n       * Recompiles a RegExp by reference\n       *\n       * This is ideal when you need to recompile a regex for use within a conditional statement\n       *\n       * @method compile\n       * @memberOf utility\n       * @param  {Object} regex     RegExp\n       * @param  {String} pattern   Regular expression pattern\n       * @param  {String} modifiers Modifiers to apply to the pattern\n       * @return {Boolean}          true\n       * @private\n       */\n      compile: function (reg, pattern, modifiers) {\n        reg.compile(pattern, modifiers);\n\n        return true;\n      },\n\n      /**\n       * Curries a Function\n       *\n       * Note: Function to curry must return a Function\n       *\n       * @method curry\n       * @memberOf utility\n       * @return {Function} Curried Function\n       * @example\n       * function f ( a, b ) {\n       *   return ( n ) => {\n       *     return ( a + b ) * n;\n       *   };\n       * }\n       *\n       * let g = keigai.util.curry( f, 2, 8 );\n       *\n       * g( 5 ); // 50\n       */\n      curry: function (fn) {\n        for (var _len14 = arguments.length, args = Array(_len14 > 1 ? _len14 - 1 : 0), _key14 = 1; _key14 < _len14; _key14++) {\n          args[_key14 - 1] = arguments[_key14];\n        }\n\n        var cfn = fn.apply(fn, args);\n\n        return function () {\n          for (var _len15 = arguments.length, args = Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n            args[_key15] = arguments[_key15];\n          }\n\n          return cfn.apply(cfn, args);\n        };\n      },\n\n      /**\n       * Defers the execution of Function by at least the supplied milliseconds.\n       * Timing may vary under \"heavy load\" relative to the CPU & client JavaScript engine.\n       *\n       * @method defer\n       * @memberOf utility\n       * @param  {Function} fn     Function to defer execution of\n       * @param  {Number}   ms     Milliseconds to defer execution\n       * @param  {Number}   id     [Optional] ID of the deferred function\n       * @param  {Boolean}  repeat [Optional] Describes the execution, default is `false`\n       * @return {String}          ID of the timer\n       * @example\n       * keigai.util.defer( () => {\n       *   console.log( 'hello world' );\n       * }, 1000, 'helloWorld', true );\n       */\n      defer: function (fn, ms, id) {\n        var ms = arguments[1] === undefined ? 0 : arguments[1];\n        var repeat = arguments[3] === undefined ? false : arguments[3];\n        var op = undefined;\n\n        if (id !== undefined) {\n          utility.clearTimers(id);\n        } else {\n          id = utility.uuid(true);\n        }\n\n        op = function () {\n          utility.clearTimers(id);\n          fn();\n        };\n\n        utility[repeat ? \"repeating\" : \"timer\"][id] = setTimeout(op, ms);\n\n        return id;\n      },\n\n      /**\n       * Async delay strategy\n       *\n       * @method delay\n       * @memberOf promise\n       * @return {Function} Delay method\n       * @private\n       */\n      delay: (function () {\n        if (typeof setImmediate != \"undefined\") {\n          return function (arg) {\n            setImmediate(arg);\n          };\n        } else if (typeof process != \"undefined\") {\n          return process.nextTick;\n        } else {\n          return function (arg) {\n            setTimeout(arg, 0);\n          };\n        }\n      })(),\n\n      /**\n       * Queries DOM with fastest method\n       *\n       * @method dom\n       * @memberOf utility\n       * @param  {String} arg DOM query\n       * @return {Mixed}      undefined, Element, or Array of Elements\n       * @private\n       */\n      dom: function (arg) {\n        var result = undefined;\n\n        if (!regex.selector_complex.test(arg)) {\n          if (regex.hash.test(arg)) {\n            result = document.getElementById(arg.replace(regex.hash, \"\")) || undefined;\n          } else if (regex.klass.test(arg)) {\n            result = array.cast(document.getElementsByClassName(arg.replace(regex.klass, \"\")));\n          } else if (regex.word.test(arg)) {\n            result = array.cast(document.getElementsByTagName(arg));\n          } else {\n            result = array.cast(document.querySelectorAll(arg));\n          }\n        } else {\n          result = array.cast(document.querySelectorAll(arg));\n        }\n\n        return result;\n      },\n\n      /**\n       * Encodes a UUID to a DOM friendly ID\n       *\n       * @method domId\n       * @memberOf utility\n       * @param  {String} UUID\n       * @return {String} DOM friendly ID\n       * @private\n       */\n      domId: function (arg) {\n        return \"a\" + arg.replace(/-/g, \"\").slice(1);\n      },\n\n      /**\n       * Error handling, with history in `error.log`\n       *\n       * @method error\n       * @memberOf utility\n       * @param  {Mixed}   e       Error object or message to display\n       * @param  {Array}   args    Array of arguments from the callstack\n       * @param  {Mixed}   scope   Entity that was \"this\"\n       * @param  {Boolean} warning [Optional] Will display as console warning if true\n       * @return {Undefined}       undefined\n       * @private\n       */\n      error: function (e, args, scope, warning) {\n        var o = {\n          arguments: args ? array.cast(args) : [],\n          message: e.message || e,\n          number: e.number ? e.number & 65535 : undefined,\n          scope: scope,\n          stack: e.stack || undefined,\n          timestamp: new Date().toUTCString(),\n          type: e.type || \"TypeError\"\n        };\n\n        utility.log(o.stack || o.message, warning !== true ? \"error\" : \"warn\");\n\n        return undefined;\n      },\n\n      /**\n       * Creates a \"class\" extending Object, with optional decoration. SuperClass can be called from `super` property.\n       *\n       * @method extend\n       * @memberOf utility\n       * @param  {Object} obj Object to extend\n       * @param  {Object} arg [Optional] Object for decoration\n       * @return {Object}     Decorated obj\n       * @example\n       * let extendObj = keigai.util.extend( someObj, {newProperty: value} );\n       */\n      extend: function (obj, arg) {\n        var o = Object.create(obj);\n\n        if (arg instanceof Object) {\n          utility.merge(o, arg);\n        }\n\n        o[\"super\"] = obj;\n\n        return o;\n      },\n\n      /**\n       * Generates an ID value\n       *\n       * @method genId\n       * @memberOf utility\n       * @param  {Mixed}   obj [Optional] Object to receive id\n       * @param  {Boolean} dom [Optional] Verify the ID is unique in the DOM, default is false\n       * @return {Mixed}       Object or id\n       * @example\n       * let id = keigai.util.genId();\n       */\n      genId: function (obj) {\n        var dom = arguments[1] === undefined ? false : arguments[1];\n        var id = undefined;\n\n        if (obj && (obj.id || obj instanceof Array || (typeof obj == \"string\" || obj instanceof String))) {\n          return obj;\n        }\n\n        if (dom) {\n          do {\n            id = utility.domId(utility.uuid(true));\n          } while (utility.dom(\"#\" + id));\n        } else {\n          id = utility.domId(utility.uuid(true));\n        }\n\n        if (obj && typeof obj == \"object\") {\n          obj.id = id;\n\n          return obj;\n        } else {\n          return id;\n        }\n      },\n\n      /**\n       * Iterates an Object and executes a function against the properties.\n       * Returning `false` halts iteration.\n       *\n       * @method iterate\n       * @memberOf utility\n       * @param  {Object}   obj Object to iterate\n       * @param  {Function} fn  Function to execute against properties\n       * @return {Object}       Object\n       * @example\n       * keigai.util.iterate( {...}, ( value, key ) => {\n       *   ...\n       * } );\n       */\n      iterate: function (obj, fn) {\n        array.each(Object.keys(obj), function (i) {\n          return fn.call(obj, obj[i], i);\n        });\n\n        return obj;\n      },\n\n      /**\n       * Writes argument to the console\n       *\n       * @method log\n       * @memberOf utility\n       * @param  {String} arg    String to write to the console\n       * @param  {String} target [Optional] Target console, default is \"log\"\n       * @return {Undefined}     undefined\n       * @example\n       * keigai.util.log( \"Something bad happened\", \"warn\" );\n       */\n      log: (function () {\n        if (typeof console != \"undefined\") {\n          return function (arg) {\n            var target = arguments[1] === undefined ? \"log\" : arguments[1];\n            var ts = typeof arg != \"object\";\n            var msg = ts ? \"[\" + new Date().toLocaleTimeString() + \"] \" + arg : arg;\n\n            console[target](msg);\n          };\n        } else {\n          return function () {};\n        }\n      })(),\n\n      /**\n       * Merges obj with arg\n       *\n       * @method merge\n       * @memberOf utility\n       * @param  {Object} obj Object to decorate\n       * @param  {Object} arg Decoration\n       * @return {Object}     Decorated Object\n       * @example\n       * let obj = {a: true};\n       *\n       * keigai.util.merge( obj, {b: false} )\n       * console.log(obj); // {a: true, b: false}\n       */\n      merge: function (obj, arg) {\n        var keys = array.keys(obj);\n\n        utility.iterate(arg, function (v, k) {\n          if (!array.contains(keys, k) || v instanceof Function) {\n            obj[k] = v;\n          } else if (obj[k] instanceof Array && v instanceof Array) {\n            array.merge(obj[k], v);\n          } else if (v instanceof Function) {\n            obj[k] = v;\n          } else if (obj[k] instanceof Object && v instanceof Object) {\n            utility.iterate(v, function (x, y) {\n              obj[k][y] = utility.clone(x);\n            });\n          } else {\n            obj[k] = utility.clone(v);\n          }\n        });\n\n        return obj;\n      },\n\n      /**\n       * Parses a URI into an Object\n       *\n       * @method parse\n       * @memberOf utility\n       * @param  {String} uri URI to parse\n       * @return {Object}     Parsed URI\n       * @example\n       * let parsed = keigai.util.parse( location.href );\n       *\n       * parsed;\n       * {\n       *   auth     : \"\",\n       *   hash     : \"\",\n       *   host     : \"\",\n       *   hostname : \"\",\n       *   query    : {},\n       *   pathname : \"\",\n       *   port     : n,\n       *   protocol : \"\",\n       *   search   : \"\",\n       * }\n       */\n      parse: function (uri) {\n        var obj = {};\n        var parsed = {};\n        var host = undefined,\n            protocol = undefined;\n\n        if (uri === undefined) {\n          uri = !server ? location.href : \"\";\n        }\n\n        if (!server) {\n          obj = document.createElement(\"a\");\n          obj.href = uri;\n          host = obj.href.match(regex.host)[1];\n          protocol = obj.href.match(regex.protocol)[1];\n        } else {\n          obj = url.parse(uri);\n        }\n\n        if (server) {\n          utility.iterate(obj, function (v, k) {\n            if (v === null) {\n              obj[k] = undefined;\n            }\n          });\n        }\n\n        parsed = {\n          auth: server ? null : regex.auth.exec(uri),\n          protocol: obj.protocol || protocol,\n          hostname: obj.hostname || host,\n          port: obj.port ? number.parse(obj.port, 10) : \"\",\n          pathname: obj.pathname,\n          search: obj.search || \"\",\n          hash: obj.hash || \"\",\n          host: obj.host || host\n        };\n\n        // 'cause IE is ... IE; required for data.batch()\n        if (client.ie) {\n          if (parsed.protocol === \":\") {\n            parsed.protocol = location.protocol;\n          }\n\n          if (string.isEmpty(parsed.hostname)) {\n            parsed.hostname = location.hostname;\n          }\n\n          if (string.isEmpty(parsed.host)) {\n            parsed.host = location.host;\n          }\n\n          if (parsed.pathname.charAt(0) !== \"/\") {\n            parsed.pathname = \"/\" + parsed.pathname;\n          }\n        }\n\n        parsed.auth = obj.auth || (parsed.auth === null ? \"\" : parsed.auth[1]);\n        parsed.href = obj.href || parsed.protocol + \"//\" + (string.isEmpty(parsed.auth) ? \"\" : parsed.auth + \"@\") + parsed.host + parsed.pathname + parsed.search + parsed.hash;\n        parsed.path = obj.path || parsed.pathname + parsed.search;\n        parsed.query = utility.queryString(null, parsed.search);\n\n        return parsed;\n      },\n\n      /**\n       * Creates a partially applied Function\n       *\n       * @method partial\n       * @memberOf utility\n       * @return {Function} Partial Function\n       * @example\n       * function f ( a, b ) {\n       *   return a + b;\n       * }\n       *\n       * let g = keigai.util.partial( f, 2 );\n       *\n       * g( 2 ); // 4\n       */\n      partial: function (fn) {\n        for (var _len16 = arguments.length, args = Array(_len16 > 1 ? _len16 - 1 : 0), _key16 = 1; _key16 < _len16; _key16++) {\n          args[_key16 - 1] = arguments[_key16];\n        }\n\n        return function () {\n          for (var _len17 = arguments.length, args2 = Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {\n            args2[_key17] = arguments[_key17];\n          }\n\n          return fn.apply(fn, args.concat(args2));\n        };\n      },\n\n      /**\n       * Prevents default behavior of an Event\n       *\n       * @method prevent\n       * @memberOf utility\n       * @param  {Object} ev Event\n       * @return {Object}    Event\n       * @example\n       * keigai.util.prevent( Event );\n       */\n      prevent: function (ev) {\n        if (typeof ev.preventDefault == \"function\") {\n          ev.preventDefault();\n        }\n\n        return ev;\n      },\n\n      /**\n       * Parses a query string & coerces values\n       *\n       * @method queryString\n       * @memberOf utility\n       * @param  {String} arg     [Optional] Key to find in the querystring\n       * @param  {String} qstring [Optional] Query string to parse\n       * @return {Mixed}          Value or Object of key:value pairs\n       * @private\n       */\n      queryString: function (arg, qstring) {\n        var obj = {};\n        var result = qstring !== undefined ? qstring.indexOf(\"?\") > -1 ? qstring.replace(/.*\\?/, \"\") : null : server || string.isEmpty(location.search) ? null : location.search.replace(\"?\", \"\");\n\n        if (result !== null && !string.isEmpty(result)) {\n          result = result.split(\"&\");\n          array.each(result, function (prop) {\n            var item = prop.split(\"=\");\n\n            if (string.isEmpty(item[0])) {\n              return;\n            }\n\n            if (item[1] === undefined) {\n              item[1] = \"\";\n            } else {\n              item[1] = utility.coerce(decodeURIComponent(item[1]));\n            }\n\n            if (obj[item[0]] === undefined) {\n              obj[item[0]] = item[1];\n            } else if (!(obj[item[0]] instanceof Array)) {\n              obj[item[0]] = [obj[item[0]]];\n              obj[item[0]].push(item[1]);\n            } else {\n              obj[item[0]].push(item[1]);\n            }\n          });\n        }\n\n        if (arg !== null && arg !== undefined) {\n          obj = obj[arg];\n        }\n\n        return obj;\n      },\n\n      /**\n       * Accepts Deferreds or Promises as arguments, or an Array of either\n       *\n       * @method race\n       * @memberOf utility\n       * @return {Object} {@link keigai.Deferred}\n       * @example\n       * let deferreds = [],\n       *     defer1    = keigai.util.defer(),\n       *     defer2    = keigai.util.defer();\n       *\n       * deferreds.push( defer1 );\n       * deferreds.push( defer2 );\n       *\n       * // Executes when one deferred is resolved or rejected\n       * keigai.util.race( deferreds ).then( ( arg ) ) => {\n       *   ...\n       * }, ( err ) => {\n       *   ...\n       * } );\n       *\n       * ...\n       *\n       * defer1.resolve( true );\n       * defer2.resolve( true );\n       */\n      race: function () {\n        for (var _len18 = arguments.length, args = Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {\n          args[_key18] = arguments[_key18];\n        }\n\n        var defer = deferred.factory();\n\n        // Did we receive an Array? if so it overrides any other arguments\n        if (args[0] instanceof Array) {\n          args = args[0];\n        }\n\n        // None, end on next tick\n        if (args.length === 0) {\n          defer.resolve(null);\n        }\n        // Setup and wait\n        else {\n          Promise.race(args).then(function (results) {\n            defer.resolve(results);\n          }, function (e) {\n            defer.reject(e);\n          });\n        }\n\n        return defer;\n      },\n\n      /**\n       * Asynchronous DOM rendering (cannot be cancelled, suggested for reactive behavior)\n       *\n       * @method render\n       * @memberOf utility\n       * @param  {Function} fn Function to execute on next 'frame'\n       * @return {Object} {@link keigai.Deferred}\n       * @example\n       * keigai.util.render( () => {\n       *     return keitai.util.element.html( document.querySelector( \"#id\" ), \"Hello World\" )\n       * } ).then( ( arg ) => {\n       *     // arg is the return value of your function\n       * }, ( e ) => {\n       *     // Handle e\n       * } );\n       */\n      render: function (fn) {\n        var defer = deferred.factory();\n\n        RENDER(function (arg) {\n          try {\n            defer.resolve(fn(arg));\n          } catch (e) {\n            defer.reject(e);\n          }\n        });\n\n        return defer;\n      },\n\n      /**\n       * Creates a recursive function. Return false from the function to halt recursion.\n       *\n       * @method repeat\n       * @memberOf utility\n       * @param  {Function} fn  Function to execute repeatedly\n       * @param  {Number}   ms  Milliseconds to stagger the execution\n       * @param  {String}   id  [Optional] Timeout ID\n       * @param  {Boolean}  now Executes `fn` and then setup repetition, default is `true`\n       * @return {String}       Timeout ID\n       * @example\n       * keigai.util.repeat( () => {\n       *   ...\n       *\n       *   // Cancelling repetition at some point in the future\n       *   if ( someCondition ) {\n       *     return false;\n       *   }\n       * }, 1000, \"repeating\" );\n       */\n      repeat: function (fn) {\n        var ms = arguments[1] === undefined ? 10 : arguments[1];\n        var id = arguments[2] === undefined ? utility.uuid(true) : arguments[2];\n        var now = arguments[3] === undefined ? true : arguments[3];\n        return (function () {\n          // Could be valid to return false from initial execution\n          if (now && fn() === false) {\n            return;\n          }\n\n          // Creating repeating execution\n          utility.defer(function () {\n            var recursive = function (fn, ms, id) {\n              if (fn() !== false) {\n                utility.repeating[id] = setTimeout(function () {\n                  recursive.call(recursive, fn, ms, id);\n                }, ms);\n              } else {\n                delete utility.repeating[id];\n              }\n            };\n\n            recursive(fn, ms, id);\n          }, ms, id, true);\n\n          return id;\n        })();\n      },\n\n      /**\n       * Stops an Event from bubbling, & prevents default behavior\n       *\n       * @method stop\n       * @memberOf utility\n       * @param  {Object} ev Event\n       * @return {Object}    Event\n       * @example\n       * keigai.util.stop( Event );\n       */\n      stop: function (ev) {\n        if (typeof ev.stopPropagation == \"function\") {\n          ev.stopPropagation();\n        }\n\n        utility.prevent(ev);\n\n        return ev;\n      },\n\n      /**\n       * Returns the Event target\n       *\n       * @method target\n       * @memberOf utility\n       * @param  {Object} ev Event\n       * @return {Object}    Event target\n       * @example\n       * let target = keigai.util.target( Event );\n       */\n      target: function (ev) {\n        return ev.target || ev.srcElement;\n      },\n\n      /**\n       * Generates a version 4 UUID\n       *\n       * @method uuid\n       * @memberOf utility\n       * @param  {Boolean} strip [Optional] Strips - from UUID\n       * @return {String}        UUID\n       * @example\n       * let uuid4 = keigai.util.uuid();\n       */\n      uuid: function (strip) {\n        var r = [8, 9, \"a\", \"b\"];\n        var s = function () {\n          return ((1 + Math.random()) * 65536 | 0).toString(16).substring(1);\n        };\n        var o = s() + s() + \"-\" + s() + \"-4\" + s().substr(0, 3) + \"-\" + r[Math.floor(Math.random() * 4)] + s().substr(0, 3) + \"-\" + s() + s() + s();\n\n        if (strip === true) {\n          o = o.replace(/-/g, \"\");\n        }\n\n        return o;\n      },\n\n      /**\n       * Walks `obj` and returns `arg`, for when you can't easily access `arg`\n       *\n       * @method  walk\n       * @memberOf utility\n       * @param  {Mixed}  obj  Object or Array\n       * @param  {String} arg  String describing the property to return\n       * @return {Mixed}       Target or undefined\n       * @example\n       * let obj = {a: [{b: true}]};\n       *\n       * keigai.util.walk( obj, \"a[0].b\" ); // true\n       */\n      walk: function (obj, arg) {\n        var output = obj;\n\n        array.each(arg.replace(/\\]$/, \"\").replace(/\\]/g, \".\").replace(/\\.\\./g, \".\").split(/\\.|\\[/), function (i) {\n          if (output[i] === undefined || output[i] === null) {\n            output = undefined;\n            return false;\n          }\n\n          output = output[i];\n        });\n\n        return output;\n      },\n\n      /**\n       * Accepts Deferreds or Promises as arguments, or an Array of either\n       *\n       * @method when\n       * @memberOf utility\n       * @return {Object} {@link keigai.Deferred}\n       * @example\n       * let deferreds = [],\n       *     defer1    = keigai.util.defer(),\n       *     defer2    = keigai.util.defer();\n       *\n       * deferreds.push( defer1 );\n       * deferreds.push( defer2 );\n       *\n       * // Executes when both deferreds have resolved or one has rejected\n       * keigai.util.when( deferreds ).then( ( args ) ) => {\n       *   ...\n       * }, ( err ) => {\n       *   ...\n       * } );\n       *\n       * ...\n       *\n       * defer1.resolve( true );\n       * defer2.resolve( true );\n       */\n      when: function () {\n        for (var _len19 = arguments.length, args = Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {\n          args[_key19] = arguments[_key19];\n        }\n\n        var defer = deferred.factory();\n\n        // Did we receive an Array? if so it overrides any other arguments\n        if (args[0] instanceof Array) {\n          args = args[0];\n        }\n\n        // None, end on next tick\n        if (args.length === 0) {\n          defer.resolve(null);\n        }\n        // Setup and wait\n        else {\n          Promise.all(args).then(function (results) {\n            defer.resolve(results);\n          }, function (e) {\n            defer.reject(e);\n          });\n        }\n\n        return defer;\n      },\n\n      /**\n       * Worker factory\n       *\n       * @method worker\n       * @memberOf utility\n       * @param  {Object} defer Deferred to receive message from Worker\n       * @return {Object}       Worker\n       * @private\n       */\n      worker: function (defer) {\n        var obj = new Worker(WORKER);\n\n        obj.onerror = function (err) {\n          defer.reject(err);\n          obj.terminate();\n        };\n\n        obj.onmessage = function (ev) {\n          defer.resolve(ev.data);\n          obj.terminate();\n        };\n\n        return obj;\n      }\n    };\n\n    /**\n     * XMLHttpRequest shim for node.js\n     *\n     * @method xhr\n     * @private\n     * @return {Object} XMLHttpRequest instance\n     */\n    var xhr = function () {\n      var UNSENT = 0;\n      var OPENED = 1;\n      var HEADERS_RECEIVED = 2;\n      var LOADING = 3;\n      var DONE = 4;\n      var ERR_REFUSED = /ECONNREFUSED/;\n      var ready = new RegExp(HEADERS_RECEIVED + \"|\" + LOADING);\n\n      var headers = {\n        \"user-agent\": \"keigai/1.1.4 node.js/\" + process.versions.node.replace(/^v/, \"\") + \" (\" + string.capitalize(process.platform) + \" V8/\" + process.versions.v8 + \" )\",\n        \"content-type\": \"text/plain\",\n        accept: \"*/*\"\n      };\n\n      /**\n       * Dispatches an event\n       *\n       * @method dispatch\n       * @memberOf xhr\n       * @param  {String} arg Event to dispatch\n       * @return {Object}     XMLHttpRequest instance\n       */\n      var dispatch = function (obj, arg) {\n        var fn = \"on\" + arg;\n\n        if (typeof obj[fn] == \"function\") {\n          obj[fn]();\n        }\n\n        obj.dispatchEvent(arg);\n\n        return obj;\n      };\n\n      /**\n       * Changes the readyState of an XMLHttpRequest\n       *\n       * @method state\n       * @memberOf xhr\n       * @param  {String} arg New readyState\n       * @return {Object}     XMLHttpRequest instance\n       */\n      var state = function (obj, arg) {\n        if (obj.readyState !== arg) {\n          obj.readyState = arg;\n          dispatch(obj, \"readystatechange\");\n\n          if (obj.readyState === DONE && !obj._error) {\n            dispatch(obj, \"load\");\n            dispatch(obj, \"loadend\");\n          }\n        }\n\n        return obj;\n      };\n\n      /**\n       * Response handler\n       *\n       * @method success\n       * @memberOf xhr\n       * @param  {Object} res HTTP(S) Response Object\n       * @return {Undefined}  undefined\n       */\n      var success = function (obj, res) {\n        state(obj, HEADERS_RECEIVED);\n        obj.status = res.statusCode;\n        obj._resheaders = res.headers;\n\n        if (obj._resheaders[\"set-cookie\"] && obj._resheaders[\"set-cookie\"] instanceof Array) {\n          obj._resheaders[\"set-cookie\"] = obj._resheaders[\"set-cookie\"].join(\";\");\n        }\n\n        res.on(\"data\", function (arg) {\n          res.setEncoding(\"utf8\");\n\n          if (obj._send) {\n            if (arg) {\n              obj.responseText += arg;\n            }\n\n            state(obj, LOADING);\n          }\n        });\n\n        res.on(\"end\", function () {\n          if (obj._send) {\n            state(obj, DONE);\n            obj._send = false;\n          }\n        });\n      };\n\n      /**\n       * Response error handler\n       *\n       * @method failure\n       * @memberOf xhr\n       * @param  {Object} e Error\n       * @return {Undefined} undefined\n       */\n      var failure = function (obj, e) {\n        obj.status = ERR_REFUSED.test(e.message) ? 503 : 500;\n        obj.statusText = \"\";\n        obj.responseText = e.message;\n        obj._error = true;\n        obj._send = false;\n        dispatch(obj, \"error\");\n        state(obj, DONE);\n      };\n\n      var XMLHttpRequest = (function (Base) {\n        /**\n         * Creates a new XMLHttpRequest\n         *\n         * @constructor\n         * @private\n         * @memberOf xhr\n         * @return {Object} XMLHttpRequest instance\n         */\n        function XMLHttpRequest() {\n          this.onabort = null;\n          this.onerror = null;\n          this.onload = null;\n          this.onloadend = null;\n          this.onloadstart = null;\n          this.onreadystatechange = null;\n          this.readyState = UNSENT;\n          this.response = null;\n          this.responseText = \"\";\n          this.responseType = \"\";\n          this.responseXML = null;\n          this.status = UNSENT;\n          this.statusText = \"\";\n          this.observer = observable.factory();\n\n          // Psuedo private for prototype chain\n          this._error = false;\n          this._headers = {};\n          this._params = {};\n          this._request = null;\n          this._resheaders = {};\n          this._send = false;\n        }\n\n        _inherits(XMLHttpRequest, Base);\n\n        _prototypeProperties(XMLHttpRequest, null, {\n          abort: {\n\n            /**\n             * Aborts a request\n             *\n             * @method abort\n             * @memberOf XMLHttpRequest\n             * @return {Object} XMLHttpRequest instance\n             */\n            value: function abort() {\n              if (this._request !== null) {\n                this._request.abort();\n                this._request = null;\n                this.responseText = \"\";\n                this.responseXML = \"\";\n                this._error = true;\n                this._headers = {};\n\n                if (this._send === true || ready.test(this.readyState)) {\n                  this._send = false;\n                  state(this, DONE);\n                }\n\n                dispatch(this, \"abort\");\n                this.readyState = UNSENT;\n              }\n\n              return this;\n            },\n            writable: true,\n            enumerable: true,\n            configurable: true\n          },\n          getAllResponseHeaders: {\n\n            /**\n             * Gets all response headers\n             *\n             * @method getAllResponseHeaders\n             * @memberOf XMLHttpRequest\n             * @return {Object} Response headers\n             */\n            value: function getAllResponseHeaders() {\n              var result = \"\";\n\n              if (this.readyState < HEADERS_RECEIVED) {\n                throw new Error(label.invalidStateNoHeaders);\n              }\n\n              utility.iterate(this._resheaders, function (v, k) {\n                result += k + \": \" + v + \"\\n\";\n              });\n\n              return result;\n            },\n            writable: true,\n            enumerable: true,\n            configurable: true\n          },\n          getResponseHeader: {\n\n            /**\n             * Gets a specific response header\n             *\n             * @method getResponseHeader\n             * @memberOf XMLHttpRequest\n             * @param  {String} header Header to get\n             * @return {String}        Response header value\n             */\n            value: function getResponseHeader(header) {\n              if (this.readyState < HEADERS_RECEIVED || this._error) {\n                throw new Error(label.invalidStateNoHeaders);\n              }\n\n              return this._resheaders[header] || this._resheaders[header.toLowerCase()];\n            },\n            writable: true,\n            enumerable: true,\n            configurable: true\n          },\n          open: {\n\n            /**\n             * Prepares an XMLHttpRequest instance to make a request\n             *\n             * @method open\n             * @memberOf XMLHttpRequest\n             * @param  {String}  method   HTTP method\n             * @param  {String}  url      URL to receive request\n             * @param  {Boolean} async    [Optional] Asynchronous request\n             * @param  {String}  user     [Optional] Basic auth username\n             * @param  {String}  password [Optional] Basic auth password\n             * @return {Object}           XMLHttpRequest instance\n             */\n            value: function open(method, url, async, user, password) {\n              var self = this;\n\n              if (async !== true) {\n                throw new Error(label.invalidStateNoSync);\n              }\n\n              this.abort();\n              this._error = false;\n              this._params = {\n                method: method,\n                url: url,\n                async: async || true,\n                user: user || null,\n                password: password || null\n              };\n\n              utility.iterate(headers, function (v, k) {\n                self._headers[k] = v;\n              });\n\n              this.readyState = OPENED;\n\n              return this;\n            },\n            writable: true,\n            enumerable: true,\n            configurable: true\n          },\n          overrideMimeType: {\n\n            /**\n             * Overrides the Content-Type of the request\n             *\n             * @method overrideMimeType\n             * @memberOf XMLHttpRequest\n             * @param  {String} mime Mime type of the request ( media type )\n             * @return {Object}      XMLHttpRequest instance\n             */\n            value: function overrideMimeType(mime) {\n              this._headers[\"content-type\"] = mime;\n\n              return this;\n            },\n            writable: true,\n            enumerable: true,\n            configurable: true\n          },\n          send: {\n\n            /**\n             * Sends an XMLHttpRequest request\n             *\n             * @method send\n             * @memberOf XMLHttpRequest\n             * @param  {Mixed} data [Optional] Payload to send with the request\n             * @return {Object}     XMLHttpRequest instance\n             */\n            value: function send() {\n              var data = arguments[0] === undefined ? null : arguments[0];\n              var self = this;\n              var options = undefined,\n                  parsed = undefined,\n                  request = undefined,\n                  obj = undefined;\n\n              if (this.readyState < OPENED) {\n                throw new Error(label.invalidStateNotOpen);\n              } else if (this._send) {\n                throw new Error(label.invalidStateNotSending);\n              }\n\n              parsed = utility.parse(this._params.url);\n              parsed.port = parsed.port || (parsed.protocol === \"https:\" ? 443 : 80);\n\n              if (this._params.user !== null && this._params.password !== null) {\n                parsed.auth = this._params.user + \":\" + this._params.password;\n              }\n\n              // Specifying Content-Length accordingly\n              if (regex.put_post.test(this._params.method)) {\n                if (data === null) {\n                  this._headers[\"content-length\"] = 0;\n                } else if (typeof data == \"string\") {\n                  this._headers[\"content-length\"] = Buffer.byteLength(data);\n                } else if (data instanceof Buffer || typeof data.toString == \"function\") {\n                  data = data.toString();\n                  this._headers[\"content-length\"] = Buffer.byteLength(data);\n                } else {\n                  throw new Error(label.invalidArguments);\n                }\n              }\n\n              this._headers.host = parsed.host;\n\n              if (this._headers[\"x-requested-with\"] === \"XMLHttpRequest\") {\n                delete this._headers[\"x-requested-with\"];\n              }\n\n              options = {\n                hostname: parsed.hostname,\n                path: parsed.path,\n                port: parsed.port,\n                method: this._params.method,\n                headers: this._headers\n              };\n\n              if (parsed.protocol === \"https:\") {\n                options.rejectUnauthorized = false;\n                options.agent = false;\n              }\n\n              if (parsed.auth) {\n                options.auth = parsed.auth;\n              }\n\n              this._send = true;\n              dispatch(this, \"readystatechange\");\n\n              obj = parsed.protocol === \"http:\" ? http : https;\n\n              request = obj.request(options, function (arg) {\n                success(self, arg);\n              }).on(\"error\", function (e) {\n                failure(self, e);\n              });\n\n              data === null ? request.setSocketKeepAlive(true) : request.write(data, \"utf8\");\n              this._request = request;\n              request.end();\n\n              dispatch(this, \"loadstart\");\n\n              return this;\n            },\n            writable: true,\n            enumerable: true,\n            configurable: true\n          },\n          setRequestHeader: {\n\n            /**\n             * Sets a request header of an XMLHttpRequest instance\n             *\n             * @method setRequestHeader\n             * @memberOf XMLHttpRequest\n             * @param {String} header HTTP header\n             * @param {String} value  Header value\n             * @return {Object}       XMLHttpRequest instance\n             */\n            value: function setRequestHeader(header, value) {\n              if (this.readyState !== OPENED) {\n                throw new Error(label.invalidStateNotUsable);\n              } else if (this._send) {\n                throw new Error(label.invalidStateNotSending);\n              }\n\n              this._headers[header.toLowerCase()] = value;\n\n              return this;\n            },\n            writable: true,\n            enumerable: true,\n            configurable: true\n          }\n        });\n\n        return XMLHttpRequest;\n      })(Base);\n\n      return XMLHttpRequest;\n    };\n\n    /**\n     * WeakMap shim\n     *\n     * @class\n     * @private\n     */\n    var WeakMapShim = (function () {\n      function WeakMapShim() {\n        this.elements = {};\n      }\n\n      _prototypeProperties(WeakMapShim, null, {\n        clear: {\n          value: function clear() {\n            this.elements = {};\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        \"delete\": {\n          value: function _delete(arg) {\n            delete this.elements[arg];\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        has: {\n          value: function has(arg) {\n            return this.elements[arg] !== undefined;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        get: {\n          value: function get(arg) {\n            return this.has(arg) ? this.elements[arg].value : undefined;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        },\n        set: {\n          value: function set(arg, value) {\n            this.elements[arg] = { value: value };\n            return this;\n          },\n          writable: true,\n          enumerable: true,\n          configurable: true\n        }\n      });\n\n      return WeakMapShim;\n    })();\n\n    /**\n     * @namespace xml\n     * @private\n     */\n    var xml = {\n      /**\n       * Returns XML (Document) Object from a String\n       *\n       * @method decode\n       * @memberOf xml\n       * @param  {String} arg XML String\n       * @return {Object}     XML Object or undefined\n       */\n      decode: function (arg) {\n        return new DOMParser().parseFromString(arg, \"text/xml\");\n      },\n\n      /**\n       * Returns XML String from an Object or Array\n       *\n       * @method encode\n       * @memberOf xml\n       * @param  {Mixed} arg Object or Array to cast to XML String\n       * @return {String}    XML String or undefined\n       */\n      encode: function (arg) {\n        var wrap = arguments[1] === undefined ? true : arguments[1];\n        var top = arguments[2] === undefined ? true : arguments[2];\n        try {\n          var _ret = (function () {\n            var x = wrap ? \"<xml>\" : \"\";\n\n            /**\n             * Encodes a value as a node\n             *\n             * @method node\n             * @memberOf xml.encode\n             * @private\n             * @param  {String} name  Node name\n             * @param  {String} value Node value\n             * @return {String}       Node\n             */\n            var node = function (name, value) {\n              var output = \"<n>v</n>\";\n\n              output = output.replace(\"v\", regex.cdata.test(value) ? \"<![CDATA[\" + value + \"]]>\" : value);\n              return output.replace(/<(\\/)?n>/g, \"<$1\" + name + \">\");\n            };\n\n            if (arg !== null && arg.xml) {\n              arg = arg.xml;\n            }\n\n            if (arg instanceof Document) {\n              arg = new XMLSerializer().serializeToString(arg);\n            }\n\n            if (regex.boolean_number_string.test(typeof arg)) {\n              x += node(\"item\", arg);\n            } else if (typeof arg == \"object\") {\n              utility.iterate(arg, function (v, k) {\n                x += xml.encode(v, typeof v == \"object\", false).replace(/item|xml/g, isNaN(k) ? k : \"item\");\n              });\n            }\n\n            x += wrap ? \"</xml>\" : \"\";\n\n            if (top) {\n              x = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF8\\\"?>\" + x;\n            }\n\n            return {\n              v: x\n            };\n          })();\n\n          if (typeof _ret === \"object\") return _ret.v;\n        } catch (e) {\n          utility.error(e, [arg, wrap, top], _this);\n\n          return undefined;\n        }\n      },\n\n      /**\n       * Validates `arg` is XML\n       *\n       * @method valid\n       * @memberOf xml\n       * @param  {String} arg String to validate\n       * @return {Boolean}    `true` if valid XML\n       */\n      valid: function (arg) {\n        return xml.decode(arg).getElementsByTagName(\"parsererror\").length === 0;\n      }\n    };\n\n    /**\n     * Bootstraps environment\n     *\n     * @method bootstrap\n     * @private\n     * @return {Undefined} undefined\n     */\n    var bootstrap = function () {\n      var defineProperty = Object.defineProperty !== undefined;\n      var target = undefined;\n\n      // ES6 Array shims\n      Array.from = Array.from || function (arg) {\n        return [].slice.call(arg);\n      };\n      Array.keys = Array.keys || function (arg) {\n        return Object.keys(arg);\n      };\n\n      // Describing the Client\n      if (!server) {\n        client.version = client.version();\n\n        if (client.ie) {\n          (function () {\n            // IE8 and older is not supported\n            if (client.version < 9) {\n              throw new Error(label.upgrade);\n            }\n\n            target = (global.HTMLElement || global.Element).prototype;\n\n            var ClassList = (function (Array) {\n              function ClassList(obj) {\n                var classes = string.explode(obj.className, \" \");\n                var self = this;\n\n                array.each(classes, function (i) {\n                  self.push(i);\n                });\n              }\n\n              _inherits(ClassList, Array);\n\n              _prototypeProperties(ClassList, null, {\n                add: {\n                  value: function add(arg) {\n                    if (!array.contains(this, arg)) {\n                      this.push(arg);\n                      this.updateClassName();\n                    }\n                  },\n                  writable: true,\n                  enumerable: true,\n                  configurable: true\n                },\n                contains: {\n                  value: function contains(arg) {\n                    return array.contains(this, arg);\n                  },\n                  writable: true,\n                  enumerable: true,\n                  configurable: true\n                },\n                remove: {\n                  value: function remove(arg) {\n                    if (array.contains(this, arg)) {\n                      array.remove(this, arg);\n                      this.updateClassName();\n                    }\n                  },\n                  writable: true,\n                  enumerable: true,\n                  configurable: true\n                },\n                toggle: {\n                  value: function toggle(arg) {\n                    array[array.contains(this, arg) ? \"remove\" : \"add\"](this, arg);\n                    this.updateClassName();\n                  },\n                  writable: true,\n                  enumerable: true,\n                  configurable: true\n                },\n                updateClassName: {\n                  value: function updateClassName() {\n                    this.className = this.join(\" \");\n                  },\n                  writable: true,\n                  enumerable: true,\n                  configurable: true\n                }\n              });\n\n              return ClassList;\n            })(Array);\n\n            if (defineProperty) {\n              Object.defineProperty(target, \"classList\", {\n                get: function () {\n                  return new ClassList(_this);\n                },\n                enumerable: true,\n                configurable: true\n              });\n            } else if (Object.prototype.__defineGetter__) {\n              target.__defineGetter__(\"classList\", function () {\n                return new ClassList(_this);\n              });\n            } else {\n              throw new Error(\"Could not create classList shim\");\n            }\n\n            if (defineProperty) {\n              Object.defineProperty(Element, \"getElementsByClassName\", {\n                get: function (arg) {\n                  return _this.querySelectorAll(\".\" + arg);\n                },\n                enumerable: true,\n                configurable: true\n              });\n            } else if (Object.prototype.__defineGetter__) {\n              target.__defineGetter__(\"getElementsByClassName\", function (arg) {\n                return _this.querySelectorAll(\".\" + arg);\n              });\n            } else {\n              throw new Error(\"Could not create getElementsByClassName shim\");\n            }\n          })();\n        }\n      } else {\n        // XHR shim\n        XMLHttpRequest = xhr();\n      }\n\n      // WeakMap shim for client & server\n      if (WeakMap === null) {\n        WeakMap = WeakMapShim;\n      }\n\n      // DataStore Worker \"script\"\n      if (webWorker) {\n        WORKER = global.URL.createObjectURL(utility.blob(\"var \" + string.fromObject(array, \"array\") + \", \" + string.fromObject(regex, \"regex\") + \", \" + string.fromObject(string, \"string\") + \", \" + string.fromObject(utility, \"utility\") + \"; onmessage = \" + store.worker.toString() + \";\"));\n      }\n\n      TIME = new Date().getTime();\n\n      // Setting up `utility.render()`\n      RENDER = global.requestAnimationFrame || function (fn) {\n        var offset = new Date().getTime() - TIME;\n\n        utility.defer(function () {\n          fn(offset);\n        }, 16, offset);\n      };\n    };\n\n    // Bootstrapping\n    bootstrap();\n\n    // Interface\n    return {\n      filter: filter.factory,\n      list: list.factory,\n      grid: grid.factory,\n      store: store.factory,\n      util: {\n        $: utility.$,\n        array: array,\n        base: utility.base,\n        clearTimers: utility.clearTimers,\n        clone: utility.clone,\n        coerce: utility.coerce,\n        curry: utility.curry,\n        csv: csv,\n        defer: deferred.factory,\n        delay: utility.defer,\n        element: element,\n        extend: utility.extend,\n        genId: utility.genId,\n        iterate: utility.iterate,\n        json: json,\n        jsonp: client.jsonp,\n        log: utility.log,\n        lru: lru.factory,\n        math: math,\n        merge: utility.merge,\n        number: number,\n        observer: observable.factory,\n        parse: utility.parse,\n        partial: utility.partial,\n        prevent: utility.prevent,\n        race: utility.race,\n        render: utility.render,\n        repeat: utility.repeat,\n        request: client.request,\n        stop: utility.stop,\n        string: string,\n        target: utility.target,\n        uuid: utility.uuid,\n        walk: utility.walk,\n        when: utility.when\n      },\n      version: \"1.1.4\"\n    };\n  })();\n\n  // Node, AMD & window supported\n  if (typeof exports != \"undefined\") {\n    module.exports = lib;\n  } else if (typeof define == \"function\") {\n    define(function () {\n      return lib;\n    });\n  } else {\n    global.keigai = lib;\n  }\n})(this);"]}